Compiling Program: C:\DataFlex Projects\OrderTutorial\AppSrc\Order.src
Memory Available: 16409817088
1>Use DFAllEnt.pkg
Using pre-compiled package DFALLENT.PKG
Including file: dfallent.x64.pkd    (C:\Program Files\DataFlex 20.1\Pkg\dfallent.x64.pkd)
73081>Use cCJStandardCommandBarSystem.pkg
Including file: cCJStandardCommandBarSystem.pkg    (C:\Program Files\DataFlex 20.1\Pkg\cCJStandardCommandBarSystem.pkg)
73081>>>// these are all the packages used in a standard MDI menubar/toolbar system
73081>>>
73081>>>Use cCJCommandBarSystem.pkg
73081>>>Use cCJStandardMenuItemClasses.pkg
Including file: cCJStandardMenuItemClasses.pkg    (C:\Program Files\DataFlex 20.1\Pkg\cCJStandardMenuItemClasses.pkg)
73081>>>>>Use Dfpanel.pkg
73081>>>>>Use cCJCommandBarSystem.pkg
73081>>>>>Use LanguageText.pkg
73081>>>>>
73081>>>>>
73081>>>>>Class cCJUndoMenuItem is a cCJMenuItem
73082>>>>>    
73082>>>>>    Procedure Construct_Object
73084>>>>>        Forward Send Construct_Object
73086>>>>>        Set psCaption   to C_$CaptionUndo
73087>>>>>        Set psToolTip to C_$ToolTipUndo
73088>>>>>        Set psDescription to C_$DescUndo
73089>>>>>        Set psImage to "ActionUndo.ico"
73090>>>>>        Set pbActiveUpdate to True
73091>>>>>        Set psCategory to C_$CategoryEdit
73092>>>>>        Set psShortcut to C_$Key_Ctrl_Z
73093>>>>>    End_Procedure
73094>>>>>    
73094>>>>>    Procedure OnExecute Variant vCommandBarControl
73096>>>>>        Send Undo of (focus(Self))
73097>>>>>    End_Procedure
73098>>>>>    
73098>>>>>    Function IsEnabled Returns Boolean
73100>>>>>        Boolean bEnabled
73100>>>>>        Get CanUndo of (Focus(Self)) to bEnabled
73101>>>>>        Function_Return bEnabled
73102>>>>>    End_Function
73103>>>>>    
73103>>>>>End_Class
73104>>>>>
73104>>>>>
73104>>>>>Class cCJDeleteEditMenuItem is a cCJMenuItem
73105>>>>>    
73105>>>>>    Procedure Construct_Object
73107>>>>>        Forward Send Construct_Object
73109>>>>>        Set psCaption   to C_$CaptionDelete
73110>>>>>        Set psToolTip to C_$ToolTipDelete
73111>>>>>        Set psDescription to C_$DescDelete
73112>>>>>        Set psImage to "actionDelete.ico"
73113>>>>>        Set psShortcut to C_$Key_Delete
73114>>>>>        Set pbActiveUpdate to True
73115>>>>>        Set psCategory to C_$CategoryEdit
73116>>>>>    End_Procedure
73117>>>>>    
73117>>>>>    
73117>>>>>    Procedure OnExecute Variant vCommandBarControl
73119>>>>>        Send Delete of (focus(Self))
73120>>>>>    End_Procedure
73121>>>>>    
73121>>>>>    Function IsEnabled Returns Boolean
73123>>>>>        Boolean bEnabled
73123>>>>>        Get CanDelete of (Focus(Self)) to bEnabled
73124>>>>>        Function_Return bEnabled
73125>>>>>    End_Function
73126>>>>>    
73126>>>>>End_Class
73127>>>>>
73127>>>>>
73127>>>>>Class cCJCutMenuItem is a cCJMenuItem
73128>>>>>    
73128>>>>>    Procedure Construct_Object
73130>>>>>        Forward Send Construct_Object
73132>>>>>        Set psCaption   to C_$CaptionCut
73133>>>>>        Set psToolTip to C_$TooltipCut
73134>>>>>        Set psDescription to C_$DescCut
73135>>>>>        Set psImage to "actionCut.ico"
73136>>>>>        Set psShortcut to C_$Key_Ctrl_X
73137>>>>>        Set pbActiveUpdate to True
73138>>>>>        Set psCategory to C_$CategoryEdit
73139>>>>>    End_Procedure
73140>>>>>    
73140>>>>>    
73140>>>>>    Procedure OnExecute Variant vCommandBarControl
73142>>>>>        Send Cut of (focus(Self))
73143>>>>>    End_Procedure
73144>>>>>    
73144>>>>>    Function IsEnabled Returns Boolean
73146>>>>>        Boolean bEnabled
73146>>>>>        Get CanCut of (Focus(Self)) to bEnabled
73147>>>>>        Function_Return bEnabled
73148>>>>>    End_Function
73149>>>>>    
73149>>>>>End_Class
73150>>>>>
73150>>>>>
73150>>>>>Class cCJCopyMenuItem is a cCJMenuItem
73151>>>>>    
73151>>>>>    Procedure Construct_Object
73153>>>>>        Forward Send Construct_Object
73155>>>>>        Set psCaption   to C_$CaptionCopy
73156>>>>>        Set psToolTip to C_$ToolTipCopy
73157>>>>>        Set psDescription to C_$DescCopy
73158>>>>>        Set psImage to "actionCopy.ico"
73159>>>>>        Set psShortcut to C_$Key_Ctrl_C
73160>>>>>        Set pbActiveUpdate to True
73161>>>>>        Set psCategory to C_$CategoryEdit
73162>>>>>    End_Procedure
73163>>>>>    
73163>>>>>    
73163>>>>>    Procedure OnExecute Variant vCommandBarControl
73165>>>>>        Send Copy of (focus(Self))
73166>>>>>    End_Procedure
73167>>>>>    
73167>>>>>    Function IsEnabled Returns Boolean
73169>>>>>        Boolean bEnabled
73169>>>>>        Get CanCopy of (Focus(Self)) to bEnabled
73170>>>>>        Function_Return bEnabled
73171>>>>>    End_Function
73172>>>>>    
73172>>>>>End_Class
73173>>>>>
73173>>>>>
73173>>>>>Class cCJPasteMenuItem is a cCJMenuItem
73174>>>>>    
73174>>>>>    Procedure Construct_Object
73176>>>>>        Forward Send Construct_Object
73178>>>>>        Set psCaption   to C_$CaptionPaste
73179>>>>>        Set psToolTip to C_$ToolTipPaste
73180>>>>>        Set psDescription to C_$DescPaste
73181>>>>>        Set psImage to "actionPaste.ico"
73182>>>>>        Set pbActiveUpdate to True
73183>>>>>        Set psShortcut to C_$Key_Ctrl_V
73184>>>>>        Set psCategory to C_$CategoryEdit
73185>>>>>    End_Procedure
73186>>>>>    
73186>>>>>    
73186>>>>>    Procedure OnExecute Variant vCommandBarControl
73188>>>>>        Send Paste of (focus(Self))
73189>>>>>    End_Procedure
73190>>>>>    
73190>>>>>    Function IsEnabled Returns Boolean
73192>>>>>        Boolean bEnabled
73192>>>>>        Get CanPaste of (Focus(Self)) to bEnabled
73193>>>>>        Function_Return bEnabled
73194>>>>>    End_Function
73195>>>>>    
73195>>>>>End_Class
73196>>>>>
73196>>>>>Class cCJSelectAllMenuItem is a cCJMenuItem
73197>>>>>    
73197>>>>>    Procedure Construct_Object
73199>>>>>        Forward Send Construct_Object
73201>>>>>        Set psCaption   to C_$CaptionSelectAll
73202>>>>>        Set psToolTip to C_$ToolTipSelectAll
73203>>>>>        Set psDescription to C_$DescSelectAll
73204>>>>>        Set pbActiveUpdate to True
73205>>>>>        Set psShortcut to C_$Key_Ctrl_A
73206>>>>>        Set psCategory to C_$CategoryEdit
73207>>>>>    End_Procedure
73208>>>>>    
73208>>>>>    
73208>>>>>    Procedure OnExecute Variant vCommandBarControl
73210>>>>>        Send Select_All of (focus(Self))
73211>>>>>    End_Procedure
73212>>>>>    
73212>>>>>    Function IsEnabled Returns Boolean
73214>>>>>        Boolean bEnabled
73214>>>>>        Get CanSelect of (Focus(Self)) to bEnabled
73215>>>>>        Function_Return bEnabled
73216>>>>>    End_Function
73217>>>>>    
73217>>>>>End_Class
73218>>>>>
73218>>>>>
73218>>>>>Class cCJExitMenuItem is a cCJMenuItem
73219>>>>>    
73219>>>>>    Procedure Construct_Object
73221>>>>>        Forward Send Construct_Object
73223>>>>>        Set psCaption to C_$CaptionExit
73224>>>>>        Set psToolTip to C_$ToolTipExit
73225>>>>>        Set psDescription to C_$ToolTipExit
73226>>>>>        Set psShortcut to C_$Key_Alt_F4
73227>>>>>        Set psCategory to C_$CategoryFile
73228>>>>>    End_Procedure
73229>>>>>    
73229>>>>>    Procedure OnExecute Variant vCommandBarControl
73231>>>>>        Send Exit_Application of Desktop
73232>>>>>    End_Procedure
73233>>>>>    
73233>>>>>End_Class
73234>>>>>
73234>>>>>Class cCJHelpMenuItem is a cCJMenuItem
73235>>>>>    
73235>>>>>    Procedure Construct_Object
73237>>>>>        Forward Send Construct_Object
73239>>>>>        Set psCaption to C_$CaptionHelp
73240>>>>>        Set psDescription to C_$ToolTipHelp
73241>>>>>        Set psToolTip to C_$DescHelp
73242>>>>>        Set psImage to "ActionHelp.ico"
73243>>>>>        Set psShortcut to "F1"
73244>>>>>        Set psCategory to C_$CategoryHelp
73245>>>>>    End_Procedure
73246>>>>>    
73246>>>>>    Procedure OnExecute Variant vCommandBarControl
73248>>>>>        Send Help of (Focus(Self))
73249>>>>>    End_Procedure
73250>>>>>    
73250>>>>>End_Class
73251>>>>>
73251>>>>>Class cCJStatusbarMenuItem is a cCJMenuItem
73252>>>>>    
73252>>>>>    Procedure Construct_Object
73254>>>>>        Forward Send Construct_Object
73256>>>>>        Set psCaption to C_$CaptionAddStatusbar
73257>>>>>        Set psToolTip to C_$ToolTipAddStatusbar
73258>>>>>        Set psDescription to  C_$DescAddStatusbar
73259>>>>>        Set psCategory to C_$CategoryWindow
73260>>>>>    End_Procedure
73261>>>>>    
73261>>>>>    Procedure OnExecute Variant vCommandBarControl
73263>>>>>        Handle hoCommandBars hoClientArea
73263>>>>>        Get CommandBarSystemObject to hoCommandBars
73264>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73265>>>>>        If hoClientArea Begin
73267>>>>>            // the clientarea's parent panel has message
73267>>>>>            Send Toggle_StatusBar of (Parent(hoClientArea))
73268>>>>>        End
73268>>>>>>
73268>>>>>    End_Procedure
73269>>>>>    
73269>>>>>    Function IsChecked Returns Boolean
73271>>>>>        Boolean bOn
73271>>>>>        Handle hoCommandBars hoClientArea
73271>>>>>        Get CommandBarSystemObject to hoCommandBars
73272>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73273>>>>>        If hoClientArea Begin
73275>>>>>            // the clientarea's parent panel has message
73275>>>>>            Get StatusBar_State of (Parent(hoClientArea)) to bOn
73276>>>>>        End
73276>>>>>>
73276>>>>>        Function_Return bOn
73277>>>>>    End_Function
73278>>>>>End_Class
73279>>>>>
73279>>>>>Class cCJAutoArrangeIconsMenuItem is a cCJMenuItem
73280>>>>>    
73280>>>>>    Procedure Construct_Object
73282>>>>>        Forward Send Construct_Object
73284>>>>>        Set psCaption to C_$CaptionAutoArrangeIcons
73285>>>>>        Set psToolTip to C_$ToolTipAutoArrangeIcons
73286>>>>>        Set psDescription to C_$DescAutoArrangeIcons
73287>>>>>        Set psCategory to C_$CategoryWindow
73288>>>>>    End_Procedure
73289>>>>>    
73289>>>>>    Procedure OnExecute Variant vCommandBarControl
73291>>>>>        Handle hoCommandBars hoClientArea
73291>>>>>        Get CommandBarSystemObject to hoCommandBars
73292>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73293>>>>>        If hoClientArea Begin
73295>>>>>            // the clientarea's parent panel has message
73295>>>>>            Send Toggle_Auto_Arrange_Icons of (Parent(hoClientArea))
73296>>>>>        End
73296>>>>>>
73296>>>>>    End_Procedure
73297>>>>>    
73297>>>>>    Function IsChecked Returns Boolean
73299>>>>>        Boolean bOn
73299>>>>>        Handle hoCommandBars hoClientArea
73299>>>>>        Get CommandBarSystemObject to hoCommandBars
73300>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73301>>>>>        If hoClientArea Begin
73303>>>>>            // the clientarea's parent panel has message
73303>>>>>            Get Auto_Arrange_Icons_State of (Parent(hoClientArea)) to bOn
73304>>>>>        End
73304>>>>>>
73304>>>>>        Function_Return bOn
73305>>>>>    End_Function
73306>>>>>End_Class
73307>>>>>
73307>>>>>Class cCJRestoreMenusMenuItem is a cCJMenuItem
73308>>>>>    
73308>>>>>    Procedure Construct_Object
73310>>>>>        Forward Send Construct_Object
73312>>>>>        Set psCaption to C_$CaptionRestoreMenus
73313>>>>>        Set psToolTip to C_$ToolTipRestoreMenus
73314>>>>>        Set psDescription to C_$DescRestoreMenus
73315>>>>>        Set psCategory to C_$CategoryWindow
73316>>>>>    End_Procedure
73317>>>>>    
73317>>>>>    Procedure OnExecute Variant vCommandBarControl
73319>>>>>        Handle hoCommandBars
73319>>>>>        Get CommandBarSystemObject to hoCommandBars
73320>>>>>        Send RestoreLayout of hoCommandBars
73321>>>>>    End_Procedure
73322>>>>>    
73322>>>>>End_Class
73323>>>>>
73323>>>>>Class cCJCascadeMenuItem is a cCJMenuItem
73324>>>>>    
73324>>>>>    Procedure Construct_Object
73326>>>>>        Forward Send Construct_Object
73328>>>>>        Set psCaption to C_$CaptionCascade
73329>>>>>        Set psToolTip to C_$ToolTipCascade
73330>>>>>        Set psDescription to  C_$DescCascade
73331>>>>>        Set psImage to "ActionCascade.ico"
73332>>>>>        Set psCategory to C_$CategoryWindow
73333>>>>>    End_Procedure
73334>>>>>    
73334>>>>>    Procedure OnExecute Variant vCommandBarControl
73336>>>>>        Handle hoCommandBars hoClientArea
73336>>>>>        Get CommandBarSystemObject to hoCommandBars
73337>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73338>>>>>        If hoClientArea Begin
73340>>>>>            Send Cascade_Windows of hoClientArea
73341>>>>>        End
73341>>>>>>
73341>>>>>    End_Procedure
73342>>>>>End_Class
73343>>>>>
73343>>>>>Class cCJTileHorizontally is a cCJMenuItem
73344>>>>>    
73344>>>>>    Procedure Construct_Object
73346>>>>>        Forward Send Construct_Object
73348>>>>>        Set psCaption to C_$CaptionTileHorizontally
73349>>>>>        Set psToolTip to C_$ToolTipTileHorizontally
73350>>>>>        Set psDescription to  C_$DescTileHorizontally
73351>>>>>        Set psImage to "ActionTileHorizontally.ico"
73352>>>>>        Set psCategory to C_$CategoryWindow
73353>>>>>    End_Procedure
73354>>>>>    
73354>>>>>    Procedure OnExecute Variant vCommandBarControl
73356>>>>>        Handle hoCommandBars hoClientArea
73356>>>>>        Get CommandBarSystemObject to hoCommandBars
73357>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73358>>>>>        If hoClientArea Begin
73360>>>>>            Send Tile_Windows_Horizontal of hoClientArea
73361>>>>>        End
73361>>>>>>
73361>>>>>    End_Procedure
73362>>>>>End_Class
73363>>>>>
73363>>>>>Class cCJTileVertically is a cCJMenuItem
73364>>>>>    
73364>>>>>    Procedure Construct_Object
73366>>>>>        Forward Send Construct_Object
73368>>>>>        Set psCaption to C_$CaptionTileVertically
73369>>>>>        Set psToolTip to C_$ToolTipTileVertically
73370>>>>>        Set psDescription to  C_$DescTileVertically
73371>>>>>        Set psImage to "ActionTileVertically.ico"
73372>>>>>        Set psCategory to C_$CategoryWindow
73373>>>>>    End_Procedure
73374>>>>>    
73374>>>>>    Procedure OnExecute Variant vCommandBarControl
73376>>>>>        Handle hoCommandBars hoClientArea
73376>>>>>        Get CommandBarSystemObject to hoCommandBars
73377>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73378>>>>>        If hoClientArea Begin
73380>>>>>            Send Tile_Windows_Vertical of hoClientArea
73381>>>>>        End
73381>>>>>>
73381>>>>>    End_Procedure
73382>>>>>End_Class
73383>>>>>
73383>>>>>Class cCJMinimizeWindowsMenuItem is a cCJMenuItem
73384>>>>>    
73384>>>>>    Procedure Construct_Object
73386>>>>>        Forward Send Construct_Object
73388>>>>>        Set psCaption to C_$CaptionMinimizeWindows
73389>>>>>        Set psToolTip to C_$ToolTipMinimizeWindows
73390>>>>>        Set psDescription to  C_$DescMinimizeWindows
73391>>>>>        Set psCategory to C_$CategoryWindow
73392>>>>>    End_Procedure
73393>>>>>    
73393>>>>>    Procedure OnExecute Variant vCommandBarControl
73395>>>>>        Handle hoCommandBars hoClientArea
73395>>>>>        Get CommandBarSystemObject to hoCommandBars
73396>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73397>>>>>        If hoClientArea Begin
73399>>>>>            // the clientarea's parent panel has message
73399>>>>>            Send Minimize_all_Windows of (Parent(hoClientArea))
73400>>>>>        End
73400>>>>>>
73400>>>>>    End_Procedure
73401>>>>>End_Class
73402>>>>>
73402>>>>>
73402>>>>>Class cCJRestoreWindowsMenuItem is a cCJMenuItem
73403>>>>>    
73403>>>>>    Procedure Construct_Object
73405>>>>>        Forward Send Construct_Object
73407>>>>>        Set psCaption to C_$CaptionRestoreWindows
73408>>>>>        Set psToolTip to C_$ToolTipRestoreWindows
73409>>>>>        Set psDescription to  C_$DescRestoreWindows
73410>>>>>        Set psCategory to C_$CategoryWindow
73411>>>>>    End_Procedure
73412>>>>>    
73412>>>>>    Procedure OnExecute Variant vCommandBarControl
73414>>>>>        Handle hoCommandBars hoClientArea
73414>>>>>        Get CommandBarSystemObject to hoCommandBars
73415>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73416>>>>>        If hoClientArea Begin
73418>>>>>            // the clientarea's parent panel has message
73418>>>>>            Send Restore_all_Windows of (Parent(hoClientArea))
73419>>>>>        End
73419>>>>>>
73419>>>>>    End_Procedure
73420>>>>>End_Class
73421>>>>>
73421>>>>>Class cCJArrangeIconsMenuItem is a cCJMenuItem
73422>>>>>    
73422>>>>>    Procedure Construct_Object
73424>>>>>        Forward Send Construct_Object
73426>>>>>        Set psCaption to C_$CaptionArrangeIcons
73427>>>>>        Set psToolTip to C_$ToolTipArrangeIcons
73428>>>>>        Set psDescription to  C_$DescArrangeIcons
73429>>>>>        Set psCategory to C_$CategoryWindow
73430>>>>>    End_Procedure
73431>>>>>    
73431>>>>>    Procedure OnExecute Variant vCommandBarControl
73433>>>>>        Handle hoCommandBars hoClientArea
73433>>>>>        Get CommandBarSystemObject to hoCommandBars
73434>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73435>>>>>        If hoClientArea Begin
73437>>>>>            Send Arrange_Icons of hoClientArea
73438>>>>>        End
73438>>>>>>
73438>>>>>    End_Procedure
73439>>>>>    
73439>>>>>End_Class
73440>>>Use cCJAboutMenuItem.pkg
Including file: cCJAboutMenuItem.pkg    (C:\Program Files\DataFlex 20.1\Pkg\cCJAboutMenuItem.pkg)
73440>>>>>Use cCJCommandBarSystem.pkg
73440>>>>>Use LanguageText.pkg
73440>>>>>
73440>>>>>// It is expected that if you use this class that you provide an about object that is
73440>>>>>// activated via activate_about such as DfAbout.pkg. We don't use this for you automatically
73440>>>>>// because you may wish to create your own custom about package.
73440>>>>>
73440>>>>>Class cCJAboutMenuItem is a cCJMenuItem    
73441>>>>>
73441>>>>>    Procedure Construct_Object
73443>>>>>        Forward Send Construct_Object
73445>>>>>        Set psCaption to C_$CaptionAbout
73446>>>>>        Set psDescription to C_$ToolTipAbout
73447>>>>>        Set psToolTip to C_$DescAbout
73448>>>>>        Set psImage to "ActionAbout.ico"
73449>>>>>        Set psCategory to C_$CategoryHelp
73450>>>>>    End_Procedure
73451>>>>>    
73451>>>>>    Procedure OnExecute Variant vCommandBarControl
73453>>>>>        Handle hoCommandBars hoClientArea
73453>>>>>        Get CommandBarSystemObject to hoCommandBars
73454>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73455>>>>>        If hoClientArea Begin
73457>>>>>            Send Activate_About of hoClientArea
73458>>>>>        End
73458>>>>>>
73458>>>>>    End_Procedure
73459>>>>>
73459>>>>>End_Class
73460>>>>>
73460>>>>>
73460>>>Use cCJDeoMenuItemClasses.pkg
73460>>>Use cCJMDIWindowsMenuItem.pkg
Including file: cCJMDIWindowsMenuItem.pkg    (C:\Program Files\DataFlex 20.1\Pkg\cCJMDIWindowsMenuItem.pkg)
73460>>>>>Use cCJCommandBarSystem.pkg
73460>>>>>
73460>>>>>Register_Function Client_ID Returns Integer
73460>>>>>
73460>>>>>// only used by cCJMDIWIndowsMenuItem
73460>>>>>Class cCJMDIWindowItem is a cCJMenuItem
73461>>>>>    
73461>>>>>    Procedure Construct_Object
73463>>>>>        Forward Send Construct_Object
73465>>>>>        Property Handle phWindow 0 // object id of view
73466>>>>>        Set pbControlFlagNoMovable to True
73467>>>>>        Set pbActiveUpdate to True
73468>>>>>    End_Procedure
73469>>>>>    
73469>>>>>    Procedure OnExecute Variant vCommandBarControl
73471>>>>>        Handle hWindow
73471>>>>>        Get phWindow to hWindow
73472>>>>>        Send Activate_View of hWindow
73473>>>>>    End_Procedure
73474>>>>>    
73474>>>>>End_Class
73475>>>>>
73475>>>>>
73475>>>>>Class cCJMDIWindowsMenuItem is a cCJMenuItem
73476>>>>>    
73476>>>>>    Procedure Construct_Object
73478>>>>>        Forward Send Construct_Object
73480>>>>>        Property Handle[] phArrayOfWindows
73481>>>>>        Set peControlType to xtpControlPopup
73482>>>>>        Set psCategory to C_$CategoryWindow
73483>>>>>    End_Procedure
73484>>>>>    
73484>>>>>    // This adds MDI windows to the existing menu items.
73484>>>>>    // This removes any existing windows menus and always adds a new set to the end
73484>>>>>    
73484>>>>>    Procedure OnPopupInit Variant vCommandBarControl Handle hCommandBarControls
73486>>>>>        Handle  hClientArea hView
73486>>>>>        String  sLabel
73486>>>>>        Integer i iWindows
73486>>>>>        Handle[] hArrayOfWindows
73487>>>>>        Variant vItem
73487>>>>>        
73487>>>>>        // delete all windows actions and menu items. Assume we have an array of DF action objects for the windows
73487>>>>>        // also assume that destroying an action removes all menu instances of that action
73487>>>>>        Get phArrayOfWindows to hArrayOfWindows
73488>>>>>        Move (SizeOfArray(hArrayOfWindows)) to iWindows
73489>>>>>        For i from 0 to (iWindows-1)
73495>>>>>>
73495>>>>>            Send Destroy of hArrayOfWindows[i] // assume this removes all menu items of this action
73496>>>>>        Loop
73497>>>>>>
73497>>>>>        Move (ResizeArray(hArrayOfWindows,0)) to hArrayOfWindows
73498>>>>>        
73498>>>>>        // Add all views to this menu. Create the action and add the item
73498>>>>>        Move 0 to i
73499>>>>>        Get Client_Id to hClientArea // object id of client area
73500>>>>>        If (hClientArea > 0) Begin
73502>>>>>            Get Next_Mdi_Dialog of hClientArea True to hView // find first view
73503>>>>>            While (hView <> 0)
73507>>>>>                If (Active_State(hView)) Begin
73509>>>>>                    // create the action
73509>>>>>                    Get Create U_cCJMDIWindowItem to hArrayOfWindows[i]
73510>>>>>                    Get Label of hView to sLabel // caption bar (name) of view
73511>>>>>                    Set psCaption of hArrayOfWindows[i] to sLabel
73512>>>>>                    Set psDescription of hArrayOfWindows[i] to ("Make this view (" - trim(sLabel) - ") the active window.")
73513>>>>>                    If (current_scope(desktop)=hView and View_mode(hView)<>VIEWMODE_ICONIZE) Begin
73515>>>>>                        Set pbChecked of hArrayOfWindows[i] to True
73516>>>>>                    End
73516>>>>>>
73516>>>>>                    Set phWindow of hArrayOfWindows[i] to hView // used by custom OnExecute
73517>>>>>                    If (i=0) Begin
73519>>>>>                        Set pbControlBeginGroup of hArrayOfWindows[i] to True
73520>>>>>                    End
73520>>>>>>
73520>>>>>                    // Create a menu item for this action
73520>>>>>                    Get AddDynamicControl of hArrayOfWindows[i] hCommandBarControls to vItem
73521>>>>>                    Increment i
73522>>>>>                End
73522>>>>>>
73522>>>>>                Get Next_Mdi_Dialog of hClientArea False to hView // find next
73523>>>>>            Loop
73524>>>>>>
73524>>>>>        End
73524>>>>>>
73524>>>>>        
73524>>>>>        Set phArrayOfWindows to hArrayOfWindows
73525>>>>>        
73525>>>>>    End_Procedure
73526>>>>>    
73526>>>>>End_Class
73527>
73527>Object oHtmlHelp is a cHtmlHelp
73529>End_Object
73530>
73530>Object oApplication is a cApplication
73532>    Set peHelpType to htHtmlHelp
73533>
73533>    Object oConnection is a cConnection
73535>        Use LoginEncryption.pkg
Including file: LoginEncryption.pkg    (C:\Program Files\DataFlex 20.1\Pkg\LoginEncryption.pkg)
73535>>>Use cLoginEncryption.pkg
Including file: cLoginEncryption.pkg    (C:\Program Files\DataFlex 20.1\Pkg\cLoginEncryption.pkg)
73535>>>>>Use cCryptographerEx.pkg
Including file: cCryptographerEx.pkg    (C:\Program Files\DataFlex 20.1\Pkg\cCryptographerEx.pkg)
73535>>>>>>>Use VdfBase.pkg
73535>>>>>>>
73535>>>>>>>Use CryptographerConstants.pkg
Including file: CryptographerConstants.pkg    (C:\Program Files\DataFlex 20.1\Pkg\CryptographerConstants.pkg)
73535>>>>>>>>>//   Author  : Ulbe Stellema
73535>>>>>>>>>// Algorithm classes
73535>>>>>>>>>Define ALG_CLASS_ANY                    for |CI$00000000 // (0)
73535>>>>>>>>>Define ALG_CLASS_SIGNATURE              for |CI$00002000 // (1 << 13)
73535>>>>>>>>>Define ALG_CLASS_MSG_ENCRYPT            for |CI$00004000 // (2 << 13)
73535>>>>>>>>>Define ALG_CLASS_DATA_ENCRYPT           for |CI$00006000 // (3 << 13)
73535>>>>>>>>>Define ALG_CLASS_HASH                   for |CI$00008000 // (4 << 13)
73535>>>>>>>>>Define ALG_CLASS_KEY_EXCHANGE           for |CI$0000A000 // (5 << 13)
73535>>>>>>>>>Define ALG_CLASS_ALL                    for |CI$0000E000 // (7 << 13)
73535>>>>>>>>>
73535>>>>>>>>>// Algorithm types
73535>>>>>>>>>Define ALG_TYPE_ANY                     for |CI$00000000 // (0)
73535>>>>>>>>>Define ALG_TYPE_DSS                     for |CI$00000200 // (1 << 9)
73535>>>>>>>>>Define ALG_TYPE_RSA                     for |CI$00000400 // (2 << 9)
73535>>>>>>>>>Define ALG_TYPE_BLOCK                   for |CI$00000600 // (3 << 9)
73535>>>>>>>>>Define ALG_TYPE_STREAM                  for |CI$00000800 // (4 << 9)
73535>>>>>>>>>Define ALG_TYPE_DH                      for |CI$00000A00 // (5 << 9)
73535>>>>>>>>>Define ALG_TYPE_SECURECHANNEL           for |CI$00000C00 // (6 << 9)
73535>>>>>>>>>
73535>>>>>>>>>// Generic sub-ids
73535>>>>>>>>>Define ALG_SID_ANY                      for |CI$00000000 // (0)
73535>>>>>>>>>
73535>>>>>>>>>// RSA sub-ids
73535>>>>>>>>>Define ALG_SID_RSA_ANY                  for 0
73535>>>>>>>>>Define ALG_SID_RSA_PKCS                 for 1
73535>>>>>>>>>Define ALG_SID_RSA_MSATWORK             for 2
73535>>>>>>>>>Define ALG_SID_RSA_ENTRUST              for 3
73535>>>>>>>>>Define ALG_SID_RSA_PGP                  for 4
73535>>>>>>>>>
73535>>>>>>>>>// DSS sub-ids
73535>>>>>>>>>Define ALG_SID_DSS_ANY                  for 0
73535>>>>>>>>>Define ALG_SID_DSS_PKCS                 for 1
73535>>>>>>>>>Define ALG_SID_DSS_DMS                  for 2
73535>>>>>>>>>
73535>>>>>>>>>// DES sub_ids
73535>>>>>>>>>Define ALG_SID_DES                      for 1
73535>>>>>>>>>Define ALG_SID_3DES                     for 3
73535>>>>>>>>>Define ALG_SID_DESX                     for 4
73535>>>>>>>>>Define ALG_SID_IDEA                     for 5
73535>>>>>>>>>Define ALG_SID_CAST                     for 6
73535>>>>>>>>>Define ALG_SID_SAFERSK64                for 7
73535>>>>>>>>>Define ALG_SID_SAFERSK128               for 8
73535>>>>>>>>>Define ALG_SID_3DES_112                 for 9
73535>>>>>>>>>Define ALG_SID_CYLINK_MEK               for 12
73535>>>>>>>>>Define ALG_SID_RC5                      for 13
73535>>>>>>>>>Define ALG_SID_AES_128                  for 14
73535>>>>>>>>>Define ALG_SID_AES_192                  for 15
73535>>>>>>>>>Define ALG_SID_AES_256                  for 16
73535>>>>>>>>>Define ALG_SID_AES                      for 17
73535>>>>>>>>>
73535>>>>>>>>>// Fortezza sub-ids
73535>>>>>>>>>Define ALG_SID_SKIPJACK                 for 10
73535>>>>>>>>>Define ALG_SID_TEK                      for 11
73535>>>>>>>>>
73535>>>>>>>>>// RC2 sub-ids
73535>>>>>>>>>Define ALG_SID_RC2                      for 2
73535>>>>>>>>>
73535>>>>>>>>>// Stream cipher sub-ids
73535>>>>>>>>>Define ALG_SID_RC4                      for 1
73535>>>>>>>>>Define ALG_SID_SEAL                     for 2
73535>>>>>>>>>
73535>>>>>>>>>// Diffie-Hellman sub-ids
73535>>>>>>>>>Define ALG_SID_DH_SANDF                 for 1
73535>>>>>>>>>Define ALG_SID_DH_EPHEM                 for 2
73535>>>>>>>>>Define ALG_SID_AGREED_KEY_ANY           for 3
73535>>>>>>>>>Define ALG_SID_KEA                      for 4
73535>>>>>>>>>
73535>>>>>>>>>// Hash sub ids
73535>>>>>>>>>Define ALG_SID_MD2                      for 1
73535>>>>>>>>>Define ALG_SID_MD4                      for 2
73535>>>>>>>>>Define ALG_SID_MD5                      for 3
73535>>>>>>>>>Define ALG_SID_SHA                      for 4
73535>>>>>>>>>Define ALG_SID_SHA1                     for 4
73535>>>>>>>>>Define ALG_SID_MAC                      for 5
73535>>>>>>>>>Define ALG_SID_RIPEMD                   for 6
73535>>>>>>>>>Define ALG_SID_RIPEMD160                for 7
73535>>>>>>>>>Define ALG_SID_SSL3SHAMD5               for 8
73535>>>>>>>>>Define ALG_SID_HMAC                     for 9
73535>>>>>>>>>Define ALG_SID_TLS1PRF                  for 10
73535>>>>>>>>>Define ALG_SID_HASH_REPLACE_OWF         for 11
73535>>>>>>>>>Define ALG_SID_SHA_256                  for 12
73535>>>>>>>>>Define ALG_SID_SHA_384                  for 13
73535>>>>>>>>>Define ALG_SID_SHA_512                  for 14
73535>>>>>>>>>
73535>>>>>>>>>// secure channel sub ids
73535>>>>>>>>>Define ALG_SID_SSL3_MASTER              for 1
73535>>>>>>>>>Define ALG_SID_SCHANNEL_MASTER_HASH     for 2
73535>>>>>>>>>Define ALG_SID_SCHANNEL_MAC_KEY         for 3
73535>>>>>>>>>Define ALG_SID_PCT1_MASTER              for 4
73535>>>>>>>>>Define ALG_SID_SSL2_MASTER              for 5
73535>>>>>>>>>Define ALG_SID_TLS1_MASTER              for 6
73535>>>>>>>>>Define ALG_SID_SCHANNEL_ENC_KEY         for 7
73535>>>>>>>>>
73535>>>>>>>>>// algorithm identifier definitions
73535>>>>>>>>>Define CALG_MD2                         for (ALG_CLASS_HASH ior ALG_TYPE_ANY ior ALG_SID_MD2)
73535>>>>>>>>>Define CALG_MD4                         for (ALG_CLASS_HASH ior ALG_TYPE_ANY ior ALG_SID_MD4)
73535>>>>>>>>>Define CALG_MD5                         for (ALG_CLASS_HASH ior ALG_TYPE_ANY ior ALG_SID_MD5)
73535>>>>>>>>>Define CALG_SHA                         for (ALG_CLASS_HASH ior ALG_TYPE_ANY ior ALG_SID_SHA)
73535>>>>>>>>>Define CALG_SHA1                        for (ALG_CLASS_HASH ior ALG_TYPE_ANY ior ALG_SID_SHA1)
73535>>>>>>>>>Define CALG_MAC                         for (ALG_CLASS_HASH ior ALG_TYPE_ANY ior ALG_SID_MAC)
73535>>>>>>>>>Define CALG_RSA_SIGN                    for (ALG_CLASS_SIGNATURE ior ALG_TYPE_RSA ior ALG_SID_RSA_ANY)
73535>>>>>>>>>Define CALG_DSS_SIGN                    for (ALG_CLASS_SIGNATURE ior ALG_TYPE_DSS ior ALG_SID_DSS_ANY)
73535>>>>>>>>>Define CALG_NO_SIGN                     for (ALG_CLASS_SIGNATURE ior ALG_TYPE_ANY ior ALG_SID_ANY)
73535>>>>>>>>>Define CALG_RSA_KEYX                    for (ALG_CLASS_KEY_EXCHANGE ior ALG_TYPE_RSA ior ALG_SID_RSA_ANY)
73535>>>>>>>>>Define CALG_DES                         for (ALG_CLASS_DATA_ENCRYPT ior ALG_TYPE_BLOCK ior ALG_SID_DES)
73535>>>>>>>>>Define CALG_3DES_112                    for (ALG_CLASS_DATA_ENCRYPT ior ALG_TYPE_BLOCK ior ALG_SID_3DES_112)
73535>>>>>>>>>Define CALG_3DES                        for (ALG_CLASS_DATA_ENCRYPT ior ALG_TYPE_BLOCK ior ALG_SID_3DES)
73535>>>>>>>>>Define CALG_DESX                        for (ALG_CLASS_DATA_ENCRYPT ior ALG_TYPE_BLOCK ior ALG_SID_DESX)
73535>>>>>>>>>Define CALG_RC2                         for (ALG_CLASS_DATA_ENCRYPT ior ALG_TYPE_BLOCK ior ALG_SID_RC2)
73535>>>>>>>>>Define CALG_RC4                         for (ALG_CLASS_DATA_ENCRYPT ior ALG_TYPE_STREAM ior ALG_SID_RC4)
73535>>>>>>>>>Define CALG_SEAL                        for (ALG_CLASS_DATA_ENCRYPT ior ALG_TYPE_STREAM ior ALG_SID_SEAL)
73535>>>>>>>>>Define CALG_DH_SF                       for (ALG_CLASS_KEY_EXCHANGE ior ALG_TYPE_DH ior ALG_SID_DH_SANDF)
73535>>>>>>>>>Define CALG_DH_EPHEM                    for (ALG_CLASS_KEY_EXCHANGE ior ALG_TYPE_DH ior ALG_SID_DH_EPHEM)
73535>>>>>>>>>Define CALG_AGREEDKEY_ANY               for (ALG_CLASS_KEY_EXCHANGE ior ALG_TYPE_DH ior ALG_SID_AGREED_KEY_ANY)
73535>>>>>>>>>Define CALG_KEA_KEYX                    for (ALG_CLASS_KEY_EXCHANGE ior ALG_TYPE_DH ior ALG_SID_KEA)
73535>>>>>>>>>Define CALG_HUGHES_MD5                  for (ALG_CLASS_KEY_EXCHANGE ior ALG_TYPE_ANY ior ALG_SID_MD5)
73535>>>>>>>>>Define CALG_SKIPJACK                    for (ALG_CLASS_DATA_ENCRYPT ior ALG_TYPE_BLOCK ior ALG_SID_SKIPJACK)
73535>>>>>>>>>Define CALG_TEK                         for (ALG_CLASS_DATA_ENCRYPT ior ALG_TYPE_BLOCK ior ALG_SID_TEK)
73535>>>>>>>>>Define CALG_CYLINK_MEK                  for (ALG_CLASS_DATA_ENCRYPT ior ALG_TYPE_BLOCK ior ALG_SID_CYLINK_MEK)
73535>>>>>>>>>Define CALG_SSL3_SHAMD5                 for (ALG_CLASS_HASH ior ALG_TYPE_ANY ior ALG_SID_SSL3SHAMD5)
73535>>>>>>>>>Define CALG_SSL3_MASTER                 for (ALG_CLASS_MSG_ENCRYPT ior ALG_TYPE_SECURECHANNEL ior ALG_SID_SSL3_MASTER)
73535>>>>>>>>>Define CALG_SCHANNEL_MASTER_HASH        for (ALG_CLASS_MSG_ENCRYPT ior ALG_TYPE_SECURECHANNEL ior ALG_SID_SCHANNEL_MASTER_HASH)
73535>>>>>>>>>Define CALG_SCHANNEL_MAC_KEY            for (ALG_CLASS_MSG_ENCRYPT ior ALG_TYPE_SECURECHANNEL ior ALG_SID_SCHANNEL_MAC_KEY)
73535>>>>>>>>>Define CALG_SCHANNEL_ENC_KEY            for (ALG_CLASS_MSG_ENCRYPT ior ALG_TYPE_SECURECHANNEL ior ALG_SID_SCHANNEL_ENC_KEY)
73535>>>>>>>>>Define CALG_PCT1_MASTER                 for (ALG_CLASS_MSG_ENCRYPT ior ALG_TYPE_SECURECHANNEL ior ALG_SID_PCT1_MASTER)
73535>>>>>>>>>Define CALG_SSL2_MASTER                 for (ALG_CLASS_MSG_ENCRYPT ior ALG_TYPE_SECURECHANNEL ior ALG_SID_SSL2_MASTER)
73535>>>>>>>>>Define CALG_TLS1_MASTER                 for (ALG_CLASS_MSG_ENCRYPT ior ALG_TYPE_SECURECHANNEL ior ALG_SID_TLS1_MASTER)
73535>>>>>>>>>Define CALG_RC5                         for (ALG_CLASS_DATA_ENCRYPT ior ALG_TYPE_BLOCK ior ALG_SID_RC5)
73535>>>>>>>>>Define CALG_HMAC                        for (ALG_CLASS_HASH ior ALG_TYPE_ANY ior ALG_SID_HMAC)
73535>>>>>>>>>Define CALG_TLS1PRF                     for (ALG_CLASS_HASH ior ALG_TYPE_ANY ior ALG_SID_TLS1PRF)
73535>>>>>>>>>Define CALG_HASH_REPLACE_OWF            for (ALG_CLASS_HASH ior ALG_TYPE_ANY ior ALG_SID_HASH_REPLACE_OWF)
73535>>>>>>>>>Define CALG_AES_128                     for (ALG_CLASS_DATA_ENCRYPT ior ALG_TYPE_BLOCK ior ALG_SID_AES_128)
73535>>>>>>>>>Define CALG_AES_192                     for (ALG_CLASS_DATA_ENCRYPT ior ALG_TYPE_BLOCK ior ALG_SID_AES_192)
73535>>>>>>>>>Define CALG_AES_256                     for (ALG_CLASS_DATA_ENCRYPT ior ALG_TYPE_BLOCK ior ALG_SID_AES_256)
73535>>>>>>>>>Define CALG_AES                         for (ALG_CLASS_DATA_ENCRYPT ior ALG_TYPE_BLOCK ior ALG_SID_AES)
73535>>>>>>>>>Define CALG_SHA_256                     for (ALG_CLASS_HASH ior ALG_TYPE_ANY ior ALG_SID_SHA_256)
73535>>>>>>>>>Define CALG_SHA_384                     for (ALG_CLASS_HASH ior ALG_TYPE_ANY ior ALG_SID_SHA_384)
73535>>>>>>>>>Define CALG_SHA_512                     for (ALG_CLASS_HASH ior ALG_TYPE_ANY ior ALG_SID_SHA_512)
73535>>>>>>>>>
73535>>>>>>>>>// Providers
73535>>>>>>>>>Define MS_DEF_PROV                      for "Microsoft Base Cryptographic Provider v1.0"
73535>>>>>>>>>Define MS_ENHANCED_PROV                 for "Microsoft Enhanced Cryptographic Provider v1.0"
73535>>>>>>>>>Define MS_STRONG_PROV                   for "Microsoft Strong Cryptographic Provider"
73535>>>>>>>>>Define MS_DEF_RSA_SIG_PROV              for "Microsoft RSA Signature Cryptographic Provider"
73535>>>>>>>>>Define MS_DEF_RSA_SCHANNEL_PROV         for "Microsoft RSA SChannel Cryptographic Provider"
73535>>>>>>>>>Define MS_DEF_DSS_PROV                  for "Microsoft Base DSS Cryptographic Provider"
73535>>>>>>>>>Define MS_DEF_DSS_DH_PROV               for "Microsoft Base DSS and Diffie-Hellman Cryptographic Provider"
73535>>>>>>>>>Define MS_ENH_DSS_DH_PROV               for "Microsoft Enhanced DSS and Diffie-Hellman Cryptographic Provider"
73535>>>>>>>>>Define MS_DEF_DH_SCHANNEL_PROV          for "Microsoft DH SChannel Cryptographic Provider"
73535>>>>>>>>>Define MS_SCARD_PROV                    for "Microsoft Base Smart Card Crypto Provider"
73535>>>>>>>>>Define MS_ENH_RSA_AES_PROV              for "Microsoft Enhanced RSA and AES Cryptographic Provider"
73535>>>>>>>>>
73535>>>>>>>>>// dwFlags definitions for CryptAcquireContext
73535>>>>>>>>>Define CRYPT_VERIFYCONTEXT              for |CI$F0000000
73535>>>>>>>>>Define CRYPT_NEWKEYSET                  for |CI$00000008
73535>>>>>>>>>Define CRYPT_DELETEKEYSET               for |CI$00000010
73535>>>>>>>>>Define CRYPT_MACHINE_KEYSET             for |CI$00000020
73535>>>>>>>>>Define CRYPT_SILENT                     for |CI$00000040
73535>>>>>>>>>
73535>>>>>>>>>// dwFlag definitions for CryptGenKey
73535>>>>>>>>>Define CRYPT_EXPORTABLE                 for |CI$00000001
73535>>>>>>>>>Define CRYPT_USER_PROTECTED             for |CI$00000002
73535>>>>>>>>>Define CRYPT_CREATE_SALT                for |CI$00000004
73535>>>>>>>>>Define CRYPT_UPDATE_KEY                 for |CI$00000008
73535>>>>>>>>>Define CRYPT_NO_SALT                    for |CI$00000010
73535>>>>>>>>>Define CRYPT_PREGEN                     for |CI$00000040
73535>>>>>>>>>Define CRYPT_RECIPIENT                  for |CI$00000010
73535>>>>>>>>>Define CRYPT_INITIATOR                  for |CI$00000040
73535>>>>>>>>>Define CRYPT_ONLINE                     for |CI$00000080
73535>>>>>>>>>Define CRYPT_SF                         for |CI$00000100
73535>>>>>>>>>Define CRYPT_CREATE_IV                  for |CI$00000200
73535>>>>>>>>>Define CRYPT_KEK                        for |CI$00000400
73535>>>>>>>>>Define CRYPT_DATA_KEY                   for |CI$00000800
73535>>>>>>>>>Define CRYPT_VOLATILE                   for |CI$00001000
73535>>>>>>>>>Define CRYPT_SGCKEY                     for |CI$00002000
73535>>>>>>>>>Define CRYPT_ARCHIVABLE                 for |CI$00004000
73535>>>>>>>>>
73535>>>>>>>>>// Provider types
73535>>>>>>>>>Define PROV_RSA_FULL                    for 1
73535>>>>>>>>>Define PROV_RSA_SIG                     for 2
73535>>>>>>>>>Define PROV_DSS                         for 3
73535>>>>>>>>>Define PROV_FORTEZZA                    for 4
73535>>>>>>>>>Define PROV_MS_EXCHANGE                 for 5
73535>>>>>>>>>Define PROV_SSL                         for 6
73535>>>>>>>>>Define PROV_RSA_SCHANNEL                for 12
73535>>>>>>>>>Define PROV_DSS_DH                      for 13
73535>>>>>>>>>Define PROV_EC_ECDSA_SIG                for 14
73535>>>>>>>>>Define PROV_EC_ECNRA_SIG                for 15
73535>>>>>>>>>Define PROV_EC_ECDSA_FULL               for 16
73535>>>>>>>>>Define PROV_EC_ECNRA_FULL               for 17
73535>>>>>>>>>Define PROV_DH_SCHANNEL                 for 18
73535>>>>>>>>>Define PROV_SPYRUS_LYNKS                for 20
73535>>>>>>>>>Define PROV_RNG                         for 21
73535>>>>>>>>>Define PROV_INTEL_SEC                   for 22
73535>>>>>>>>>Define PROV_REPLACE_OWF                 for 23
73535>>>>>>>>>Define PROV_RSA_AES                     for 24
73535>>>>>>>>>
73535>>>>>>>>>// KP_MODE
73535>>>>>>>>>// KP_MODE
73535>>>>>>>>>Define CRYPT_MODE_CBC                   for 1       // Cipher block chaining
73535>>>>>>>>>Define CRYPT_MODE_ECB                   for 2       // Electronic code book
73535>>>>>>>>>Define CRYPT_MODE_OFB                   for 3       // Output feedback mode
73535>>>>>>>>>Define CRYPT_MODE_CFB                   for 4       // Cipher feedback mode
73535>>>>>>>>>Define CRYPT_MODE_CTS                   for 5       // Ciphertext stealing mode
73535>>>>>>>>>Define CRYPT_MODE_CBCI                  for 6       // ANSI CBC Interleaved
73535>>>>>>>>>Define CRYPT_MODE_CFBP                  for 7       // ANSI CFB Pipelined
73535>>>>>>>>>Define CRYPT_MODE_OFBP                  for 8       // ANSI OFB Pipelined
73535>>>>>>>>>Define CRYPT_MODE_CBCOFM                for 9       // ANSI CBC + OF Masking
73535>>>>>>>>>Define CRYPT_MODE_CBCOFMI               for 10      // ANSI CBC + OFM Interleaved
73535>>>>>>>>>
73535>>>>>>>>>// dwParam definitions for CryptGetKeyParam
73535>>>>>>>>>Define KP_IV                            for 1       // Initialization vector
73535>>>>>>>>>Define KP_SALT                          for 2       // Salt value
73535>>>>>>>>>Define KP_PADDING                       for 3       // Padding values
73535>>>>>>>>>Define KP_MODE                          for 4       // Mode of the cipher
73535>>>>>>>>>Define KP_MODE_BITS                     for 5       // Number of bits to feedback
73535>>>>>>>>>Define KP_PERMISSIONS                   for 6       // Key permissions DWORD
73535>>>>>>>>>Define KP_ALGID                         for 7       // Key algorithm
73535>>>>>>>>>Define KP_BLOCKLEN                      for 8       // Block size of the cipher
73535>>>>>>>>>Define KP_KEYLEN                        for 9       // Length of key in bits
73535>>>>>>>>>Define KP_SALT_EX                       for 10      // Length of salt in bytes
73535>>>>>>>>>Define KP_P                             for 11      // DSS/Diffie-Hellman P value
73535>>>>>>>>>Define KP_G                             for 12      // DSS/Diffie-Hellman G value
73535>>>>>>>>>Define KP_Q                             for 13      // DSS Q value
73535>>>>>>>>>Define KP_X                             for 14      // Diffie-Hellman X value
73535>>>>>>>>>Define KP_Y                             for 15      // Y value
73535>>>>>>>>>Define KP_RA                            for 16      // Fortezza RA value
73535>>>>>>>>>Define KP_RB                            for 17      // Fortezza RB value
73535>>>>>>>>>Define KP_INFO                          for 18      // for putting information into an RSA envelope
73535>>>>>>>>>Define KP_EFFECTIVE_KEYLEN              for 19      // setting and getting RC2 effective key length
73535>>>>>>>>>Define KP_SCHANNEL_ALG                  for 20      // for setting the Secure Channel algorithms
73535>>>>>>>>>Define KP_CLIENT_RANDOM                 for 21      // for setting the Secure Channel client random data
73535>>>>>>>>>Define KP_SERVER_RANDOM                 for 22      // for setting the Secure Channel server random data
73535>>>>>>>>>Define KP_RP                            for 23
73535>>>>>>>>>Define KP_PRECOMP_MD5                   for 24
73535>>>>>>>>>Define KP_PRECOMP_SHA                   for 25
73535>>>>>>>>>Define KP_CERTIFICATE                   for 26      // for setting Secure Channel certificate data (PCT1)
73535>>>>>>>>>Define KP_CLEAR_KEY                     for 27      // for setting Secure Channel clear key data (PCT1)
73535>>>>>>>>>Define KP_PUB_EX_LEN                    for 28
73535>>>>>>>>>Define KP_PUB_EX_VAL                    for 29
73535>>>>>>>>>Define KP_KEYVAL                        for 30
73535>>>>>>>>>Define KP_ADMIN_PIN                     for 31
73535>>>>>>>>>Define KP_KEYEXCHANGE_PIN               for 32
73535>>>>>>>>>Define KP_SIGNATURE_PIN                 for 33
73535>>>>>>>>>Define KP_PREHASH                       for 34
73535>>>>>>>>>Define KP_ROUNDS                        for 35
73535>>>>>>>>>Define KP_OAEP_PARAMS                   for 36      // for setting OAEP params on RSA keys
73535>>>>>>>>>Define KP_CMS_KEY_INFO                  for 37
73535>>>>>>>>>Define KP_CMS_DH_KEY_INFO               for 38
73535>>>>>>>>>Define KP_PUB_PARAMS                    for 39      // for setting public parameters
73535>>>>>>>>>Define KP_VERIFY_PARAMS                 for 40      // for verifying DSA and DH parameters
73535>>>>>>>>>Define KP_HIGHEST_VERSION               for 41      // for TLS protocol version setting
73535>>>>>>>>>Define KP_GET_USE_COUNT                 for 42      // for use with PP_CRYPT_COUNT_KEY_USE contexts
73535>>>>>>>>>
73535>>>>>>>>>// dwParam definitions for CryptGetHashParam
73535>>>>>>>>>Define HP_ALGID                         for |CI$0001  // Hash algorithm
73535>>>>>>>>>Define HP_HASHVAL                       for |CI$0002  // Hash value
73535>>>>>>>>>Define HP_HASHSIZE                      for |CI$0004  // Hash value size
73535>>>>>>>>>Define HP_HMAC_INFO                     for |CI$0005  // information for creating an HMA
73535>>>>>>>>>
73535>>>>>>>>>// key BLOB types
73535>>>>>>>>>Define KEYSTATEBLOB                     for |CI$0C
73535>>>>>>>>>Define OPAQUEKEYBLOB                    for |CI$09
73535>>>>>>>>>Define PLAINTEXTKEYBLOB                 for |CI$08
73535>>>>>>>>>Define PRIVATEKEYBLOB                   for |CI$07
73535>>>>>>>>>Define PUBLICKEYBLOB                    for |CI$06
73535>>>>>>>>>Define PUBLICKEYBLOBEX                  for |CI$0A
73535>>>>>>>>>Define SIMPLEBLOB                       for |CI$01
73535>>>>>>>>>Define SYMMETRICWRAPKEYBLOB             for |CI$0B
73535>>>>>>>>>
73535>>>>>>>>>Define CUR_BLOB_VERSION                 for 2
73535>>>>>>>>>
73535>>>>>>>>>// KP_PADDING
73535>>>>>>>>>Define PKCS5_PADDING                    for 1       // PKCS 5 (sec 6.2) padding method
73535>>>>>>>>>Define RANDOM_PADDING                   for 2
73535>>>>>>>>>Define ZERO_PADDING                     for 3
73535>>>>>>>>>
73535>>>>>>>>>//  Structure cryptimportkey
73535>>>>>>>>>Struct PUBLICKEYSTRUC
73535>>>>>>>>>    UChar    bType
73535>>>>>>>>>    UChar    bVersion
73535>>>>>>>>>    UShort   reserved
73535>>>>>>>>>    UInteger aiKeyAlg
73535>>>>>>>>>End_Struct
73535>>>>>>>>>
73535>>>>>>>>>Struct tPLAINTEXTKEYBLOB
73535>>>>>>>>>    PUBLICKEYSTRUC hdr
73535>>>>>>>>>    PUBLICKEYSTRUC hdr
73535>>>>>>>>>    UInteger       dwKeySize
73535>>>>>>>>>//    UChar[]        rgbKeyData
73535>>>>>>>>>End_Struct
73535>>>>>>>>>
73535>>>>>>>>>
73535>>>>>>>>>
73535>>>>>>>>>//  Structure for specifying the inner and outer strings when calculating HMAC hash (use with CryptSetHashParam)
73535>>>>>>>>>Struct HMAC_INFO
73535>>>>>>>>>    UInteger HashAlgid
73535>>>>>>>>>    Pointer pbInnerString
73535>>>>>>>>>    DWord cbInnerString
73535>>>>>>>>>    Pointer pbOuterString
73535>>>>>>>>>    DWord cbOuterString
73535>>>>>>>>>End_Struct
73535>>>>>>>>>
73535>>>>>>>>>Struct BLOBHEADER
73535>>>>>>>>>    UChar   bType
73535>>>>>>>>>    UChar   bVersion
73535>>>>>>>>>    Short   reserved
73535>>>>>>>>>    Integer aiKeyAlg
73535>>>>>>>>>End_Struct
73535>>>>>>>>>
73535>>>>>>>>>Struct CryptoBlob
73535>>>>>>>>>    BLOBHEADER  header
73535>>>>>>>>>    BLOBHEADER  header
73535>>>>>>>>>    Integer     cbKeySize
73535>>>>>>>>>    UChar[32]   rgbKeyData
73535>>>>>>>>>End_Struct
73535>>>>>>>>>
73535>>>>>>>>>
73535>>>>>>>>>// Note: lpContainer and lpProvider refer to WString types.
73535>>>>>>>>>External_Function CryptAcquireContextW "CryptAcquireContextW" advapi32.dll ;    Pointer phProv ;    Pointer lpContainer ;    Pointer lpProvider ;    Integer dwProvType ;    Integer dwFlags ;    Returns Boolean
73536>>>>>>>>>
73536>>>>>>>>>// Compatibilty wrapper Function CryptAcquireContext
73536>>>>>>>>>Function CryptAcquireContext Global ;    Pointer phProv ;    Pointer szContainer ;    Pointer szProvider ;    Integer dwProvType ;    Integer dwFlags ;    Returns Boolean
73538>>>>>>>>>    
73538>>>>>>>>>    Boolean bResult
73538>>>>>>>>>    UWide   uwContainer uwProvider
73538>>>>>>>>>    UWide   uwContainer uwProvider
73538>>>>>>>>>
73538>>>>>>>>>    Send StringToWide szContainer (&uwContainer)
73539>>>>>>>>>    Send StringToWide szProvider (&uwProvider)
73540>>>>>>>>>    
73540>>>>>>>>>    Move (CryptAcquireContextW (phProv, uwContainer.lpUText, uwProvider.lpUText, dwProvType, dwFlags)) to bResult                   
73541>>>>>>>>>
73541>>>>>>>>>    Function_Return bResult
73542>>>>>>>>>End_Function
73543>>>>>>>>>
73543>>>>>>>>>External_Function CryptReleaseContext "CryptReleaseContext" advapi32.dll ;    Handle hProv ;    Integer dwFlags ;    Returns Boolean
73544>>>>>>>>>
73544>>>>>>>>>External_Function CryptCreateHash "CryptCreateHash" advapi32.dll ;    Handle hProv ;    Integer Algid ;    Handle hKey ;    Integer dwFlags ;    Pointer phHash ;    Returns Boolean
73545>>>>>>>>>
73545>>>>>>>>>External_Function CryptDestroyHash "CryptDestroyHash" advapi32.dll ;    Handle hHash ;    Returns Boolean
73546>>>>>>>>>
73546>>>>>>>>>External_Function CryptHashData "CryptHashData" advapi32.dll ;    Handle hHash ;    Pointer pbData ;    Integer dwDataLen ;    Integer dwFlags ;    Returns Boolean
73547>>>>>>>>>
73547>>>>>>>>>External_Function CryptDeriveKey "CryptDeriveKey" advapi32.dll ;    Handle hProv ;    Integer Algid ;    Handle hBaseData ;    Integer dwFlags ;    Pointer phKey ;    Returns Boolean
73548>>>>>>>>>
73548>>>>>>>>>External_Function CryptGetHashParam "CryptGetHashParam" advapi32.dll ;    Handle hHash ;    DWord dwParam ;    Pointer pbData ;    Pointer pdwDataLen ;    DWord dwFlags ;    Returns Integer
73549>>>>>>>>>
73549>>>>>>>>>External_Function CryptDestroyKey "CryptDestroyKey" advapi32.dll ;    Handle hKey ;    Returns Boolean
73550>>>>>>>>>
73550>>>>>>>>>External_Function CryptImportKey "CryptImportKey" advapi32.dll ;    Handle hProv ;    Pointer pbData ;    Integer dwDataLen ;    Handle hPubKey ;    Integer dwFlags ;    Pointer phKey ;    Returns Boolean
73551>>>>>>>>>
73551>>>>>>>>>External_Function CryptGetKeyParam "CryptGetKeyParam" advapi32.dll ;    Handle hKey ;    Integer dwParam ;    Pointer pbData ;    Pointer pdwDataLen ;    Integer dwFlags ;    Returns Boolean
73552>>>>>>>>>    
73552>>>>>>>>>External_Function CryptSetKeyParam "CryptSetKeyParam" advapi32.dll ;    Handle   hKey ;    UInteger dwParam ;    Pointer  pbdata ;    UInteger dwFlags ;    Returns  Boolean
73553>>>>>>>>>
73553>>>>>>>>>External_Function CryptEncrypt "CryptEncrypt" advapi32.dll ;    Handle hKey ;    Handle hHash ;    Boolean bFinal ;    Integer dwFlags ;    Pointer pbData ;    Pointer pdwDataLen ;    Integer dwBufLen ;    Returns Boolean
73554>>>>>>>>>
73554>>>>>>>>>External_Function CryptDecrypt "CryptDecrypt" advapi32.dll ;    Handle hKey ;    Handle hHash ;    Boolean bFinal ;    Integer dwFlags ;    Pointer pbData ;    Pointer pdwDataLen ;    Returns Boolean
73555>>>>>>>>>
73555>>>>>>>>>External_Function CryptGenRandom "CryptGenRandom" advapi32.dll ;    Handle hProv ;    DWord dwLen ;    Pointer pbBuffer ;    Returns Boolean
73556>>>>>>>>>    
73556>>>>>>>>>External_Function CryptSetHashParam "CryptSetHashParam" advapi32.dll ;    Handle hHash ;    DWord dwParam ;    Pointer pbData ;    Integer dwFlags ;    Returns Boolean
73557>>>>>>>>>    
73557>>>>>>>>>External_Function CryptGenKey "CryptGenKey" advapi32.dll ;    Handle hProv ;    Integer Algid ;    Integer dwFlags ;    Pointer phKey ;    Returns Boolean
73558>>>>>>>>>    
73558>>>>>>>>>External_Function CryptExportKey "CryptExportKey" advapi32.dll ;    Handle hKey ;    Handle hExpKey ;    Integer dwBlobType ;    Integer dwFlags ;    Pointer pbData ;    Pointer pdwDataLen ;    Returns Boolean
73559>>>>>>>
73559>>>>>>>Class cCryptographerEx is a cObject
73560>>>>>>>    
73560>>>>>>>    Procedure Construct_Object
73562>>>>>>>        Forward Send Construct_Object
73564>>>>>>>        
73564>>>>>>>        Property String     psProvider  MS_ENHANCED_PROV
73565>>>>>>>        Property Integer    piProvider  PROV_RSA_FULL
73566>>>>>>>        Property Integer    piCipher    CALG_RC4
73567>>>>>>>        Property Integer    piHash      CALG_MD5
73568>>>>>>>        
73568>>>>>>>        // Private properties
73568>>>>>>>        Property Handle     Private_phProv
73569>>>>>>>        
73569>>>>>>>        // Block cipher properties
73569>>>>>>>        Property UChar[]    paKey
73570>>>>>>>        Property UChar[]    paIV
73571>>>>>>>        Property Integer    piKeyAlg        PLAINTEXTKEYBLOB
73572>>>>>>>        Property Integer    piKeyType       CALG_AES_256
73573>>>>>>>        Property Integer    piKeyPadding    PKCS5_PADDING
73574>>>>>>>        Property Integer    piKeyMode       CRYPT_MODE_CBC
73575>>>>>>>        Property Integer    piBlockSize     16
73576>>>>>>>    End_Procedure
73577>>>>>>>    
73577>>>>>>>    
73577>>>>>>>    // Acquire key container handle
73577>>>>>>>    Function AcquireContext Returns Handle
73579>>>>>>>        Integer iProvider
73579>>>>>>>        WString wProvider
73579>>>>>>>        Handle hProv
73579>>>>>>>        Boolean bOk
73579>>>>>>>        Pointer pProv
73579>>>>>>>        
73579>>>>>>>        Move 0 to hProv
73580>>>>>>>        Get piProvider to iProvider
73581>>>>>>>        Get psProvider to wProvider
73582>>>>>>>        
73582>>>>>>>        //  Determine address to be passed as provider
73582>>>>>>>        If (Trim(wProvider) <> "") Begin
73584>>>>>>>            Move (AddressOf(wProvider)) to pProv
73585>>>>>>>        End
73585>>>>>>>>
73585>>>>>>>        Else Begin
73586>>>>>>>            Move 0 to pProv
73587>>>>>>>        End
73587>>>>>>>>
73587>>>>>>>        
73587>>>>>>>        //  Acquire Crypto Context. Note: pProv is pointer to UTF16 string.
73587>>>>>>>        Move (CryptAcquireContextW(AddressOf(hProv),0,pProv,iProvider,CRYPT_VERIFYCONTEXT)) to bOk
73588>>>>>>>        If (not(bOk) or hProv = 0) Begin
73590>>>>>>>            Move (CryptAcquireContextW(AddressOf(hProv),0,pProv,iProvider,CRYPT_NEWKEYSET ior CRYPT_VERIFYCONTEXT)) to bOk
73591>>>>>>>        End
73591>>>>>>>>
73591>>>>>>>        
73591>>>>>>>        If (not(bOk) or hProv = 0) Begin
73593>>>>>>>            // Fallback to original
73593>>>>>>>            Move (CryptAcquireContextW(AddressOf(hProv),0,pProv,iProvider,0)) to bOk
73594>>>>>>>            
73594>>>>>>>            If (not(bOk) or hProv = 0) Begin
73596>>>>>>>                Move (CryptAcquireContextW(AddressOf(hProv),0,pProv,iProvider,CRYPT_NEWKEYSET)) to bOk
73597>>>>>>>            End
73597>>>>>>>>
73597>>>>>>>        End
73597>>>>>>>>
73597>>>>>>>        Set Private_phProv to hProv
73598>>>>>>>        
73598>>>>>>>        Function_Return hProv
73599>>>>>>>    End_Function
73600>>>>>>>    
73600>>>>>>>    // Releases key container handle
73600>>>>>>>    Function ReleaseContext Handle hProv Returns Boolean
73602>>>>>>>        Function_Return (CryptReleaseContext(hProv,0))
73603>>>>>>>    End_Function
73604>>>>>>>    
73604>>>>>>>    // Creates hash object
73604>>>>>>>    Function CreateHash Handle hProv Returns Handle
73606>>>>>>>        Integer iAlgorithm
73606>>>>>>>        Handle hHash
73606>>>>>>>        Boolean bOk
73606>>>>>>>        
73606>>>>>>>        Move 0 to hHash
73607>>>>>>>        Get piHash to iAlgorithm
73608>>>>>>>        Move (CryptCreateHash(hProv,iAlgorithm,0,0,AddressOf(hHash))) to bOk
73609>>>>>>>        
73609>>>>>>>        Function_Return hHash
73610>>>>>>>    End_Function
73611>>>>>>>    
73611>>>>>>>    // Destroys the hash object
73611>>>>>>>    Function DestroyHash Handle hHash Returns Boolean
73613>>>>>>>        Function_Return (CryptDestroyHash(hHash))
73614>>>>>>>    End_Function
73615>>>>>>>    
73615>>>>>>>    // Adds data to hash object
73615>>>>>>>    Function HashData Handle hHash UChar[] ucData Returns Boolean
73617>>>>>>>        Function_Return (CryptHashData(hHash,AddressOf(ucData), SizeOfArray(ucData),0))
73618>>>>>>>    End_Function
73619>>>>>>>    
73619>>>>>>>    // Generates session key
73619>>>>>>>    Function DeriveKey Handle hProv Handle hHash Returns Handle
73621>>>>>>>        Integer iAlgorithm
73621>>>>>>>        Handle hKey
73621>>>>>>>        Boolean bOk
73621>>>>>>>        
73621>>>>>>>        Move 0 to hKey
73622>>>>>>>        Get piCipher to iAlgorithm
73623>>>>>>>        Move (CryptDeriveKey(hProv,iAlgorithm,hHash,CRYPT_EXPORTABLE,AddressOf(hKey))) to bOk
73624>>>>>>>        
73624>>>>>>>        Function_Return hKey
73625>>>>>>>    End_Function
73626>>>>>>>    
73626>>>>>>>    // Imports a plain text key
73626>>>>>>>    Function ImportPlainTextKey Handle hProv UChar[] ucaKey Returns Handle
73628>>>>>>>        tPLAINTEXTKEYBLOB blobhead
73628>>>>>>>        tPLAINTEXTKEYBLOB blobhead
73628>>>>>>>        Boolean   bSuccess
73628>>>>>>>        Handle    hKey
73628>>>>>>>        Integer   iHeadSize iKeySize
73628>>>>>>>        UChar[]   ucaKeyblob
73629>>>>>>>        Integer iVoid
73629>>>>>>>        
73629>>>>>>>        Move (SizeOfType(tPLAINTEXTKEYBLOB)) to iHeadSize
73630>>>>>>>        Move (SizeOfArray(ucaKey)) to iKeySize
73631>>>>>>>        
73631>>>>>>>        Move PLAINTEXTKEYBLOB to blobhead.hdr.bType
73632>>>>>>>        Move CUR_BLOB_VERSION   to blobhead.hdr.bVersion
73633>>>>>>>        Get piCipher            to blobhead.hdr.aiKeyAlg
73634>>>>>>>        Move iKeySize           to blobhead.dwKeySize
73635>>>>>>>        
73635>>>>>>>        Move (ResizeArray(ucaKeyblob, iHeadSize)) to ucaKeyblob
73636>>>>>>>        Move (CopyMemory(AddressOf(ucaKeyblob), AddressOf(blobhead), iHeadSize)) to iVoid
73637>>>>>>>        Move (AppendArray(ucaKeyblob, ucaKey)) to ucaKeyblob
73638>>>>>>>        
73638>>>>>>>        Move 0 to hKey
73639>>>>>>>        Move (CryptImportKey(hProv, AddressOf(ucaKeyblob), SizeOfArray(ucaKeyblob), 0, 0, AddressOf(hKey))) to bSuccess
73640>>>>>>>        If (not(bSuccess)) Begin
73642>>>>>>>            Move (ShowLastError()) to iVoid
73643>>>>>>>        End
73643>>>>>>>>
73643>>>>>>>        
73643>>>>>>>        Function_Return hKey
73644>>>>>>>    End_Function
73645>>>>>>>    
73645>>>>>>>    // Destroys the key
73645>>>>>>>    Function DestroyKey Handle hKey Returns Boolean
73647>>>>>>>        Function_Return (CryptDestroyKey(hKey))
73648>>>>>>>    End_Function
73649>>>>>>>    
73649>>>>>>>    // Retrieves key data
73649>>>>>>>    Function KeyParameter Handle hKey Integer iQuery Returns Integer
73651>>>>>>>        Integer iBuffer iLen
73651>>>>>>>        Boolean bOk
73651>>>>>>>        
73651>>>>>>>        Move (SizeOfType(Integer)) to iLen
73652>>>>>>>        Move (CryptGetKeyParam(hKey,iQuery,AddressOf(iBuffer),AddressOf(iLen),0)) to bOk
73653>>>>>>>        Function_Return iBuffer
73654>>>>>>>    End_Function
73655>>>>>>>    
73655>>>>>>>    // Retrieves a hash value
73655>>>>>>>    Function HashValue Handle lhHash Returns UChar[]
73657>>>>>>>        UChar[] ucHash
73658>>>>>>>        Integer liResult
73658>>>>>>>        DWord   dwDataLen
73658>>>>>>>        
73658>>>>>>>        Move 0 to dwDataLen
73659>>>>>>>        Move (CryptGetHashParam(lhHash,HP_HASHVAL,0,AddressOf(dwDataLen),0)) to liResult
73660>>>>>>>        If (liResult = 0) ;            Function_Return ""
73663>>>>>>>        
73663>>>>>>>        Move (ResizeArray(ucHash, dwDataLen, 0)) to ucHash
73664>>>>>>>        Move (CryptGetHashParam(lhHash,HP_HASHVAL,AddressOf(ucHash),AddressOf(dwDataLen),0)) to liResult
73665>>>>>>>        If (liResult = 0) ;            Function_Return ""
73668>>>>>>>        
73668>>>>>>>        Function_Return ucHash
73669>>>>>>>    End_Function
73670>>>>>>>
73670>>>>>>>    // Encrypts data
73670>>>>>>>    Function Encrypt UChar[] ucPassword UChar[] ucData Returns UChar[]
73672>>>>>>>        Handle hProv hHash hKey
73672>>>>>>>        Integer iAlgorithm iDataLen iCipherLen iErr
73672>>>>>>>        Boolean bOk
73672>>>>>>>        
73672>>>>>>>        Get AcquireContext to hProv
73673>>>>>>>        If (hProv) Begin
73675>>>>>>>            Get CreateHash hProv to hHash
73676>>>>>>>            If (hHash) Begin
73678>>>>>>>                Get HashData hHash ucPassword to bOk
73679>>>>>>>                If (bOk) Begin
73681>>>>>>>                    Get piCipher to iAlgorithm
73682>>>>>>>                    Get DeriveKey hProv hHash to hKey
73683>>>>>>>                End
73683>>>>>>>>
73683>>>>>>>                Get DestroyHash hHash to bOk
73684>>>>>>>            End
73684>>>>>>>>
73684>>>>>>>            
73684>>>>>>>            If (hKey) Begin
73686>>>>>>>                //  First call to determine resulting data size
73686>>>>>>>                Move (SizeOfArray(ucData)) to iDataLen
73687>>>>>>>                Move (SizeOfArray(ucData)) to iCipherLen
73688>>>>>>>                Move (CryptEncrypt(hKey, 0, True, 0, 0, AddressOf(iCipherLen), iDataLen)) to bOk
73689>>>>>>>                
73689>>>>>>>                //  Reserve space in string
73689>>>>>>>                If (iDataLen < iCipherLen) Begin
73691>>>>>>>                    Move (ResizeArray(ucData, iCipherLen, 0)) to ucData
73692>>>>>>>                End
73692>>>>>>>>
73692>>>>>>>                
73692>>>>>>>                //  Call to really decrypt
73692>>>>>>>                Move (CryptEncrypt(hKey,0,True,0,AddressOf(ucData),AddressOf(iDataLen),SizeOfArray(ucData))) to bOk
73693>>>>>>>                //If (not(bOk)) Begin
73693>>>>>>>                //Move "" to sData
73693>>>>>>>                //Move (GetLastError()) to iErr
73693>>>>>>>                //End
73693>>>>>>>                
73693>>>>>>>                Get DestroyKey hKey to bOk
73694>>>>>>>            End 
73694>>>>>>>>
73694>>>>>>>            Get ReleaseContext hProv to bOk
73695>>>>>>>        End 
73695>>>>>>>>
73695>>>>>>>        Function_Return ucData
73696>>>>>>>    End_Function
73697>>>>>>>    
73697>>>>>>>    // Decrypts data
73697>>>>>>>    Function Decrypt UChar[] ucPassword UChar[] ucData Returns UChar[]
73699>>>>>>>        Handle hProv hHash hKey
73699>>>>>>>        Integer iAlgorithm iDataLen
73699>>>>>>>        Boolean bOk
73699>>>>>>>        
73699>>>>>>>        Get AcquireContext to hProv
73700>>>>>>>        If (hProv) Begin
73702>>>>>>>            Get CreateHash hProv to hHash
73703>>>>>>>            If (hHash) Begin
73705>>>>>>>                Get HashData hHash ucPassword to bOk
73706>>>>>>>                If (bOk) Begin
73708>>>>>>>                    Get piCipher to iAlgorithm
73709>>>>>>>                    Get DeriveKey hProv hHash to hKey
73710>>>>>>>                End
73710>>>>>>>>
73710>>>>>>>                Get DestroyHash hHash to bOk
73711>>>>>>>            End
73711>>>>>>>>
73711>>>>>>>            
73711>>>>>>>            If (hKey) Begin
73713>>>>>>>                Move (SizeOfArray(ucData)) to iDataLen
73714>>>>>>>                Move (CryptDecrypt(hKey,0,True,0,AddressOf(ucData),AddressOf(iDataLen))) to bOk
73715>>>>>>>                //  Resulting data can be shorter as the input string, in that case we shorten the result string
73715>>>>>>>                If (SizeOfArray (ucData) > iDataLen) Begin
73717>>>>>>>                    Move (ResizeArray(ucData, iDataLen)) to ucData
73718>>>>>>>                End
73718>>>>>>>>
73718>>>>>>>                
73718>>>>>>>                Get DestroyKey hKey to bOk
73719>>>>>>>            End
73719>>>>>>>>
73719>>>>>>>            Get ReleaseContext hProv to bOk
73720>>>>>>>        End
73720>>>>>>>>
73720>>>>>>>        Function_Return ucData
73721>>>>>>>    End_Function
73722>>>>>>>    
73722>>>>>>>    // Creates a key
73722>>>>>>>    Function CreateKey Handle hProv Returns Handle
73724>>>>>>>        Integer iAlg iType iByte iLength iSize
73724>>>>>>>        CryptoBlob keyBlob
73724>>>>>>>        CryptoBlob keyBlob
73724>>>>>>>        Boolean bOk
73724>>>>>>>        Handle hKey
73724>>>>>>>        UChar[] aKey
73725>>>>>>>
73725>>>>>>>        Get paKey to aKey
73726>>>>>>>        Get piKeyAlg to iAlg
73727>>>>>>>        Get piKeyType to iType
73728>>>>>>>        Move iAlg                   to keyBlob.header.bType
73729>>>>>>>        Move CUR_BLOB_VERSION       to keyBlob.header.bVersion
73730>>>>>>>        Move iType                  to keyBlob.header.aiKeyAlg
73731>>>>>>>        Move (SizeOfArray(aKey))    to keyBlob.cbKeySize
73732>>>>>>>        
73732>>>>>>>        Move (SizeOfArray(aKey)-1) to iLength
73733>>>>>>>        For iByte from 0 to iLength
73739>>>>>>>>
73739>>>>>>>            Move aKey[iByte] to keyBlob.rgbKeyData[iByte]
73740>>>>>>>        Loop
73741>>>>>>>>
73741>>>>>>>        
73741>>>>>>>        Move 0 to hKey
73742>>>>>>>        Move (CryptImportKey(hProv,AddressOf(keyBlob),SizeOfType(CryptoBlob),0,0,AddressOf(hKey))) to bOk
73743>>>>>>>        Function_Return hKey
73744>>>>>>>    End_Function
73745>>>>>>>    
73745>>>>>>>    // Sets the key parameters
73745>>>>>>>    Function SetKeyParameters Handle hKey Returns Boolean
73747>>>>>>>        Integer iPadding iMode
73747>>>>>>>        Boolean bOk
73747>>>>>>>        UChar[] aIV
73748>>>>>>>        
73748>>>>>>>        //Move (SizeOfArray(aIV)-1) to iLength
73748>>>>>>>        //For iByte from 0 to iLength
73748>>>>>>>        //    Move iByte to aIV[iByte]
73748>>>>>>>        //Loop
73748>>>>>>>
73748>>>>>>>        // Set initialization vector
73748>>>>>>>        Get paIV to aIV
73749>>>>>>>        Move (CryptSetKeyParam(hKey,KP_IV,AddressOf(aIV),0)) to bOk
73750>>>>>>>        If (bOk) Begin
73752>>>>>>>            // Set padding
73752>>>>>>>            Get piKeyPadding to iPadding
73753>>>>>>>            Move (CryptSetKeyParam(hKey,KP_PADDING,AddressOf(iPadding),0)) to bOk
73754>>>>>>>            If (bOk) Begin
73756>>>>>>>                // Set move
73756>>>>>>>                Get piKeyMode to iMode
73757>>>>>>>                Move (CryptSetKeyParam(hKey,KP_MODE,AddressOf(iMode),0)) to bOk
73758>>>>>>>            End
73758>>>>>>>>
73758>>>>>>>        End
73758>>>>>>>>
73758>>>>>>>        Function_Return bOk        
73759>>>>>>>    End_Function
73760>>>>>>>    
73760>>>>>>>    // Encrypts using block cipher
73760>>>>>>>    Function BlockEncrypt UChar[] ucData Returns UChar[]
73762>>>>>>>        Handle hProv hKey
73762>>>>>>>        Integer iLen iSize iBlocks
73762>>>>>>>        Boolean bOk
73762>>>>>>>        
73762>>>>>>>        Get AcquireContext to hProv
73763>>>>>>>        If (hProv) Begin
73765>>>>>>>            // Create key
73765>>>>>>>            Get CreateKey hProv to hKey
73766>>>>>>>            If (hKey) Begin
73768>>>>>>>                Get SetKeyParameters hKey to bOk
73769>>>>>>>                If (bOk) Begin
73771>>>>>>>                    // Buffer for block ciphers can be up to block length larger
73771>>>>>>>                    Get piBlockSize to iSize
73772>>>>>>>                    Move (SizeOfArray(ucData)) to iLen
73773>>>>>>>                    
73773>>>>>>>                    Move ((iLen/iSize)+1) to iBlocks
73774>>>>>>>                    Move (ResizeArray(ucData,iBlocks*iSize)) to ucData
73775>>>>>>>                    Move (CryptEncrypt(hKey,0,True,0,AddressOf(ucData),AddressOf(iLen),SizeOfArray(ucData))) to bOk
73776>>>>>>>                End
73776>>>>>>>>
73776>>>>>>>                Get DestroyKey hKey to bOk
73777>>>>>>>            End
73777>>>>>>>>
73777>>>>>>>            Get ReleaseContext hProv to bOk
73778>>>>>>>        End
73778>>>>>>>>
73778>>>>>>>        Function_Return ucData
73779>>>>>>>    End_Function
73780>>>>>>>    
73780>>>>>>>    // Decrypts using block cipher
73780>>>>>>>    Function BlockDecrypt UChar[] ucData Returns UChar[]
73782>>>>>>>        Handle hProv hKey
73782>>>>>>>        Integer iLen
73782>>>>>>>        Boolean bOk
73782>>>>>>>        
73782>>>>>>>        Get AcquireContext to hProv
73783>>>>>>>        If (hProv) Begin
73785>>>>>>>            // Create key
73785>>>>>>>            Get CreateKey hProv to hKey
73786>>>>>>>            If (hKey) Begin
73788>>>>>>>                Get SetKeyParameters hKey to bOk
73789>>>>>>>                If (bOk) Begin
73791>>>>>>>                    Move (SizeOfArray(ucData)) to iLen
73792>>>>>>>                    Move (CryptDecrypt(hKey,0,True,0,AddressOf(ucData),AddressOf(iLen))) to bOk
73793>>>>>>>                    Move (ResizeArray(ucData,iLen)) to ucData
73794>>>>>>>                End
73794>>>>>>>>
73794>>>>>>>                Get DestroyKey hKey to bOk
73795>>>>>>>            End
73795>>>>>>>>
73795>>>>>>>            Get ReleaseContext hProv to bOk
73796>>>>>>>        End
73796>>>>>>>>
73796>>>>>>>        Function_Return ucData
73797>>>>>>>    End_Function
73798>>>>>>>    
73798>>>>>>>    
73798>>>>>>>    //  Generates random data.
73798>>>>>>>    Function GenerateRandom Integer iBytes Returns UChar[]
73800>>>>>>>        Handle hProv
73800>>>>>>>        UChar[] uaResult
73801>>>>>>>        Boolean bRes
73801>>>>>>>        
73801>>>>>>>        Get AcquireContext to hProv
73802>>>>>>>        
73802>>>>>>>        Move (ResizeArray(uaResult, iBytes)) to uaResult
73803>>>>>>>        Move (CryptGenRandom(hProv, iBytes, AddressOf(uaResult))) to bRes
73804>>>>>>>        
73804>>>>>>>        Get ReleaseContext hProv to bRes
73805>>>>>>>        
73805>>>>>>>        Function_Return uaResult
73806>>>>>>>    End_Function
73807>>>>>>>    
73807>>>>>>>    //  Generates random data and does a base64 encoding to properly present it as a string.
73807>>>>>>>    Function GenerateRandomString Integer iLength Returns String
73809>>>>>>>        String sResult
73809>>>>>>>        UChar[] ucData
73810>>>>>>>        Pointer pBase64
73810>>>>>>>        Integer iVoid
73810>>>>>>>        
73810>>>>>>>        Get GenerateRandom iLength to ucData
73811>>>>>>>        
73811>>>>>>>        Move (Base64Encode(AddressOf(ucData), iLength)) to pBase64
73812>>>>>>>        Move (PointerToString(pBase64)) to sResult
73813>>>>>>>        Move (Free(pBase64)) to iVoid
73814>>>>>>>        
73814>>>>>>>        Function_Return (Left(sResult, iLength))
73815>>>>>>>    End_Function
73816>>>>>>>    
73816>>>>>>>End_Class
73817>>>>>
73817>>>>>Class cLoginEncryption is a cObject
73818>>>>>    
73818>>>>>    Procedure Construct_Object
73820>>>>>        Forward Send Construct_Object
73822>>>>>        // this must be set to a multi (40ish) character random key
73822>>>>>        Property String psEncryptPassword ""
73823>>>>>        
73823>>>>>        Object oDataCrypter is a cCryptographerEx
73825>>>>>            Set piHash to CALG_SHA_256
73826>>>>>            Set piCipher to CALG_AES_256
73827>>>>>            Set psProvider to "" //  Not providing a specific provider gives the default provider for the provider type
73828>>>>>            Set piProvider to PROV_RSA_AES
73829>>>>>        End_Object
73830>>>>>    End_Procedure
73831>>>>>    
73831>>>>>    // This can be augmented to return a password encryption key using any
73831>>>>>    // hidden mechanism desired.
73831>>>>>    Function GetEncryptionPassword Returns String
73833>>>>>        String sPassword
73833>>>>>        Get psEncryptPassword to sPassword
73834>>>>>        Function_Return sPassword
73835>>>>>    End_Function
73836>>>>>    
73836>>>>>    // Encrypts a string into an unreadable hash that can later be decrypted using DecryptKey.
73836>>>>>    //
73836>>>>>    // Params:
73836>>>>>    //   sPlainText     String to encrypt.
73836>>>>>    // Returns:
73836>>>>>    //   Base64 encoded hash.
73836>>>>>    Function EncryptPassword String sPlainText Returns String
73838>>>>>        String sEncryptPassword sBase64
73838>>>>>        UChar[] ucBinary
73839>>>>>        Pointer pBase64
73839>>>>>        Integer iVoid
73839>>>>>        
73839>>>>>        //  Encrypt Key
73839>>>>>        Get GetEncryptionPassword to sEncryptPassword
73840>>>>>        If (sEncryptPassword = "") Begin
73842>>>>>            Error DFERR_PROGRAM "No encryption password set"
73843>>>>>>
73843>>>>>        End
73843>>>>>>
73843>>>>>        
73843>>>>>        Get Encrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) (StringToUCharArray(sPlainText)) to ucBinary
73844>>>>>        
73844>>>>>        If (SizeOfArray(ucBinary) = 0) Begin
73846>>>>>            Error DFERR_PROGRAM "Unable to encrypt database login password"
73847>>>>>>
73847>>>>>            Function_Return ""
73848>>>>>        End
73848>>>>>>
73848>>>>>        
73848>>>>>        //  Encode binary hash to Base64
73848>>>>>        Move (Base64Encode(AddressOf(ucBinary), SizeOfArray(ucBinary))) to pBase64
73849>>>>>        Move (PointerToString(pBase64)) to sBase64
73850>>>>>        Move (Free(pBase64)) to iVoid
73851>>>>>        
73851>>>>>        Function_Return sBase64
73852>>>>>    End_Function
73853>>>>>    
73853>>>>>    
73853>>>>>    // Decrypts the unreadable hash generated by EncryptKey into a readable string.
73853>>>>>    //
73853>>>>>    // Params:
73853>>>>>    //   sBase64EncryptedPassword       Base64 Encrypted password
73853>>>>>    // Returns:
73853>>>>>    //   Readable plain text password
73853>>>>>    Function DecryptPassword String sBase64EncryptedPassword Returns String
73855>>>>>        String sEncryptPassword
73855>>>>>        UChar[] ucBinary ucPlain
73857>>>>>        Boolean bIsHex
73857>>>>>        Integer iLen iVoid
73857>>>>>        Pointer pBinary
73857>>>>>        
73857>>>>>        If (sBase64EncryptedPassword <> "") Begin
73859>>>>>            //  Decode from Base64
73859>>>>>            Move (Base64Decode(AddressOf(sBase64EncryptedPassword), &iLen)) to pBinary
73860>>>>>            
73860>>>>>            Move (ResizeArray(ucBinary, iLen, 0)) to ucBinary
73861>>>>>            Move (MemCopy(AddressOf(ucBinary), pBinary, iLen)) to iVoid
73862>>>>>                        
73862>>>>>            Move (Free(pBinary)) to iVoid
73863>>>>>            
73863>>>>>            //  Encrypted binary hash to string
73863>>>>>            Get GetEncryptionPassword to sEncryptPassword
73864>>>>>            Get Decrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) ucBinary to ucPlain
73865>>>>>        End
73865>>>>>>
73865>>>>>        
73865>>>>>        Function_Return (UCharArrayToString(ucPlain))
73866>>>>>    End_Function
73867>>>>>End_Class
73868>>>
73868>>>Object oLoginEncryption is a cLoginEncryption
73870>>>
73870>>>    // this must be created in your appsrc directory and must contain an encryption
73870>>>    // key that is set to psEncryptPassword. It will look something like this
73870>>>    //
73870>>>    // Set psEncryptPassword to "JchUAo7W@r.b{<Yk~OONi0nq=sMi[*Rn[A-`Vo)q"
73870>>>    //  
Including file: LoginEncryptionKey.inc    (C:\DataFlex Projects\OrderTutorial\AppSrc\LoginEncryptionKey.inc)
73870>>>>// Studio generated login encryption key
73870>>>>Set psEncryptPassword to "d)WFt\0}hAxqlYjDko]M]Bg05s71NL=zvRX0-xcS"
73871>>>>
73871>>>    
73871>>>    // use this to register this object to your cConnection Object. This object
73871>>>    // must be created after the cConnection object
73871>>>    Move Self to ghoLoginEncryption
73872>>>End_Object
73873>        Use DatabaseLoginDialog.dg
Including file: DatabaseLoginDialog.dg    (C:\Program Files\DataFlex 20.1\Pkg\DatabaseLoginDialog.dg)
73873>>>
73873>>>Use Windows.pkg
73873>>>Use cConnection.pkg
73873>>>Use dfLine.pkg
73873>>>
73873>>>Object oDatabaseLoginDialog is a ModalPanel
73875>>>    Set Label to "Database Login"
73876>>>    Set Location to 2 2
73877>>>    Set Size to 110 211
73878>>>    
73878>>>    Property String psId
73880>>>    Property Boolean pbOk False
73882>>>    Property Boolean pbChanged False
73884>>>    Property Boolean pbAllowRemember True
73886>>>    
73886>>>    // this registers this object with the cConnection object.
73886>>>    Move Self to ghoLoginConnectDialog
73887>>>    
73887>>>    Object oUserIDForm is a Form
73889>>>        Set Label to "User Name"
73890>>>        Set Size to 12 85
73891>>>        Set Location to 34 79
73892>>>        Set Label_Col_Offset to 64
73893>>>        Set peAnchors to anTopLeftRight
73894>>>    End_Object
73895>>>    
73895>>>    Object oPwdForm is a Form
73897>>>        Set Size to 12 85
73898>>>        Set Location to 49 79
73899>>>        Set Label_Col_Offset to 64
73900>>>        Set Password_State to True
73901>>>        Set peAnchors to anTopLeftRight
73902>>>        Set Label to "Password"
73903>>>    End_Object
73904>>>    
73904>>>    Object oTrustedConnection is a CheckBox
73906>>>        Set Size to 10 50
73907>>>        Set Location to 65 79
73908>>>        Set Label to "Trusted Connection"
73909>>>    End_Object
73910>>>    
73910>>>    Object oRemember is a CheckBox
73912>>>        Set Size to 10 50
73913>>>        Set Location to 79 14
73914>>>        Set Label to "Remember and don't ask again"
73915>>>        Set Checked_State to True
73916>>>    End_Object
73917>>>    
73917>>>    Object oLogin_btn is a Button
73919>>>        Set Label to "&Login"
73920>>>        Set Location to 92 102
73921>>>        Set peAnchors to anBottomRight
73922>>>        Set Default_State to True
73923>>>        
73923>>>        Procedure OnClick
73926>>>            Boolean bTrust
73926>>>            String sUser sPwd sConn sErr sId
73926>>>            Integer iError
73926>>>            Get psId to sId
73927>>>            Get Value of oUserIDForm to sUser
73928>>>            Get Value of oPwdForm to sPwd
73929>>>            Get Checked_State of oTrustedConnection to bTrust
73930>>>            
73930>>>            Get LoginConnectIdNewCredentials of ghoConnection sId sUser sPwd bTrust to iError
73931>>>            If (iError=0) Begin
73933>>>                Set pbOk to True
73934>>>                Set pbChanged to True
73935>>>                Send Close_Panel
73936>>>            End
73936>>>>
73936>>>            Else Begin
73937>>>                Get psErrorText of ghoConnection to sErr
73938>>>                Send UserError sErr "Login Error"
73939>>>            End
73939>>>>
73939>>>        End_Procedure
73940>>>    End_Object
73941>>>    
73941>>>    Object oCancel_btn is a Button
73943>>>        Set Label to "&Cancel"
73944>>>        Set Location to 92 157
73945>>>        Set peAnchors to anBottomRight
73946>>>        
73946>>>        Procedure OnClick
73949>>>            Send Close_Panel
73950>>>        End_Procedure
73951>>>    End_Object
73952>>>    
73952>>>    Object oConnectionIdInfo is a TextBox
73954>>>        Set Size to 10 50
73955>>>        Set Location to 4 14
73956>>>        Set Label to 'Connection Id='
73957>>>    End_Object
73958>>>    
73958>>>    Object oConnectionServerInfo is a TextBox
73960>>>        Set Size to 10 50
73961>>>        Set Location to 16 14
73962>>>        Set Label to 'Server'
73963>>>    End_Object
73964>>>    
73964>>>    Object oLineControl1 is a LineControl
73966>>>        Set Size to 2 202
73967>>>        Set Location to 29 5
73968>>>    End_Object
73969>>>    
73969>>>    Function LoginConnectIdDialog String sId Returns Boolean
73972>>>        Boolean bOk bChanged bTrusted bAllowRemember bRemember
73972>>>        String sUser sPwd sDescription
73972>>>        tConnection Connect
73972>>>        tConnection Connect
73972>>>        
73972>>>        Get pbAllowRemember to bAllowRemember
73973>>>        
73973>>>        
73973>>>        If not bAllowRemember Begin
73975>>>            Set Enabled_State of oRemember to bRemember
73976>>>            Set Visible_State of oRemember to bRemember
73977>>>        End
73977>>>>
73977>>>        
73977>>>        Get ConnectionIdInfo of ghoConnection sId to Connect
73978>>>        Set Value of oConnectionIdInfo to ("Connection ID="+Connect.sId)
73979>>>        Set Value of oConnectionServerInfo to Connect.sString
73980>>>        
73980>>>        Set psId to sId
73981>>>        Set pbOk to False
73982>>>        Set pbChanged to False
73983>>>        Set Value of oUserIDForm to Connect.sUID
73984>>>        Set Value of oPwdForm to ""
73985>>>        
73985>>>        Send Popup
73986>>>        
73986>>>        Get pbOk to bOk
73987>>>        Get pbChanged to bChanged
73988>>>        If (bChanged and bOk) Begin
73990>>>            If bAllowRemember Begin
73992>>>                Get Checked_State of oRemember to bRemember
73993>>>                If bRemember Begin
73995>>>                    Get Checked_State of oTrustedConnection to bTrusted
73996>>>                    If not (bTrusted) Begin
73998>>>                        Get Value of oUserIDForm to sUser
73999>>>                        Get Value of oPwdForm to sPwd
74000>>>                    End
74000>>>>
74000>>>                    Get StoreConnectionIdCredentials of ghoConnection sId sUser sPwd bTrusted to bOk
74001>>>                End
74001>>>>
74001>>>            End
74001>>>>
74001>>>        End
74001>>>>
74001>>>        Function_Return bOk
74002>>>    End_Function
74003>>>    
74003>>>    
74003>>>    On_Key Key_Alt+Key_O Send KeyAction of oLogin_btn
74004>>>    On_Key Key_Alt+Key_L Send KeyAction of oCancel_btn
74005>>>End_Object
74006>>>
74006>    End_Object
74007>
74007>End_Object
74008>
74008>Object oToolTipController is a cToolTipController
74010>    Move Self to ghoToolTipController
74011>End_Object
74012>
74012>Use oEditContextMenu.pkg
Including file: oEditContextMenu.pkg    (C:\Program Files\DataFlex 20.1\Pkg\oEditContextMenu.pkg)
74012>>>Use cCJStandardMenuItemClasses.pkg
74012>>>
74012>>>Object oEditContextMenu is a cCJContextMenu
74014>>>    
74014>>>    Move Self to Default_Form_Floating_Menu_ID
74015>>>    
74015>>>    Object oUndoMenuItem is a cCJUndoMenuItem
74017>>>    End_Object
74018>>>    
74018>>>    Object oCutMenuItem is a cCJCutMenuItem
74020>>>        Set pbControlBeginGroup to True
74021>>>    End_Object
74022>>>    
74022>>>    Object oCopyMenuItem is a cCJCopyMenuItem
74024>>>    End_Object
74025>>>
74025>>>    Object oPasteMenuItem is a cCJPasteMenuItem
74027>>>    End_Object
74028>>>
74028>>>    Object oDeleteItem is a cCJDeleteEditMenuItem
74030>>>    End_Object
74031>>>
74031>>>    Object oSelectAllMenuItem is a cCJSelectAllMenuItem
74033>>>        Set pbControlBeginGroup to True
74034>>>    End_Object
74035>>>
74035>>>End_Object
74036>>>
74036>Use oDEOEditContextMenu17.pkg
Including file: oDEOEditContextMenu17.pkg    (C:\Program Files\DataFlex 20.1\Pkg\oDEOEditContextMenu17.pkg)
74036>>>Use Windows.pkg
74036>>>Use cCJStandardMenuItemClasses.pkg
74036>>>Use cCJDeoMenuItemClasses.pkg
74036>>>
74036>>>
74036>>>Object oDEOEditContextMenu17 is a cCJContextMenu
74038>>>    
74038>>>    Move Self to Default_dbFloating_Menu_ID
74039>>>    
74039>>>    Object oUndoMenuItem is a cCJUndoMenuItem
74041>>>    End_Object
74042>>>    
74042>>>    Object oCutMenuItem is a cCJCutMenuItem
74044>>>        Set pbControlBeginGroup to True
74045>>>    End_Object
74046>>>    
74046>>>    Object oCopyMenuItem is a cCJCopyMenuItem
74048>>>    End_Object
74049>>>
74049>>>    Object oPasteMenuItem is a cCJPasteMenuItem
74051>>>    End_Object
74052>>>
74052>>>    Object oDeleteItem is a cCJDeleteEditMenuItem
74054>>>    End_Object
74055>>>
74055>>>    Object oSelectAllMenuItem is a cCJSelectAllMenuItem
74057>>>        Set pbControlBeginGroup to True
74058>>>    End_Object
74059>>>
74059>>>    Object oPromptMenuItem is a cCJPromptMenuItem
74061>>>        Set pbControlBeginGroup to True
74062>>>    End_Object
74063>>>
74063>>>    Object oFindNextMenu is a cCJFindNextMenuItem
74065>>>        Set pbControlBeginGroup to True
74066>>>    End_Object
74067>>>
74067>>>    Object oFindPreviousMenu is a cCJFindPreviousMenuItem
74069>>>    End_Object
74070>>>
74070>>>    Object oClearMenuItem is a cCJClearMenuItem
74072>>>        Set pbControlBeginGroup to True
74073>>>    End_Object
74074>>>
74074>>>    Object oClearAllMenu is a cCJClearAllMenuItem
74076>>>    End_Object
74077>>>
74077>>>    Object oSaveMenu is a cCJSaveMenuItem
74079>>>    End_Object
74080>>>    
74080>>>    Object oDeleteMenu is a cCJDeleteMenuItem
74082>>>    End_Object
74083>>>
74083>>>    Object oRememberitem is a cCJRememberFieldMenuItem
74085>>>        Set pbControlBeginGroup to True
74086>>>    End_Object
74087>>>
74087>>>    Object oRetainItem is a cCJRememberLastFieldMenuItem
74089>>>    End_Object
74090>>>
74090>>>    Object oUnRememberitem is a cCJUnRememberFieldMenuItem
74092>>>    End_Object
74093>>>
74093>>>    Object oCJClearAllDynamicDefaults is a cCJUnRememberFieldAllMenuItem
74095>>>    End_Object
74096>>>
74096>>>End_Object
74097>
74097>Object oMain is a Panel
74099>    Set Label to "Order"
74100>    Set Location to 4 3
74101>    Set Size to 300 450
74102>
74102>    Object oCommandBarSystem is a cCJCommandBarSystem
74104>        Set pbTimerUpdate to True
74105>        Set peVisualTheme to xtpThemeOffice2013Outlook
74106>        Set pbAutoResizeIcons to True
74107>
74107>        Procedure OnCreateCommandBars
74110>            Handle hoOptions
74110>            Get OptionsObject to hoOptions
74111>            Forward Send OnCreateCommandBars
74113>        End_Procedure
74114>
74114>        Object oMenuBar is a cCJMenuBar
74116>
74116>            Object oFileMenu is a cCJMenuItem
74118>                Set peControlType to xtpControlPopup          
74119>                Set psCaption   to "&Datei"
74120>                Set psDescription to "Suchen, Speichern, Löschen, Leeren oder Beenden des Programmes."
74121>                Set psCategory to "Menus"
74122>
74122>                Object oClearMenuItem is a cCJClearMenuItem
74124>                    Set pbAddToDesignerMenu to True
74125>                End_Object
74126>
74126>                Object oClearAllMenu is a cCJClearAllMenuItem
74128>                    Set pbAddToDesignerMenu to True
74129>                End_Object
74130>
74130>                Object oPromptMenuItem is a cCJPromptMenuItem
74132>                    Set pbAddToDesignerMenu to True
74133>                    Set pbControlBeginGroup to True
74134>                End_Object
74135>
74135>                Object oFindMenuItem is a cCJFindMenuItem
74137>                    Set pbAddToDesignerMenu to True
74138>                    Set pbControlBeginGroup to True
74139>                End_Object
74140>
74140>                Object oFindNextMenu is a cCJFindNextMenuItem
74142>                    Set pbAddToDesignerMenu to True
74143>                End_Object
74144>
74144>                Object oFindPreviousMenu is a cCJFindPreviousMenuItem
74146>                    Set pbAddToDesignerMenu to True
74147>                End_Object
74148>
74148>                Object oFindFirstMenu is a cCJFindFirstMenuItem
74150>                    Set pbAddToDesignerMenu to True
74151>                End_Object
74152>
74152>                Object oFindLastMenu is a cCJFindLastMenuItem
74154>                    Set pbAddToDesignerMenu to True
74155>                End_Object
74156>
74156>                Object oSaveMenuItem is a cCJSaveMenuItem
74158>                    Set pbAddToDesignerMenu to True
74159>                    Set pbControlBeginGroup to True
74160>                End_Object
74161>
74161>                Object oDeleteMenuItem is a cCJDeleteMenuItem
74163>                    Set pbAddToDesignerMenu to True
74164>                End_Object
74165>
74165>                Object oExitMenu is a cCJExitMenuItem
74167>                    Set pbControlBeginGroup to True
74168>                End_Object
74169>
74169>            End_Object
74170>
74170>            Object oViewMenu is a cCJMenuItem
74172>                Set peControlType to xtpControlPopup
74173>                Set psCaption to "&Ansichten"
74174>                Set psToolTip to "Ansichten"
74175>                Set psDescription to "Verfügbare Ansichten"
74176>
74176>                Object oCustomerViewMenuItem is a cCJMenuItem
74178>                    Set psCaption to "CustomerView"
74179>                    Set psTooltip to "CustomerView"
74180>                
74180>                    Procedure OnExecute Variant vCommandBarControl
74183>                        Handle hoClient
74183>                        Get Client_Id to hoClient
74184>                        Send Activate_oCustomerView of hoClient
74185>                    End_Procedure
74186>                End_Object
74187>
74187>                Object oSalesPersonEntryViewMenuItem is a cCJMenuItem
74189>                    Set psCaption to "Sales Person Entry View"
74190>                    Set psTooltip to "Sales Person Entry View"
74191>                
74191>                    Procedure OnExecute Variant vCommandBarControl
74194>                        Handle hoClient
74194>                        Get Client_Id to hoClient
74195>                        Send Activate_oSalesPersonView of hoClient
74196>                    End_Procedure
74197>                End_Object
74198>
74198>                Object oVendorEntryViewMenuItem is a cCJMenuItem
74200>                    Set psCaption to "Vendor Entry View"
74201>                    Set psTooltip to "Vendor Entry View"
74202>                
74202>                    Procedure OnExecute Variant vCommandBarControl
74205>                        Handle hoClient
74205>                        Get Client_Id to hoClient
74206>                        Send Activate_oVendorView of hoClient
74207>                    End_Procedure
74208>                End_Object
74209>
74209>                Object oInventoryItemViewMenuItem is a cCJMenuItem
74211>                    Set psCaption to "Inventory Item View"
74212>                    Set psTooltip to "Inventory Item View"
74213>                
74213>                    Procedure OnExecute Variant vCommandBarControl
74216>                        Handle hoClient
74216>                        Get Client_Id to hoClient
74217>                        Send Activate_oInventoryView of hoClient
74218>                    End_Procedure
74219>                End_Object
74220>
74220>                Object oOrderEntryViewMenuItem is a cCJMenuItem
74222>                    Set psCaption to "Order Entry View"
74223>                    Set psTooltip to "Order Entry View"
74224>                
74224>                    Procedure OnExecute Variant vCommandBarControl
74227>                        Handle hoClient
74227>                        Get Client_Id to hoClient
74228>                        Send Activate_oOrderEntryView of hoClient
74229>                    End_Procedure
74230>                End_Object
74231>
74231>                Object oPrimeMenuItem is a cCJMenuItem
74233>                    Set psCaption to "Prime"
74234>                    Set psTooltip to "Prime"
74235>                
74235>                    Procedure OnExecute Variant vCommandBarControl
74238>                        Handle hoClient
74238>                        Get Client_Id to hoClient
74239>                        Send Activate_oPrime of hoClient
74240>                    End_Procedure
74241>                End_Object
74242>            End_Object
74243>            
74243>            Object oReportMenu is a cCJMenuItem
74245>                Set peControlType to xtpControlPopup          
74246>                Set psCaption to "&Reporte"
74247>                Set psToolTip to "Reporte"
74248>                Set psDescription to "Verfügbare Reporte"
74249>            End_Object
74250>
74250>            Object oNavigateMenu is a cCJMenuItem
74252>                Set peControlType to xtpControlPopup      
74253>                Set psCaption to "&Navigation"    
74254>                Set psTooltip to "Navigation"    
74255>                Set psDescription to "Ermöglicht das Navigieren zu den verschiedenen Bereichen der Anwendung"
74256>
74256>                Object oNextAreaMenu is a cCJNextAreaMenu
74258>                End_Object
74259>
74259>                Object oPriorAreaMenu is a cCJPriorAreaMenu
74261>                End_Object
74262>
74262>                Object oNextViewMenu is a cCJNextViewMenu
74264>                End_Object
74265>
74265>                Object oPriorViewMenu is a cCJPriorViewMenu
74267>                End_Object
74268>
74268>                Object oPromptMenu is a cCJPromptMenuItem
74270>                    Set pbControlBeginGroup to True
74271>                End_Object
74272>
74272>                Object oZoomMenu is a cCJZoomMenuItem
74274>                End_Object
74275>
74275>            End_Object
74276>
74276>            Object oWindowMenu is a cCJMDIWindowsMenuItem
74278>                Set peControlType to xtpControlPopup
74279>                Set psCaption to "&Fenster"
74280>                Set psToolTip to "Fenster"
74281>                Set psDescription to "Setzen der Optionen für die Toolbar, Statusbar und Anzeige der Symbole"
74282>
74282>                // These are the static windows items. More will be created in onInitPopup 
74282>                Object oDisplayOptionsMenu is a cCJMenuItem
74284>                    Set peControlType to xtpControlPopup          
74285>                    Set psCaption to "&Anzeige der Optionen"
74286>                    Set psToolTip to "Anzeige Optionen"
74287>                    Set psDescription to "Setzen der Anzeige Optionen"
74288>
74288>                    Object oStatusbarMenu is a cCJStatusbarMenuItem
74290>                    End_Object
74291>
74291>                    Object oAutoArrangeIconsMenu is a cCJAutoArrangeIconsMenuItem
74293>                    End_Object
74294>
74294>                    Object oRestoreMenusMenu is a cCJRestoreMenusMenuItem
74296>                        Set pbControlBeginGroup to True
74297>                    End_Object
74298>
74298>                End_Object
74299>
74299>                Object oCascadeMenu is a cCJCascadeMenuItem
74301>                    Set pbControlBeginGroup to True
74302>                End_Object
74303>
74303>                Object oHorizTile is a cCJTileHorizontally
74305>                End_Object
74306>
74306>                Object oVertTile is a cCJTileVertically
74308>                End_Object
74309>
74309>                Object oMinimizeMenuItem is a cCJMinimizeWindowsMenuItem
74311>                    Set pbControlBeginGroup to True
74312>                End_Object
74313>
74313>                Object oRestoreMenuItem is a cCJRestoreWindowsMenuItem
74315>                End_Object
74316>
74316>                Object oArrangeIconsMenuItem is a cCJAutoArrangeIconsMenuItem
74318>                    Set pbControlBeginGroup to True
74319>                End_Object
74320>
74320>            End_Object
74321>
74321>            Object oHelpMenu is a cCJMenuItem
74323>                Set peControlType to xtpControlPopup    
74324>                Set psCaption to "&Hilfe"
74325>                Set psDescription to "Informationen zum Umgang und die Benutzung dieses DataFlex Programmes."
74326>                Set psToolTip to "Hilfe"
74327>
74327>                Object oHelpMenuItem is a cCJHelpMenuItem 
74329>                End_Object
74330>
74330>                Object oAboutMenuItem is a cCJAboutMenuItem
74332>                End_Object
74333>
74333>            End_Object
74334>
74334>        End_Object
74335>
74335>        Object oFindToolBar is a cCJToolbar
74337>            Set psTitle to "Suchen Toolbar"
74338>
74338>            Object oFindFirstTool is a cCJFindFirstMenuItem
74340>            End_Object
74341>
74341>            Object oFindPreviousTool is a cCJFindPreviousMenuItem
74343>            End_Object
74344>
74344>            Object oFindMenuTool is a cCJFindMenuItem
74346>            End_Object
74347>
74347>            Object oFindNextTool is a cCJFindNextMenuItem
74349>            End_Object
74350>
74350>            Object oFindLastTool is a cCJFindLastMenuItem
74352>            End_Object
74353>
74353>            Object oPromptToolItem is a cCJPromptMenuItem
74355>                Set pbControlBeginGroup to True
74356>            End_Object
74357>
74357>        End_Object
74358>
74358>        Object oFileToolBar is a cCJToolbar
74360>            Set psTitle to "Datei Toolbar"
74361>
74361>            Object oClearToolItem is a cCJClearMenuItem
74363>                Set peControlStyle to xtpButtonIconAndCaption
74364>            End_Object
74365>
74365>            Object oClearAllToolItem2 is a cCJClearAllMenuItem
74367>                Set peControlStyle to xtpButtonIconAndCaption
74368>            End_Object
74369>
74369>            Object oSaveToolItem is a cCJSaveMenuItem
74371>                Set peControlStyle to xtpButtonIconAndCaption
74372>                Set pbControlBeginGroup to True
74373>            End_Object
74374>
74374>            Object oDeleteToolItem is a cCJDeleteMenuItem
74376>                Set peControlStyle to xtpButtonIconAndCaption
74377>            End_Object
74378>
74378>        End_Object
74379>
74379>        Object oEditToolBar is a cCJToolbar
74381>            Set psTitle to "Bearbeitungstoolbar"
74382>
74382>            Object oCutToolbarItem is a cCJCutMenuItem
74384>            End_Object
74385>
74385>            Object oCopyToolbarItem is a cCJCopyMenuItem
74387>            End_Object
74388>
74388>            Object oPasteToolbarItem is a cCJPasteMenuItem
74390>            End_Object
74391>
74391>            Object oDeleteEditToolbarItem is a cCJDeleteEditMenuItem
74393>                Set pbControlBeginGroup to True
74394>            End_Object
74395>
74395>        End_Object
74396>
74396>        Object oRememberToolbar is a cCJToolbar
74398>            Set psTitle to C_$Remember
74399>
74399>            Object oRememberItems is a cCJMenuItem
74401>
74401>                Set peControlType to xtpControlPopup
74402>                Set peControlStyle to xtpButtonCaption
74403>                Set psCaption to C_$Remember
74404>                
74404>                Object oMenuItem is a cCJRememberFieldMenuItem
74406>                    Set peControlStyle to xtpButtonIconAndCaption
74407>                End_Object
74408>                
74408>                Object oMenuItem is a cCJRememberLastFieldMenuItem
74410>                    Set peControlStyle to xtpButtonIconAndCaption
74411>                End_Object
74412>                
74412>                Object oMenuItem is a cCJUnRememberFieldMenuItem
74414>                    Set peControlStyle to xtpButtonIconAndCaption
74415>                End_Object
74416>                
74416>                Object oMenuItem is a cCJUnRememberFieldAllMenuItem
74418>                    Set peControlStyle to xtpButtonIconAndCaption
74419>                End_Object
74420>
74420>            End_Object
74421>            
74421>        End_Object
74422>        
74422>        Object oStatusBar is a cCJStatusBar
74424>
74424>            Object oStatusPane1 is a cCJStatusBarPane
74426>                Set piID to sbpIDIdlePane
74427>                Set pbStyleStretch to True
74428>            End_Object
74429>
74429>            Object oStatusPane2 is a cCJStatusBarPane
74431>                Set phoViewPane to Self
74432>                Set pbStyleStretch to True
74433>            End_Object
74434>
74434>        End_Object
74435>
74435>    End_Object
74436>
74436>    Object oClientArea is a ClientArea
74438>        Use StdAbout.pkg
Including file: StdAbout.pkg    (C:\Program Files\DataFlex 20.1\Pkg\StdAbout.pkg)
74438>>>// This provides a quick and simple way to create an about package for a program.
74438>>>// You need to create a message inside you client area called Activate_About.
74438>>>// Within this message you should send the message DoAbout passing needed
74438>>>// string information.
74438>>>//
74438>>>//       Procedure Activate_About
74438>>>//           Send DoAbout sTitle sVersion sCopyright sAuthor sBitmap
74438>>>//       End_Procedure
74438>>>//    where: sTitle =     Name of application. If none provided, uses caption
74438>>>//                        bar title
74438>>>//           sVersion   = Version Line. If none provided, will be blank
74438>>>//           sCopyRight = Copyright Line. If none provided, will be blank
74438>>>//           sAuthor    = Author name, blank if none provided
74438>>>//           sBitMap    = Bitmap logo. If none provided, standard VDF bitmap
74438>>>//                        is used.
74438>>>// It is expected that you will place this in your own object package. For
74438>>>// example an order about package may look like this:
74438>>>//
74438>>>//   // OrderAbout.pkg
74438>>>//   Use StdAbout.pkg
74438>>>//   Procedure Activate_About
74438>>>//      String sTitle sCopyright sVersion sAuthor
74438>>>//      Move "My Order Entry System" to sTitle
74438>>>//      Move "Version 2.1" to sVersion
74438>>>//      Move "Copyright xxxx, Super Software Inc." to sCopyright
74438>>>//      Move "John Smith"  to sAuthor
74438>>>//      Send DoAbout sTitle sVersion sCopyright sAuthor ""
74438>>>//   end_procedure
74438>>>//   // end of file.
74438>>>
74438>>>Use DfAbout.pkg
Including file: Dfabout.pkg    (C:\Program Files\DataFlex 20.1\Pkg\Dfabout.pkg)
74438>>>>>Use LanguageText.pkg
74438>>>>>Use Windows.pkg
74438>>>>>Use DFbitmap.pkg
74438>>>>>Use GlobalFunctionsProcedures.pkg
74438>>>>>Use cTextEdit.pkg
74438>>>>>Use tWinStructs.pkg
74438>>>>>
74438>>>>>Use cli.pkg
74438>>>>>Use DFBTRDRV.PKG
Including file: DFBTRDRV.PKG    (C:\Program Files\DataFlex 20.1\Pkg\DFBTRDRV.PKG)
74438>>>>>>>// $File title : Package for the DataFlex Connectivity Kit for Pervasive.SQL
74438>>>>>>>// Notice      : This package contains constants and commands, used to call
74438>>>>>>>//               specific functions in the DFBTRDRV.
74438>>>>>>>Use Ui
74438>>>>>>>//
74438>>>>>>>// Driver Indentification
74438>>>>>>>//
74438>>>>>>>
74438>>>>>>>// Driver attributes
74438>>>>>>>//
74438>>>>>>>// Call_Driver functions ID's
74438>>>>>>>//
74438>>>>>>>//
74438>>>>>>>// DFBTRFN_CONVERT_FILE options
74438>>>>>>>//
74438>>>>>>>
74438>>>>>>>//
74438>>>>>>>// DFBTRFN_SET_OWNER options
74438>>>>>>>//
74438>>>>>>>
74438>>>>>>>//
74438>>>>>>>// DFBTRFN_SET_TRANSACTION_TYPE options
74438>>>>>>>//
74438>>>>>>>
74438>>>>>>>
74438>>>>>>>//
74438>>>>>>>// Command to create all vars which may be needed
74438>>>>>>>// in other commands.
74438>>>>>>>//
74438>>>>>>>
74438>>>>>>>
74438>>>>>>>
74438>>>>>>>//
74438>>>>>>>// Command to set the owner of a Btrieve file.
74438>>>>>>>// File must have been opened.
74438>>>>>>>// Filenumber needs to be passed.
74438>>>>>>>// To clear set the owner to "".
74438>>>>>>>// Examples:
74438>>>>>>>//      DFBTR_SET_OWNER MyFileNumber to "Secret"
74438>>>>>>>//      DFBTR_SET_OWNER MyFileNumber to "Secret" READONLY CALLBACK MyCallBack
74438>>>>>>>//      DFBTR_SET_OWNER MyFileNumber to "Secret" ENCRYPT
74438>>>>>>>//      DFBTR_SET_OWNER MyFileNumber to "Secret" READONLY ENCRYPT CALLBACK MyCallBack
74438>>>>>>>// To clear:
74438>>>>>>>//      DFBTR_SET_OWNER MyFileNumber to ""
74438>>>>>>>//
74438>>>>>>>
74438>>>>>>>
74438>>>>>>>
74438>>>>>>>//
74438>>>>>>>// Command to parse DFBTR_SET_OWNVER
74438>>>>>>>// options.
74438>>>>>>>//
74438>>>>>>>
74438>>>>>>>
74438>>>>>>>
74438>>>>>>>//
74438>>>>>>>// Command to parse for Callback
74438>>>>>>>//
74438>>>>>>>
74438>>>>>>>
74438>>>>>>>
74438>>>>>>>//
74438>>>>>>>// Command to clear the owner of a Btrieve file.
74438>>>>>>>// File must have been opened.
74438>>>>>>>// Filenumber needs to be passed.
74438>>>>>>>// Examples:
74438>>>>>>>//      DFBTR_CLEAR_OWNER MyFileNumber
74438>>>>>>>//
74438>>>>>>>
74438>>>>>>>
74438>>>>>>>
74438>>>>>>>//
74438>>>>>>>// Command to add a owner name to the internal list of ownernames
74438>>>>>>>// which will be tries when opening files.
74438>>>>>>>//
74438>>>>>>>
74438>>>>>>>
74438>>>>>>>
74438>>>>>>>//
74438>>>>>>>// Command to remove all owners from the internal list of ownernames
74438>>>>>>>//
74438>>>>>>>
74438>>>>>>>
74438>>>>>>>//
74438>>>>>>>// Command to set the owner name to be used when opening the DDF files.
74438>>>>>>>// The DDF owner is required when Pervasive.SQL security is turned on.
74438>>>>>>>// The DDF owner is equal to the password of the Master user in Pervasive.SQL
74438>>>>>>>// This command overwrites the DDF_OWNER setting in DFBTRDRV.INT
74438>>>>>>>//
74438>>>>>>>
74438>>>>>>>//
74438>>>>>>>// Command to change the transaction type.
74438>>>>>>>// Valid types are:
74438>>>>>>>//     DFBTRTT_NONE
74438>>>>>>>//     DFBTRTT_EXCLUSIVE
74438>>>>>>>//     DFBTRTT_CONCURRENT
74438>>>>>>>//
74438>>>>>>>//
74438>>>>>>>
74438>>>>>>>
74438>>>>>>>
74438>>>>>>>//
74438>>>>>>>// Command to get the current transaction type.
74438>>>>>>>//
74438>>>>>>>
74438>>>>>>>//
74438>>>>>>>// Command to set explicit_locking
74438>>>>>>>//
74438>>>>>>>
74438>>>>>>>//
74438>>>>>>>// Command to get explicit locking
74438>>>>>>>//
74438>>>>>>>
74438>>>>>>>//
74438>>>>>>>// Command to set detection for incompatible positive signs in numeric fields
74438>>>>>>>//
74438>>>>>>>
74438>>>>>>>//
74438>>>>>>>// Command to get detection for incompatible positive signs in numeric fields
74438>>>>>>>//
74438>>>>>>>
74438>>>>>>>// Purpose: An instance of this class can be used as a broker object to
74438>>>>>>>//          call several Dfbtrdrv releated methods.
74438>>>>>>>
74438>>>>>>>Class cDFBtrDrvHandler is an Array
74439>>>>>>>    
74439>>>>>>>    Procedure Construct_Object Integer iImage
74441>>>>>>>        Forward Send Construct_object iImage
74443>>>>>>>        
74443>>>>>>>        Property String  psDriverID "DFBTRDRV"
74444>>>>>>>    End_Procedure
74445>>>>>>>    
74445>>>>>>>    //  The revsion of a Dfbtrdrv Connectivity Kit
74445>>>>>>>    //
74445>>>>>>>    
74445>>>>>>>    Function CKRevision Returns String
74447>>>>>>>        String  sDriverID
74447>>>>>>>        String  sRevision
74447>>>>>>>        String  sVoid
74447>>>>>>>        Integer iRetval
74447>>>>>>>        
74447>>>>>>>        // Ignore error 20491 DFBTRERR_INVALID_DRIVER_FUNCTION_CALL.
74447>>>>>>>        // This error would otherwise be raised when we have an older
74447>>>>>>>        // DFBTRDRV version that has no DFBTRFN_CKREVISION function
74447>>>>>>>        Send Ignore_error to Error_object_Id 20491
74448>>>>>>>        Get psDriverID to sDriverID
74449>>>>>>>        Move (Repeat(" ", 255)) to sRevision
74450>>>>>>>        Call_Driver 0 sDRiverID Function DFBTRFN_CKREVISION Callback 0 Passing sRevision sVoid 0 Result iRetval
74455>>>>>>>        Send Trap_Error to Error_object_Id 20491
74456>>>>>>>        If (Trim(sRevision) = "") Begin
74458>>>>>>>            // Unable to get the revision. return all zeroes.
74458>>>>>>>            Move "0.0.0.0" to sRevision
74459>>>>>>>        End
74459>>>>>>>>
74459>>>>>>>        Function_Return sRevision
74460>>>>>>>    End_Function
74461>>>>>>>    
74461>>>>>>>    Function CkUsesUri Returns Integer
74463>>>>>>>        String  sDriverID
74463>>>>>>>        String  sVoid1
74463>>>>>>>        String  sVoid2
74463>>>>>>>        Integer iRetval
74463>>>>>>>        
74463>>>>>>>        Get psDriverID to sDriverID
74464>>>>>>>        
74464>>>>>>>        Move 0 to iRetval
74465>>>>>>>        // Ignore error 20491 DFBTRERR_INVALID_DRIVER_FUNCTION_CALL.
74465>>>>>>>        // This error would otherwise be raised when we have an older
74465>>>>>>>        // DFBTRDRV version that has no DFBTRFN_CKUSESURI function
74465>>>>>>>        Send Ignore_error to Error_object_Id 20491
74466>>>>>>>        Call_Driver 0 sDRiverID Function DFBTRFN_CKUSESURI Callback 0 Passing sVoid1 sVoid2 0 Result iRetval
74471>>>>>>>        Send Trap_Error to Error_object_Id 20491
74472>>>>>>>        
74472>>>>>>>        Function_Return iRetval
74473>>>>>>>    End_Function
74474>>>>>>>    
74474>>>>>>>    
74474>>>>>>>    
74474>>>>>>>    // Extract the Nth part of a a.b.c.d revsion string.
74474>>>>>>>    //
74474>>>>>>>    // Returns : The part version number or -1 if there is no such part number.
74474>>>>>>>    //
74474>>>>>>>    
74474>>>>>>>    Function ExtractPartFromRevision Integer iPartNum String sRevision Returns Integer
74476>>>>>>>        Integer iPartRev
74476>>>>>>>        Integer iCurrentPart
74476>>>>>>>        Integer iSeparatorPos
74476>>>>>>>        
74476>>>>>>>        If (iPartNum > 4) ;            Function_Return -1
74479>>>>>>>        
74479>>>>>>>        Move 0 to iCurrentPart
74480>>>>>>>        Repeat
74480>>>>>>>>
74480>>>>>>>            Move (Pos(".", sRevision)) to iSeparatorPos
74481>>>>>>>            If (iSeparatorPos > 0) Begin
74483>>>>>>>                Move (Left(sRevision, iSeparatorPos - 1)) to iPartRev
74484>>>>>>>                Move (Right(sRevision, Length(sRevision) - iSeparatorPos)) to sRevision
74485>>>>>>>                Increment iCurrentPart
74486>>>>>>>            End
74486>>>>>>>>
74486>>>>>>>            Else If (sRevision <> "") Begin
74489>>>>>>>                Move sRevision to iPartRev
74490>>>>>>>                Move "" to sRevision
74491>>>>>>>                Increment iCurrentPart
74492>>>>>>>            End
74492>>>>>>>>
74492>>>>>>>            Else ;                Move -1 to iPartRev
74494>>>>>>>        Until (iCurrentPart >= iPartNum or iPartRev = -1)
74496>>>>>>>        
74496>>>>>>>        Function_Return iPartRev
74497>>>>>>>    End_Function
74498>>>>>>>    
74498>>>>>>>    
74498>>>>>>>    
74498>>>>>>>    //
74498>>>>>>>    //  Returns the major revision of the CK
74498>>>>>>>    //
74498>>>>>>>    
74498>>>>>>>    Function CKMajorRevision Returns Integer
74500>>>>>>>        Function_Return (ExtractPartFromRevision (Current_Object, 1, CKRevision(Current_Object)))
74501>>>>>>>    End_Function
74502>>>>>>>    
74502>>>>>>>    
74502>>>>>>>    
74502>>>>>>>    //  Returns the minor revision of the CK
74502>>>>>>>    //
74502>>>>>>>    
74502>>>>>>>    Function CKMinorRevision Returns Integer
74504>>>>>>>        Function_Return (ExtractPartFromRevision (Current_Object, 2, CKRevision(Current_Object)))
74505>>>>>>>    End_Function
74506>>>>>>>    
74506>>>>>>>    
74506>>>>>>>    //  Returns the release revision of the CK
74506>>>>>>>    //
74506>>>>>>>    
74506>>>>>>>    Function CKReleaseRevision Returns Integer
74508>>>>>>>        Function_Return (ExtractPartFromRevision (Current_Object, 3, CKRevision(Current_Object)))
74509>>>>>>>    End_Function
74510>>>>>>>    
74510>>>>>>>    
74510>>>>>>>    //  Returns the major revision of the CK
74510>>>>>>>    //
74510>>>>>>>    
74510>>>>>>>    Function CKBuildRevision Returns Integer
74512>>>>>>>        Function_Return (ExtractPartFromRevision (Current_Object, 4, CKRevision(Current_Object)))
74513>>>>>>>    End_Function
74514>>>>>>>    
74514>>>>>>>    
74514>>>>>>>    //  Determines if the CK conforms to a passed minimal revsion.
74514>>>>>>>    //
74514>>>>>>>    
74514>>>>>>>    Function IsMinimalRevision Integer iMajor Integer iMinor Integer iRelease Integer iBuild Returns Integer
74516>>>>>>>        If (iMajor < CKMajorRevision(Current_object)) ;            Function_Return (True)
74519>>>>>>>        Else If (iMajor = CKMajorRevision(Current_object)) Begin
74522>>>>>>>            If (iMinor < CKMinorRevision(Current_object)) ;                Function_Return (True)
74525>>>>>>>            Else If (iMinor = CKMinorRevision(Current_object)) Begin
74528>>>>>>>                If (iRelease < CKReleaseRevision(Current_object)) ;                    Function_Return (True)
74531>>>>>>>                Else If (iRelease = CKReleaseRevision(Current_object) and iBuild <= CKBuildRevision(Current_object)) ;                    Function_Return (True)
74535>>>>>>>            End
74535>>>>>>>>
74535>>>>>>>        End
74535>>>>>>>>
74535>>>>>>>        
74535>>>>>>>        Function_Return (False)
74536>>>>>>>    End_Function
74537>>>>>>>    
74537>>>>>>>    //   Functions to query the Pervasive.SQL version:
74537>>>>>>>    //       PSQLRequesterVersionInfo    Integer iFileNum Returns String
74537>>>>>>>    //       PSQLLocalEngineVersionInfo  Integer iFileNum Returns String
74537>>>>>>>    //       PSQLServerEngineVersionInfo Integer iFileNum Returns String
74537>>>>>>>    //
74537>>>>>>>    //   All 3 functions return the version of a Pervasive.SQL component
74537>>>>>>>    //   in the following format:
74537>>>>>>>    //       <version>.<revision>.<type>
74537>>>>>>>    //   possible values for <type>:
74537>>>>>>>    //       9 for 32-bit Windows workstation/workgroup engine or Linux
74537>>>>>>>    //         server using Workgroup authentication mode
74537>>>>>>>    //       C for client cache engine
74537>>>>>>>    //       D for DOS workstation
74537>>>>>>>    //       N for client Requester
74537>>>>>>>    //       S for NetWare server
74537>>>>>>>    //       T for 32-bit Windows server engine
74537>>>>>>>    //       U for Linux server using PAM or BTPASSWD authentication
74537>>>>>>>    //
74537>>>>>>>    //   example:
74537>>>>>>>    //       8.50.T
74537>>>>>>>    //   will be returned for a Pervasive.SQL 8.5 Server Engine running on
74537>>>>>>>    //   32-bits Windows server.
74537>>>>>>>    //
74537>>>>>>>    //   The FileNumber parameter must specify an opened table or 0.
74537>>>>>>>    //   For PSQLServerEngineVersionInfo the FileNumber can not be 0.
74537>>>>>>>    //
74537>>>>>>>    //   If the version information is not available or can not be obtained
74537>>>>>>>    //   the functions will return "0.0.0"
74537>>>>>>>    
74537>>>>>>>    //  Returns the version information of the
74537>>>>>>>    //           Pervasive.SQL Client requester.
74537>>>>>>>    
74537>>>>>>>    Function PSQLRequesterVersionInfo Integer iFileNum Returns String
74539>>>>>>>        
74539>>>>>>>        String  sDriverID
74539>>>>>>>        String  sVersion
74539>>>>>>>        String  sVoid
74539>>>>>>>        Integer iRetval
74539>>>>>>>        
74539>>>>>>>        // Ignore error 20491 DFBTRERR_INVALID_DRIVER_FUNCTION_CALL.
74539>>>>>>>        // This error would otherwise be raised when we have an older
74539>>>>>>>        // DFBTRDRV version that has no DFBTRFN_CKREVISION function
74539>>>>>>>        Send Ignore_error to Error_object_Id 20491
74540>>>>>>>        Get psDriverID to sDriverID
74541>>>>>>>        Move (Repeat(" ", 255)) to sVersion
74542>>>>>>>        Call_Driver iFileNum sDRiverID Function DFBTRFN_PSQLREQUESTERVERSIONINFO Callback 0 Passing sVersion sVoid 0 Result iRetval
74547>>>>>>>        Send Trap_Error to Error_object_Id 20491
74548>>>>>>>        If (Trim(sVersion) = "") Begin
74550>>>>>>>            // Unable to get the revision. return all zeroes.
74550>>>>>>>            Move "0.0.0" to sVersion
74551>>>>>>>        End
74551>>>>>>>>
74551>>>>>>>        Function_Return sVersion
74552>>>>>>>    End_Function
74553>>>>>>>    
74553>>>>>>>    //           Pervasive.SQL Engine
74553>>>>>>>    
74553>>>>>>>    Function PSQLLocalEngineVersionInfo Integer iFileNum Returns String
74555>>>>>>>        
74555>>>>>>>        String  sDriverID
74555>>>>>>>        String  sVersion
74555>>>>>>>        String  sVoid
74555>>>>>>>        Integer iRetval
74555>>>>>>>        
74555>>>>>>>        // Ignore error 20491 DFBTRERR_INVALID_DRIVER_FUNCTION_CALL.
74555>>>>>>>        // This error would otherwise be raised when we have an older
74555>>>>>>>        // DFBTRDRV version that has no DFBTRFN_CKREVISION function
74555>>>>>>>        Send Ignore_error to Error_object_Id 20491
74556>>>>>>>        Get psDriverID to sDriverID
74557>>>>>>>        Move (Repeat(" ", 255)) to sVersion
74558>>>>>>>        Call_Driver iFileNum sDRiverID Function DFBTRFN_PSQLLOCALENGINEVERSIONINFO Callback 0 Passing sVersion sVoid 0 Result iRetval
74563>>>>>>>        Send Trap_Error to Error_object_Id 20491
74564>>>>>>>        If (Trim(sVersion) = "") Begin
74566>>>>>>>            // Unable to get the revision. return all zeroes.
74566>>>>>>>            Move "0.0.0" to sVersion
74567>>>>>>>        End
74567>>>>>>>>
74567>>>>>>>        Function_Return sVersion
74568>>>>>>>    End_Function
74569>>>>>>>    
74569>>>>>>>    //  Returns the version information of the
74569>>>>>>>    //           Pervasive.SQL Server Engine
74569>>>>>>>    
74569>>>>>>>    Function PSQLServerEngineVersionInfo Integer iFileNum Returns String
74571>>>>>>>        
74571>>>>>>>        String  sDriverID
74571>>>>>>>        String  sVersion
74571>>>>>>>        String  sVoid
74571>>>>>>>        Integer iRetval
74571>>>>>>>        
74571>>>>>>>        // Ignore error 20491 DFBTRERR_INVALID_DRIVER_FUNCTION_CALL.
74571>>>>>>>        // This error would otherwise be raised when we have an older
74571>>>>>>>        // DFBTRDRV version that has no DFBTRFN_CKREVISION function
74571>>>>>>>        Send Ignore_error to Error_object_Id 20491
74572>>>>>>>        Get psDriverID to sDriverID
74573>>>>>>>        Move (Repeat(" ", 255)) to sVersion
74574>>>>>>>        Call_Driver iFileNum sDRiverID Function DFBTRFN_PSQLSERVERENGINEVERSIONINFO Callback 0 Passing sVersion sVoid 0 Result iRetval
74579>>>>>>>        Send Trap_Error to Error_object_Id 20491
74580>>>>>>>        If (Trim(sVersion) = "") Begin
74582>>>>>>>            // Unable to get the revision. return all zeroes.
74582>>>>>>>            Move "0.0.0" to sVersion
74583>>>>>>>        End
74583>>>>>>>>
74583>>>>>>>        Function_Return sVersion
74584>>>>>>>    End_Function
74585>>>>>>>    
74585>>>>>>>End_Class
74586>>>>>>>
74586>>>>>>>
74586>>>>>Use MSSqldrv.pkg
Including file: MSSqldrv.pkg    (C:\Program Files\DataFlex 20.1\Pkg\MSSqldrv.pkg)
74586>>>>>>>//     Package that declares MS SQL driver constants and functions.
74586>>>>>>>//     This package can be used by developers who want to add Data Access
74586>>>>>>>//     MS SQL Client specific code to a DataFlex application.
74586>>>>>>>
74586>>>>>>>Use Cli.pkg
74586>>>>>>>Use SQL.pkg
74586>>>>>>>
74586>>>>>>>//   Driver Indentification
74586>>>>>>>
74586>>>>>>>//   Error number constants
74586>>>>>>>
74586>>>>>>>
74586>>>>>>>//   Possible DF_DRIVER_SQLSERVER_CLIENT_VERSION values
74586>>>>>>>
74586>>>>>>>
74586>>>>>>>
74586>>>>>>>
74586>>>>>>>
74586>>>>>>>
74586>>>>>>>// SQL Server spcific types.
74586>>>>>>>Define SQL_SS_TIMESTAMPOFFSET   for   (-155) //SQL server datetimeoffset type */
74586>>>>>>>Define SQL_SS_TIME2             for   (-154) //SQL server time type */
74586>>>>>>>Define SQL_SS_XML               for   (-152) //SQL server xml type */
74586>>>>>>>Define SQL_SS_VARIANT           for   (-150) //SQL server variant type */
74586>>>>>>>
74586>>>>>>>// SQL Server spcific types.
74586>>>>>>>Define SQL_TYPE_TIMESTAMP2      for   (-200) //SQL server datetime2 type */
74586>>>>>>>Define SQL_VARCHARMAX           for   (-201) //SQL server varchar(max) type */
74586>>>>>>>Define SQL_WVARCHARMAX          for   (-202) //SQL server wvarchar(max) type */
74586>>>>>>>Define SQL_VARBINARYMAX         for   (-203) //SQL server varbinary(max) type */
74586>>>>>>>Define SQL_TYPE_MONEY           for   (-204) //SQL server money type */
74586>>>>>>>Define SQL_TYPE_SMALLMONEY      for   (-205) //SQL server smallmoney type */
74586>>>>>>>Define SQL_TYPE_SMALLDATETIME   for   (-206) //SQL server smalldatetype type */
74586>>>>>>>
74586>>>>>>>
74586>>>>>>>//   MSSQL_SetConstraint <FileNum> <ConstraintText>
74586>>>>>>>//
74586>>>>>>>//     Setup a constraint for a file.
74586>>>>>>>
74586>>>>>>>
74586>>>>>>>Class cMSSQLHandler is a cCLIHandler
74587>>>>>>>    
74587>>>>>>>    Procedure Construct_Object
74589>>>>>>>        Forward Send Construct_Object
74591>>>>>>>        
74591>>>>>>>        Set psDriverID to MSSQLDRV_ID
74592>>>>>>>    End_Procedure
74593>>>>>>>    
74593>>>>>>>    
74593>>>>>>>    
74593>>>>>>>    //   Extract the list from the out connect string.
74593>>>>>>>    Function ExtractList String sOutConnStr Integer hoStore Returns Integer
74595>>>>>>>        String  sItem
74595>>>>>>>        Integer iStart
74595>>>>>>>        Integer iEnd
74595>>>>>>>        
74595>>>>>>>        If (hoStore = 0) ;            Move Current_object to hoStore
74598>>>>>>>        
74598>>>>>>>        Send Delete_Data to hoStore
74599>>>>>>>        Move (Pos("{", sOutConnStr)) to iStart
74600>>>>>>>        While (iStart > 0)
74604>>>>>>>            Move (Right(sOutConnStr, Length(sOutConnStr) - iStart)) to sOutConnStr
74605>>>>>>>            If (Left(sOutConnStr, 1) = "}") ;                Move 0 to iStart
74608>>>>>>>            Else Begin
74609>>>>>>>                Move (Pos(",", sOutConnStr)) to iStart
74610>>>>>>>                Move (Pos("}", sOutConnStr)) to iEnd
74611>>>>>>>                If ((iStart = 0) or (iEnd < iStart)) ;                    Move iEnd to iStart
74614>>>>>>>                
74614>>>>>>>                If (iStart > 0) ;                    Set Value of hoStore  (Item_Count(Current_Object)) to (Left(sOutConnStr, iStart - 1))
74617>>>>>>>                
74617>>>>>>>                If (iStart = iEnd) ;                    Move 0 to iStart
74620>>>>>>>            End
74620>>>>>>>>
74620>>>>>>>        Loop
74621>>>>>>>>
74621>>>>>>>        
74621>>>>>>>        Function_Return (Item_Count(hoStore))
74622>>>>>>>    End_Procedure
74623>>>>>>>    
74623>>>>>>>    
74623>>>>>>>    
74623>>>>>>>    //   Call the driver's browse connect function
74623>>>>>>>    Function BrowseConnect String sInConnStr Returns String
74625>>>>>>>        String  sDriver
74625>>>>>>>        String  sOutConnStr
74625>>>>>>>        Integer iArg
74625>>>>>>>        Integer iRetval
74625>>>>>>>        
74625>>>>>>>        Get psDriverID to sDriver
74626>>>>>>>        If (sDriver <> "") Begin
74628>>>>>>>            Move (Repeat(" ", 8192)) to sOutConnStr
74629>>>>>>>            Call_Driver 0 sDRiver Function CLI_BROWSECONNECT Callback 0 Passing sInConnStr sOutConnStr iArg Result iRetval
74634>>>>>>>        End
74634>>>>>>>>
74634>>>>>>>        
74634>>>>>>>        Function_Return sOutConnStr
74635>>>>>>>    End_Function// BrowseConnect
74636>>>>>>>    
74636>>>>>>>    
74636>>>>>>>    Function BrowseConnectLocal String sInConnStr Returns String
74638>>>>>>>        String  sDriver
74638>>>>>>>        String  sOutConnStr
74638>>>>>>>        Integer iArg
74638>>>>>>>        Integer iRetval
74638>>>>>>>        
74638>>>>>>>        Move 1 to iArg // Browses only local
74639>>>>>>>        
74639>>>>>>>        Get psDriverID to sDriver
74640>>>>>>>        If (sDriver <> "") Begin
74642>>>>>>>            Move (Repeat(" ", 8192)) to sOutConnStr
74643>>>>>>>            Call_Driver 0 sDRiver Function CLI_BROWSECONNECT Callback 0 Passing sInConnStr sOutConnStr iArg Result iRetval
74648>>>>>>>        End
74648>>>>>>>>
74648>>>>>>>        
74648>>>>>>>        Function_Return sOutConnStr
74649>>>>>>>    End_Function// BrowseConnect
74650>>>>>>>    
74650>>>>>>>    
74650>>>>>>>    Function EnumerateServersNetworkOrLocal Integer iNetworkLocal  Returns Integer
74652>>>>>>>        
74652>>>>>>>        String  sServerList
74652>>>>>>>        Integer iNumServers
74652>>>>>>>        Integer iDriver
74652>>>>>>>        Integer iClientVersion
74652>>>>>>>        String  sDriver
74652>>>>>>>        
74652>>>>>>>        Get DriverIndex MSSQLDRV_ID to iDriver
74653>>>>>>>        
74653>>>>>>>        If (iDriver) Begin
74655>>>>>>>            
74655>>>>>>>            Get_Attribute DF_DRIVER_SQLSERVER_CLIENT_VERSION of iDriver to iClientVersion
74658>>>>>>>            
74658>>>>>>>            Get SqlServerClientDriverName iClientVersion to sDriver
74659>>>>>>>            
74659>>>>>>>            Move ("DRIVER={" + sDriver + "};") to sDriver
74660>>>>>>>            If (iNetworkLocal = 0) Begin
74662>>>>>>>                Get BrowseConnect sDriver to sServerList
74663>>>>>>>            End
74663>>>>>>>>
74663>>>>>>>            Else Begin
74664>>>>>>>                Get BrowseConnectLocal sDriver to sServerList
74665>>>>>>>            End
74665>>>>>>>>
74665>>>>>>>            Get ExtractList sServerList Current_object to iNumServers
74666>>>>>>>        End
74666>>>>>>>>
74666>>>>>>>        
74666>>>>>>>        Function_Return iNumServers
74667>>>>>>>        
74667>>>>>>>    End_Function
74668>>>>>>>    
74668>>>>>>>    //   Enumerate the available SQL Server database servers
74668>>>>>>>    //   This function will return all SQL Server instances on the network.
74668>>>>>>>    //   This may take a long time.
74668>>>>>>>    //   To enumerate only local SQL Server instances use EnumerateServersLocal
74668>>>>>>>    Function EnumerateServers Returns Integer
74670>>>>>>>        
74670>>>>>>>        Integer iNumServers
74670>>>>>>>        Integer iNetworkLocal
74670>>>>>>>        
74670>>>>>>>        Move 0 to iNetworkLocal // 0 = enumerate network servers
74671>>>>>>>        
74671>>>>>>>        Get EnumerateServersNetworkOrLocal iNetworkLocal to iNumServers
74672>>>>>>>        
74672>>>>>>>        Function_Return iNumServers
74673>>>>>>>        
74673>>>>>>>    End_Function
74674>>>>>>>    
74674>>>>>>>    
74674>>>>>>>    //   Enumerate the available SQL Server database servers
74674>>>>>>>    //   This function will return only return SQL Server instance on the local machine
74674>>>>>>>    //   To enumerate all SQL Server instances in a network use EnumerateServers
74674>>>>>>>    Function EnumerateServersLocal Returns Integer
74676>>>>>>>        
74676>>>>>>>        Integer iNumServers
74676>>>>>>>        Integer iNetworkLocal
74676>>>>>>>        
74676>>>>>>>        Move 1 to iNetworkLocal // 1 = enumerate local servers
74677>>>>>>>        
74677>>>>>>>        Get EnumerateServersNetworkOrLocal iNetworkLocal to iNumServers
74678>>>>>>>        
74678>>>>>>>        Function_Return iNumServers
74679>>>>>>>        
74679>>>>>>>    End_Function
74680>>>>>>>    
74680>>>>>>>    
74680>>>>>>>    
74680>>>>>>>    //   Enumerate database in a given server.
74680>>>>>>>    Function EnumerateDatabases String sServer String sUser String sPassWord Returns Integer
74682>>>>>>>        Integer hoSQL
74682>>>>>>>        String  sConnect
74682>>>>>>>        String  sDatabase
74682>>>>>>>        Integer hdbc
74682>>>>>>>        Integer hstmt
74682>>>>>>>        Integer iFetchResult
74682>>>>>>>        
74682>>>>>>>        If (Num_Arguments < 3) ;            Move "" to sPassWord
74685>>>>>>>        If (Num_Arguments < 2) ;            Move "" to sUser
74688>>>>>>>        
74688>>>>>>>        If (sUser <> "") ;            Move ("SERVER=" + Trim(sServer) + ";UID=" + Trim(sUser) + ";PWD=" + Trim(sPassword) + ";") to sConnect
74691>>>>>>>        Else ;            Move ("SERVER=" + Trim(sServer) + ";Trusted_Connection=yes") to sConnect
74693>>>>>>>        
74693>>>>>>>        Object oEnumDBSQLmanager is a cSQLHandleManager
74695>>>>>>>            Move Current_Object to hoSQL
74696>>>>>>>        End_Object
74697>>>>>>>        
74697>>>>>>>        If (hoSQL <> 0) Begin
74699>>>>>>>            Get SQLConnect of hoSQL "MSSQLDRV" sConnect to hdbc
74700>>>>>>>            If (hdbc <> 0) Begin
74702>>>>>>>                Get SQLOpen of hdbc to hstmt
74703>>>>>>>                If (hstmt <> 0) Begin
74705>>>>>>>                    //   We could do a direct select on the sysdatabases table but we use
74705>>>>>>>                    //   the stored procedure sp_database instead. SQL Server recommends this
74705>>>>>>>                    //   approach in case meta data might change, the stored procedure will
74705>>>>>>>                    //   stay the same.
74705>>>>>>>                    Send SQLSetProcedureName to hstmt "sp_databases"
74706>>>>>>>                    Send SQLCall to hstmt
74707>>>>>>>                    Repeat
74707>>>>>>>>
74707>>>>>>>                        Get SQLFetch of hstmt to iFetchResult
74708>>>>>>>                        If (iFetchResult <> 0) Begin
74710>>>>>>>                            Get SQLColumnValue of hstmt 1 to sDatabase
74711>>>>>>>                            Set Value  (Item_Count(Current_Object)) to sDatabase
74712>>>>>>>                        End
74712>>>>>>>>
74712>>>>>>>                    Until (iFetchResult = 0)
74714>>>>>>>                    
74714>>>>>>>                    Send SQLClose to hstmt
74715>>>>>>>                End
74715>>>>>>>>
74715>>>>>>>                Send SQLDisconnect to hdbc
74716>>>>>>>            End
74716>>>>>>>>
74716>>>>>>>        End
74716>>>>>>>>
74716>>>>>>>        Send Destroy_Object to hoSQL
74717>>>>>>>        
74717>>>>>>>        Function_Return (Item_Count(Current_Object))
74718>>>>>>>    End_Function
74719>>>>>>>    
74719>>>>>>>    
74719>>>>>>>    Function SqlServerClientVersionName Integer iClientVersion  Returns String
74721>>>>>>>        
74721>>>>>>>        String  sSqlServerClientVersionName
74721>>>>>>>        
74721>>>>>>>        
74721>>>>>>>        Case Begin
74721>>>>>>>            
74721>>>>>>>            Case (iClientVersion = SQLSERVER2017CLIENT)
74723>>>>>>>                Move SQLSERVER2017CLIENTNAME to sSqlServerClientVersionName
74724>>>>>>>                Case Break
74725>>>>>>>                
74725>>>>>>>            Case (iClientVersion = SQLSERVER2016CLIENT)
74728>>>>>>>                Move SQLSERVER2016CLIENTNAME to sSqlServerClientVersionName
74729>>>>>>>                Case Break
74730>>>>>>>            
74730>>>>>>>            Case (iClientVersion = SQLSERVER2014CLIENT)
74733>>>>>>>                Move SQLSERVER2014CLIENTNAME to sSqlServerClientVersionName
74734>>>>>>>                Case Break
74735>>>>>>>            
74735>>>>>>>            Case (iClientVersion = SQLSERVER2012CLIENT)
74738>>>>>>>                Move SQLSERVER2012CLIENTNAME to sSqlServerClientVersionName
74739>>>>>>>                Case Break
74740>>>>>>>            
74740>>>>>>>            Case (iClientVersion = SQLSERVER2008CLIENT)
74743>>>>>>>                Move SQLSERVER2008CLIENTNAME to sSqlServerClientVersionName
74744>>>>>>>                Case Break
74745>>>>>>>            
74745>>>>>>>            Case (iClientVersion = SQLSERVER2005CLIENT)
74748>>>>>>>                Move SQLSERVER2005CLIENTNAME to sSqlServerClientVersionName
74749>>>>>>>                Case Break
74750>>>>>>>            
74750>>>>>>>            Case (iClientVersion = SQLSERVER2000CLIENT)
74753>>>>>>>                Move SQLSERVER2000CLIENTNAME to sSqlServerClientVersionName
74754>>>>>>>                Case Break
74755>>>>>>>            
74755>>>>>>>            Case Else
74755>>>>>>>                Move SQLSERVERUNKNOWNCLIENTNAME to sSqlServerClientVersionName
74756>>>>>>>                
74756>>>>>>>        Case End
74756>>>>>>>        
74756>>>>>>>        
74756>>>>>>>        Function_Return sSqlServerClientVersionName
74757>>>>>>>        
74757>>>>>>>    End_Function
74758>>>>>>>
74758>>>>>>>
74758>>>>>>>    Function SqlServerClientDriverName Integer iClientVersion  Returns String
74760>>>>>>>        
74760>>>>>>>        String  sSqlServerClientDriverName
74760>>>>>>>        
74760>>>>>>>        Case Begin
74760>>>>>>>            
74760>>>>>>>            Case (iClientVersion = SQLSERVER2017CLIENT)
74762>>>>>>>                Move SQLSERVER2017DRVRSTR to sSqlServerClientDriverName
74763>>>>>>>                Case Break
74764>>>>>>>                
74764>>>>>>>            Case (iClientVersion = SQLSERVER2016CLIENT)
74767>>>>>>>                Move SQLSERVER2016DRVRSTR to sSqlServerClientDriverName
74768>>>>>>>                Case Break
74769>>>>>>>            
74769>>>>>>>            Case (iClientVersion = SQLSERVER2014CLIENT)
74772>>>>>>>                Move SQLSERVER2014DRVRSTR to sSqlServerClientDriverName
74773>>>>>>>                Case Break
74774>>>>>>>            
74774>>>>>>>            Case (iClientVersion = SQLSERVER2012CLIENT)
74777>>>>>>>                Move SQLSERVER2012DRVRSTR to sSqlServerClientDriverName
74778>>>>>>>                Case Break
74779>>>>>>>            
74779>>>>>>>            Case (iClientVersion = SQLSERVER2008CLIENT)
74782>>>>>>>                Move SQLSERVER2008DRVRSTR to sSqlServerClientDriverName
74783>>>>>>>                Case Break
74784>>>>>>>            
74784>>>>>>>            Case (iClientVersion = SQLSERVER2005CLIENT)
74787>>>>>>>                Move SQLSERVER2005DRVRSTR to sSqlServerClientDriverName
74788>>>>>>>                Case Break
74789>>>>>>>            
74789>>>>>>>            Case (iClientVersion = SQLSERVER2000CLIENT)
74792>>>>>>>                Move SQLSERVER2000DRVRSTR to sSqlServerClientDriverName
74793>>>>>>>                Case Break
74794>>>>>>>            
74794>>>>>>>            Case Else
74794>>>>>>>                Move SQLSERVER2000DRVRSTR to sSqlServerClientDriverName
74795>>>>>>>                
74795>>>>>>>        Case End
74795>>>>>>>        
74795>>>>>>>        
74795>>>>>>>        Function_Return sSqlServerClientDriverName
74796>>>>>>>        
74796>>>>>>>    End_Function
74797>>>>>>>    
74797>>>>>>>    
74797>>>>>>>End_Class
74798>>>>>>>
74798>>>>>>>
74798>>>>>
74798>>>>>Register_Function phoWorkspace Returns Handle
74798>>>>>Register_Function Help_filename Returns String
74798>>>>>Register_Function GetHelpFile Returns String
74798>>>>>Register_Function pbEnterKeyAsTabKey Returns Boolean
74798>>>>>
74798>>>>>// Do not call directly, use the wrapper function instead
74798>>>>>External_Function WNetGetUserW "WNetGetUserW" MPR.DLL ;    Pointer lpName ;    Pointer lpUser_Name ;    Pointer lpLength ;    Returns DWord
74799>>>>>
74799>>>>>// Wrapper Function WNetGetUser
74799>>>>>Function WNetGetUser Global ;    Pointer lpName ;    Pointer lpUser_Name ;    Pointer lpLength ;    Returns DWord
74801>>>>>    
74801>>>>>    DWord   dwResult     
74801>>>>>    UWide   uwName uwUserName
74801>>>>>    UWide   uwName uwUserName
74801>>>>>        
74801>>>>>    Send StringToWide lpName (&uwName)
74802>>>>>    
74802>>>>>    Send WideSetBuffer lpUser_Name lpLength (&uwUserName)    
74803>>>>>    
74803>>>>>    Move (WNetGetUserW (uwName.lpUText, uwUserName.lpUText, lpLength)) to dwResult
74804>>>>>    
74804>>>>>    Send WideToString (&uwUserName) lpUser_Name
74805>>>>>    
74805>>>>>    Function_Return dwResult
74806>>>>>End_Function
74807>>>>>
74807>>>>>//    This function reads the current username Of windows and returns that
74807>>>>>//    name or an text unknown user
74807>>>>>Function Network_User_Name for cDesktop Returns String
74809>>>>>    WString wName
74809>>>>>    Integer iRetval iLength
74809>>>>>    
74809>>>>>    Move 0 to iLength
74810>>>>>    Move (WNetGetUserW (0, 0, AddressOf (iLength))) to iRetval
74811>>>>>    Move (ZeroString(iLength)) to wName
74812>>>>>    Move (WNetGetUserW (0, AddressOf (wName), AddressOf (iLength))) to iRetval
74813>>>>>    
74813>>>>>    If (iRetval = NO_ERROR) Begin
74815>>>>>        Function_Return (CString (wName))
74816>>>>>    End
74816>>>>>>
74816>>>>>    
74816>>>>>    Function_Return "User Unknown"
74817>>>>>End_Function
74818>>>>>
74818>>>>>External_Function GlobalMemoryStatus "GlobalMemoryStatus" Kernel32.Dll Pointer lpsMemoryStatus Returns Integer
74819>>>>>
74819>>>>>External_Function GlobalMemoryStatusEx "GlobalMemoryStatusEx" Kernel32.Dll Pointer lpMemoryStatus Returns Integer
74820>>>>>
74820>>>>>Class SysinfoDisplay is a cTextEdit
74821>>>>>    Procedure Construct_Object
74823>>>>>        Forward Send Construct_Object
74825>>>>>        
74825>>>>>        Set Location to 6 6
74826>>>>>        Set Size to 110 255
74827>>>>>        Set Read_Only_State to True
74828>>>>>        Set pbWrap to False
74829>>>>>    End_Procedure
74830>>>>>    
74830>>>>>    //    This method will show the name Of the current directory in the system
74830>>>>>    //    information box
74830>>>>>    Procedure Show_Current_Directory
74832>>>>>        String sDir
74832>>>>>        
74832>>>>>        Get_Current_Directory to sDir
74833>>>>>        
74833>>>>>        Send AppendTextLn (SFormat (C_$CurrentDirectory, sDir))
74834>>>>>    End_Procedure
74835>>>>>    
74835>>>>>    Procedure Show_Windows_Directory
74837>>>>>        String sWindir
74837>>>>>        
74837>>>>>        Get_Windows_Directory to sWindir
74838>>>>>        
74838>>>>>        Send AppendTextLn (SFormat (C_$WindowsDirectory, sWindir))
74839>>>>>    End_Procedure
74840>>>>>    
74840>>>>>    Procedure Show_Current_User
74842>>>>>        Send AppendTextLn (SFormat (C_$NetworkUserName, Network_User_Name (Self)))
74843>>>>>    End_Procedure
74844>>>>>    
74844>>>>>    Procedure Show_Number_Format
74846>>>>>        Integer iFormat
74846>>>>>        String sFormatText
74846>>>>>        
74846>>>>>        Get_Attribute DF_THOUSANDS_SEPARATOR to iFormat
74849>>>>>        Move (Character (iFormat)) to sFormatText
74850>>>>>        Send AppendTextLn (SFormat (C_$ThousandsSeparator, sFormatText, iFormat))
74851>>>>>        
74851>>>>>        Get_Attribute DF_DECIMAL_SEPARATOR to iFormat
74854>>>>>        Move (Character (iFormat)) to sFormatText
74855>>>>>        Send AppendTextLn (SFormat (C_$DecimalSeparator, sFormatText))
74856>>>>>    End_Procedure
74857>>>>>    
74857>>>>>    Procedure Show_Filelist_Name
74859>>>>>        String sFilename
74859>>>>>        
74859>>>>>        Get_Attribute DF_FILELIST_NAME to sFilename
74862>>>>>        
74862>>>>>        Send AppendTextLn (SFormat (C_$CurrentFilelist, sFilename))
74863>>>>>        Send AppendTextLn ""
74864>>>>>    End_Procedure
74865>>>>>    
74865>>>>>    Procedure Show_Lock_Delay
74867>>>>>        Integer iLockdelay
74867>>>>>        
74867>>>>>        Get_Attribute DF_LOCK_DELAY to iLockdelay
74870>>>>>        
74870>>>>>        Send AppendTextLn (SFormat (C_$DatabaseLockingDelay, iLockDelay))
74871>>>>>    End_Procedure
74872>>>>>    
74872>>>>>    Procedure Show_Lock_Timeout
74874>>>>>        Integer iLockTimeout
74874>>>>>        
74874>>>>>        Get_Attribute DF_LOCK_TIMEOUT to iLockTimeout
74877>>>>>        
74877>>>>>        Send AppendTextLn (SFormat (C_$DatabaseLockingTimeout, iLockTimeOut))
74878>>>>>    End_Procedure
74879>>>>>    
74879>>>>>    Procedure Show_Screen_Size
74881>>>>>        Integer iYscreensize iXscreensize
74881>>>>>        
74881>>>>>        Move (GetSystemMetrics (SM_CXSCREEN)) to iXscreensize
74882>>>>>        Move (GetSystemMetrics (SM_CYSCREEN)) to iYscreensize
74883>>>>>        
74883>>>>>        Send AppendTextLn (SFormat (C_$VideoResolution, iXscreensize, iYscreensize))
74884>>>>>    End_Procedure
74885>>>>>    
74885>>>>>    Procedure Show_Page_Size
74887>>>>>        Send AppendTextLn (SFormat (C_$PageEndFormFeed, Pageend, Pagefeed))
74888>>>>>    End_Procedure
74889>>>>>    
74889>>>>>    Procedure Show_Date
74891>>>>>        Date dToday
74891>>>>>        
74891>>>>>        Move (CurrentDateTime()) to  dToday
74892>>>>>        
74892>>>>>        Send AppendTextLn (SFormat (C_$CurrentSystemDate, String (dToday)))
74893>>>>>    End_Procedure
74894>>>>>    
74894>>>>>    Procedure Show_Date_Format
74896>>>>>        Integer iDateFormat
74896>>>>>        String sDateFormat
74896>>>>>        
74896>>>>>        Get_Attribute DF_DATE_FORMAT to iDateFormat
74899>>>>>        Case Begin
74899>>>>>            Case (iDateFormat = DF_DATE_USA)
74901>>>>>                Move C_$USA to sDateFormat
74902>>>>>                Case Break
74903>>>>>            Case (iDateFormat = DF_DATE_EUROPEAN)
74906>>>>>                Move C_$European to sDateFormat
74907>>>>>                Case Break
74908>>>>>            Case (iDateFormat = DF_DATE_MILITARY)
74911>>>>>                Move C_$Military to sDateFormat
74912>>>>>                Case Break
74913>>>>>            Case Else
74913>>>>>                Move C_$UnknownDateType to sDateFormat
74914>>>>>                Case Break
74915>>>>>        Case End
74915>>>>>        
74915>>>>>        Send AppendTextLn (SFormat (C_$DateFormat, sDateformat))
74916>>>>>    End_Procedure
74917>>>>>    
74917>>>>>    Procedure Show_Systemresources
74919>>>>>        tWinMemoryStatusEx MemoryStatusInfo
74919>>>>>        tWinMemoryStatusEx MemoryStatusInfo
74919>>>>>        Integer iRetval
74919>>>>>        
74919>>>>>        Move (SizeOfType (tWinMemoryStatusEx)) to MemoryStatusInfo.dwLength
74920>>>>>        Move (GlobalMemoryStatusEx (AddressOf (MemoryStatusInfo))) to iRetval
74921>>>>>        If (iRetval = 0) Begin
74923>>>>>            Move (ShowLastError ()) to iRetval
74924>>>>>        End
74924>>>>>>
74924>>>>>        
74924>>>>>        Send AppendTextLn (SFormat (C_$AvailableMemory, MemoryStatusInfo.ullTotalPhys))
74925>>>>>        Send AppendTextLn (SFormat (C_$MemoryUtilization, MemoryStatusInfo.dwMemoryLoad))
74926>>>>>        Send AppendTextLn (SFormat (C_$AvailablePhysicalMemory, Integer ( Real (MemoryStatusInfo.ullAvailPhys) / Real (MemoryStatusInfo.ullTotalPhys) * 100.0)))
74927>>>>>        Send AppendTextLn (SFormat (C_$AvailablePagefileSpace, Integer ( Real (MemoryStatusInfo.ullAvailPageFile) / Real (MemoryStatusInfo.ullTotalPageFile) * 100.0)))
74928>>>>>        Send AppendTextLn (SFormat (C_$AvailableVirtualMemory, Integer ( Real (MemoryStatusInfo.ullAvailVirtual) / Real (MemoryStatusInfo.ullTotalVirtual) * 100.0)))
74929>>>>>    End_Procedure
74930>>>>>    
74930>>>>>    Procedure Show_Registration
74932>>>>>        String sRegName
74932>>>>>        Integer iSN iMaxUsers
74932>>>>>        
74932>>>>>        Registration sRegName iSN
74933>>>>>>
74933>>>>>        
74933>>>>>        Get_Licensed_Max_Users to iMaxUsers
74934>>>>>        
74934>>>>>        Send AppendTextLn ""
74935>>>>>        Send AppendTextLn (SFormat (C_$Serial, iSN))
74936>>>>>        Send AppendTextLn (SFormat (C_$RegName, sRegName))
74937>>>>>        Send AppendTextLn (SFormat (C_$MaxNumUsers, iMaxUsers))
74938>>>>>    End_Procedure
74939>>>>>    
74939>>>>>    // If workspaces are used, we will send the message EnumerateWorkspaceData
74939>>>>>    // To the workspace object passing the an object and message To send back
74939>>>>>    // To this object. It is expected that the workspace object will send this
74939>>>>>    // message for every line Of information it wants displayed (passing the
74939>>>>>    // information To be displayed
74939>>>>>    Register_Procedure EnumerateWorkspaceData Handle hObjId Handle hmMessId
74939>>>>>    
74939>>>>>    Procedure Show_ServicePack
74941>>>>>        String sKey sVersionDescription sVersion
74941>>>>>        Handle hoRegistry
74941>>>>>        Boolean bExists bOpened
74941>>>>>        
74941>>>>>        Get Create (RefClass (cRegistry)) to hoRegistry
74942>>>>>        Set phRootKey of hoRegistry to HKEY_LOCAL_MACHINE
74943>>>>>        Set pfAccessRights of hoRegistry to KEY_READ
74944>>>>>        
74944>>>>>        Move C_DFVersionRegistryRoot to sKey
74945>>>>>        Get KeyExists of hoRegistry sKey to bExists
74946>>>>>        If (bExists) Begin
74948>>>>>            Get OpenKey of hoRegistry sKey to bOpened
74949>>>>>            If (bOpened) Begin
74951>>>>>                Get ValueExists of hoRegistry "CurrentVersionDescription" to bExists
74952>>>>>                If (bExists) Begin
74954>>>>>                    Get ReadString of hoRegistry "CurrentVersionDescription" to sVersionDescription
74955>>>>>                End
74955>>>>>>
74955>>>>>                
74955>>>>>                Get ValueExists of hoRegistry "CurrentVersion" to bExists
74956>>>>>                If (bExists) Begin
74958>>>>>                    Get ReadString of hoRegistry "CurrentVersion" to sVersion
74959>>>>>                End
74959>>>>>>
74959>>>>>                Send CloseKey of hoRegistry
74960>>>>>            End
74960>>>>>>
74960>>>>>        End
74960>>>>>>
74960>>>>>        Send Destroy of hoRegistry
74961>>>>>        
74961>>>>>        If (sVersionDescription <> "") Begin
74963>>>>>            Send AppendTextLn (sVersionDescription * "-" * sVersion)
74964>>>>>            Send AppendTextLn ""
74965>>>>>        End
74965>>>>>>
74965>>>>>    End_Procedure
74966>>>>>    
74966>>>>>    
74966>>>>>    Procedure Show_WorkspaceInformation
74968>>>>>        Integer hoWorkspace
74968>>>>>        
74968>>>>>        If (ghoApplication <> 0) Begin
74970>>>>>            Get phoWorkspace of ghoApplication to hoWorkspace
74971>>>>>            If (hoWorkspace <> 0) Begin
74973>>>>>                Send EnumerateWorkspaceData of hoWorkspace Self (Refproc (AppendTextLn))
74974>>>>>                Send AppendTextLn ""
74975>>>>>            End
74975>>>>>>
74975>>>>>        End
74975>>>>>>
74975>>>>>    End_Procedure
74976>>>>>    
74976>>>>>    // If connection ids are used, we will send the message EnumerateConnections
74976>>>>>    // to the connection manager object passing the an object and message to send
74976>>>>>    // back to this object. It is expected that the connection manager object will
74976>>>>>    // send this message for every line Of information it wants displayed (passing
74976>>>>>    // the information To be displayed
74976>>>>>    Register_Procedure EnumerateConnections Integer hObjId Integer hmMessId
74976>>>>>    
74976>>>>>    Procedure Show_ConnectionIdInformation
74978>>>>>        If (ghoConnection > 0) Begin
74980>>>>>            Send AppendTextLn ""
74981>>>>>            Send EnumerateConnections of ghoConnection Self (RefProc(AppendTextLn))
74982>>>>>        End
74982>>>>>>
74982>>>>>    End_Procedure
74983>>>>>    
74983>>>>>    Function VersionStr Integer iVer Integer iRev Integer iBld Returns String
74985>>>>>        Function_Return (String (iVer) - "." - String (iRev) - "." - String (iBld))
74986>>>>>    End_Function
74987>>>>>    
74987>>>>>    Procedure Show_Versions
74989>>>>>        Integer iVersion iRevision iBuild
74989>>>>>        
74989>>>>>        Version_Information iVersion iRevision iBuild
74991>>>>>        
74991>>>>>        Send AppendTextLn (SFormat (C_$RuntimeVersion, VersionStr(Self,iVersion,iRevision,iBuild) ))
74992>>>>>        Send AppendTextLn (SFormat (C_$PackageVersion, VersionStr(Self,PKG_VERSION, PKG_REVISION, PKG_BUILD) ))
74993>>>>>        Send AppendTextLn (SFormat (C_$FMACVersion, VersionStr(Self,FMAC_VERSION, FMAC_REVISION, FMAC_BUILD) ))
74994>>>>>    End_Procedure
74995>>>>>    
74995>>>>>    Procedure Show_Platform
74997>>>>>        Send AppendTextLn (SFormat (C_$Platform,"64-bit"))
74998>>>>>    End_Procedure
74999>>>>>    
74999>>>>>    Function CKRevisionNumber String sDriverID Returns String
75001>>>>>        Handle hoCLIHandler
75001>>>>>        Handle hoDFBtrDrvHandler
75001>>>>>        String sCKRevision
75001>>>>>        
75001>>>>>        
75001>>>>>        If (sDriverID = "MSSQLDRV" or sDriverID = "ODBC_DRV" or sDriverID = "DB2_DRV") Begin
75003>>>>>            Get Create (RefClass(cCLIHandler)) to hoCLIHandler
75004>>>>>            Set psDriverID of hoCLIHandler to sDriverID
75005>>>>>            Move (CKRevision(hoCLIHandler)) to sCKRevision
75006>>>>>            Send Destroy of hoCLIHandler
75007>>>>>        End
75007>>>>>>
75007>>>>>        Else Begin
75008>>>>>            If (sDriverID = "DFBTRDRV") Begin
75010>>>>>                Get Create (RefClass(cDFBtrDrvHandler)) to hoDFBtrDrvHandler
75011>>>>>                Set psDriverID of hoDFBtrDrvHandler to sDriverID
75012>>>>>                Move (CKRevision(hoDFBtrDrvHandler)) to sCKRevision
75013>>>>>                Send Destroy of hoDFBtrDrvHandler
75014>>>>>            End
75014>>>>>>
75014>>>>>        End
75014>>>>>>
75014>>>>>        
75014>>>>>        Function_Return sCKRevision
75015>>>>>    End_Function
75016>>>>>    
75016>>>>>    
75016>>>>>    Function IsDataAccessCK String sDriverID Returns Boolean
75018>>>>>        
75018>>>>>        If (sDriverID = "DATAFLEX") Begin
75020>>>>>            Function_Return False
75021>>>>>        End
75021>>>>>>
75021>>>>>        
75021>>>>>        Function_Return (sDriverID = "MSSQLDRV" or sDriverID = "ODBC_DRV" or sDriverID = "DB2_DRV" or sDriverID = "DFBTRDRV")
75022>>>>>    End_Function
75023>>>>>    
75023>>>>>    
75023>>>>>    Procedure Show_Drivers
75025>>>>>        String sCurrentDriver sRevNumber
75025>>>>>        String sLoadedDrivers sClientDriver
75025>>>>>        Integer iNumberOfDrivers iCount iClientVersion iMSSQLIndex
75025>>>>>        Boolean bOK
75025>>>>>        Handle hoMsqlDrv
75025>>>>>        
75025>>>>>        Move "" to sLoadedDrivers
75026>>>>>        Get_Attribute DF_NUMBER_DRIVERS to iNumberOfDrivers
75029>>>>>        For iCount from 1 to iNumberOfDrivers
75035>>>>>>
75035>>>>>            Get_Attribute DF_DRIVER_NAME of iCount to sCurrentDriver
75038>>>>>            If (sLoadedDrivers <> "") Begin
75040>>>>>                Move (Append (sLoadedDrivers, ", ")) to sLoadedDrivers
75041>>>>>            End
75041>>>>>>
75041>>>>>            Get IsDataAccessCK sCurrentDriver to bOK
75042>>>>>            If (bOK) Begin
75044>>>>>                If (sCurrentDriver = "MSSQLDRV") Begin
75046>>>>>                    Move iCount to iMSSQLIndex
75047>>>>>                End
75047>>>>>>
75047>>>>>                Get CKRevisionNumber sCurrentDriver to sRevNumber
75048>>>>>                // if mssqldrv, show the client number
75048>>>>>                Move (sCurrentDriver * "(" + sRevNumber + ")") to sCurrentDriver
75049>>>>>            End
75049>>>>>>
75049>>>>>            Move (Append (sLoadedDrivers, sCurrentDriver)) to sLoadedDrivers
75050>>>>>        Loop
75051>>>>>>
75051>>>>>        Send AppendTextLn (SFormat (C_$DatabaseDriver, sLoadedDrivers))
75052>>>>>        If (iMSSQLIndex>0) Begin
75054>>>>>            Get_Attribute DF_DRIVER_SQLSERVER_CLIENT_VERSION of iMSSQLIndex to iClientVersion
75057>>>>>            Get Create (RefClass(cMSSQLHandler)) to hoMsqlDrv
75058>>>>>            Get SqlServerClientVersionName of hoMsqlDrv iClientVersion to sClientDriver
75059>>>>>            Send Destroy of hoMsqlDrv
75060>>>>>            Send AppendTextLn (SFormat("MSSQLDRV Client Version: %1", sClientDriver))
75061>>>>>        End
75061>>>>>>
75061>>>>>    End_Procedure
75062>>>>>    
75062>>>>>    Procedure Show_HelpFile
75064>>>>>        String sHelpFile
75064>>>>>        Integer eHelpType
75064>>>>>        
75064>>>>>        If (ghoApplication <> 0) Begin
75066>>>>>            Get peHelpType of ghoApplication to eHelpType
75067>>>>>            If (eHelpType = htHtmlHelp and ghoHtmlHelp) Begin
75069>>>>>                Get GetHelpFile of ghoHtmlHelp to sHelpFile
75070>>>>>            End
75070>>>>>>
75070>>>>>            Else If (eHelpType = htWinHelp and Help_object_id) Begin
75073>>>>>                Get Help_filename of Help_object_id to sHelpFile
75074>>>>>            End
75074>>>>>>
75074>>>>>            Else Begin
75075>>>>>                Move C_$ThereIsNoHelpfileDefined to sHelpFile
75076>>>>>            End
75076>>>>>>
75076>>>>>            
75076>>>>>            Send AppendTextLn ""
75077>>>>>            Send AppendTextLn (SFormat (C_$HelpFile, sHelpFile))
75078>>>>>        End
75078>>>>>>
75078>>>>>    End_Procedure
75079>>>>>    
75079>>>>>    Procedure Show_EnterAsTab
75081>>>>>        Boolean bEnterKeyAsTabKey
75081>>>>>        String sText
75081>>>>>        
75081>>>>>        If (ghoApplication <> 0) Begin
75083>>>>>            Get pbEnterKeyAsTabKey of ghoApplication to bEnterKeyAsTabKey
75084>>>>>            If (bEnterKeyAsTabKey) Begin
75086>>>>>                Move "True" to sText
75087>>>>>            End
75087>>>>>>
75087>>>>>            Else Begin
75088>>>>>                Move "False" to sText
75089>>>>>            End
75089>>>>>>
75089>>>>>            Send AppendTextLn (SFormat (C_$EnterKeyNavForward, sText))
75090>>>>>        End
75090>>>>>>
75090>>>>>    End_Procedure
75091>>>>>    
75091>>>>>    //    During activation we will remove the old information and add the newly
75091>>>>>    //    found systeminformation
75091>>>>>    Procedure Add_Focus Integer hoRoot
75093>>>>>        Forward Send Add_Focus hoRoot
75095>>>>>        
75095>>>>>        Send Delete_Data
75096>>>>>        
75096>>>>>        Set Changed_State to False
75097>>>>>        Set Read_Only_State to True
75098>>>>>        
75098>>>>>        Send Show_ServicePack
75099>>>>>        Send Show_Versions
75100>>>>>        Send Show_Platform
75101>>>>>        Send Show_Drivers
75102>>>>>        If (ghoConnection <> 0) Begin
75104>>>>>            Send Show_ConnectionIdInformation
75105>>>>>        End
75105>>>>>>
75105>>>>>        Send Show_HelpFile
75106>>>>>        Send Show_Current_Directory
75107>>>>>        Send Show_Filelist_Name
75108>>>>>        If (ghoApplication <> 0) Begin
75110>>>>>            Send Show_WorkSpaceInformation // added To show WS info
75111>>>>>        End
75111>>>>>>
75111>>>>>        Send Show_Current_User
75112>>>>>        Send Show_Windows_Directory
75113>>>>>        Send Show_Screen_Size
75114>>>>>        Send Show_Page_Size
75115>>>>>        Send Show_EnterAsTab
75116>>>>>        Send Show_Number_Format
75117>>>>>        Send Show_Date_Format
75118>>>>>        Send Show_Lock_Delay
75119>>>>>        Send Show_Lock_Timeout
75120>>>>>        Send Show_Date
75121>>>>>        Send Show_Systemresources
75122>>>>>        Send Show_Registration
75123>>>>>        Send Beginning_of_Data
75124>>>>>        
75124>>>>>        Set Icon to 'default.ico'
75125>>>>>    End_Procedure
75126>>>>>End_Class
75127>>>>>
75127>>>>>Class SysInfoDialog is a ModalPanel
75128>>>>>    Procedure Construct_Object
75130>>>>>        Forward Send Construct_Object
75132>>>>>        
75132>>>>>        Set Label to C_$SystemInformation
75133>>>>>        Set Size to 140 267
75134>>>>>        Set piMinSize to 140 267
75135>>>>>        Set Locate_Mode to CENTER_ON_SCREEN
75136>>>>>        Set Border_Style to Border_Thick
75137>>>>>        
75137>>>>>        Object oSysinfoDisplay is a SysInfoDisplay
75139>>>>>            Set peAnchors to anAll
75140>>>>>        End_Object
75141>>>>>        
75141>>>>>        Object oCloseButton is a Button
75143>>>>>            Set Label to C_$Close
75144>>>>>            Set Location to 120 210
75145>>>>>            Set Message 0 to (Refproc (Close_Panel))
75146>>>>>            Set Default_State to True
75147>>>>>            Set peAnchors to anBottomRight
75148>>>>>        End_Object
75149>>>>>        
75149>>>>>        On_Key kCancel Send Close_Panel
75150>>>>>    End_Procedure
75151>>>>>End_Class
75152>>>>>
75152>>>>>Class AboutDialog is a ModalPanel
75153>>>>>    Procedure Construct_Object
75155>>>>>        String sVdfRootDir
75155>>>>>        
75155>>>>>        Forward Send Construct_Object
75157>>>>>        
75157>>>>>        Set Label to C_$About
75158>>>>>        Set Size to 89 282
75159>>>>>        Set Locate_Mode to CENTER_ON_SCREEN
75160>>>>>        
75160>>>>>        Object oSysInfoDialog is a SysInfoDialog
75162>>>>>        End_Object
75163>>>>>        
75163>>>>>        Object oBox is a Container3d
75165>>>>>            Set Border_Style to Border_StaticEdge
75166>>>>>            Set Size to 63 272
75167>>>>>            Set Location to 4 5
75168>>>>>            
75168>>>>>            Object oAboutGraphic is a BitmapContainer
75170>>>>>                Set Border_Style to Border_None
75171>>>>>                Set Bitmap_Style to Bitmap_Center
75172>>>>>                Set Size to 48 48
75173>>>>>                Set Location to 7 2
75174>>>>>            End_Object
75175>>>>>            
75175>>>>>            Object oProductName is a TextBox
75177>>>>>                Set Label to C_$ProductName
75178>>>>>                Set Size to 10 45
75179>>>>>                Set Location to 8 53
75180>>>>>            End_Object
75181>>>>>            
75181>>>>>            Object oVersion is a TextBox
75183>>>>>                Set Label to C_$Version
75184>>>>>                Set Size to 10 25
75185>>>>>                Set Location to 21 53
75186>>>>>            End_Object
75187>>>>>            
75187>>>>>            Object oCopyright is a TextBox
75189>>>>>                Set Label to C_$Copyright
75190>>>>>                Set Size to 10 31
75191>>>>>                Set Location to 34 53
75192>>>>>            End_Object
75193>>>>>            
75193>>>>>            Object oAuthor is a TextBox
75195>>>>>                Set Label to C_$Author
75196>>>>>                Set Size to 10 22
75197>>>>>                Set Location to 46 53
75198>>>>>            End_Object
75199>>>>>        End_Object
75200>>>>>        
75200>>>>>        Object oOKButton is a Button
75202>>>>>            On_Item C_$OK Send Close_Panel
75203>>>>>            Set Size to 14 50
75204>>>>>            Set Location to 71 227
75205>>>>>        End_Object
75206>>>>>        
75206>>>>>        Object oSysInfoButton is a Button
75208>>>>>            On_Item C_$SystemInfo Send Show_Sysinfo
75209>>>>>            Set Size to 14 50
75210>>>>>            Set Location to 71 171
75211>>>>>        End_Object
75212>>>>>        
75212>>>>>        On_Key Kcancel Send KeyAction of oOKButton
75213>>>>>        
75213>>>>>        Set Logo to "DacAbout.bmp"  // square bitmaps Of 42x42 work best
75214>>>>>    End_Procedure
75215>>>>>    
75215>>>>>    Procedure Set ProductName String sProductName
75217>>>>>        Set Label of oProductName to sProductName
75218>>>>>    End_Procedure
75219>>>>>    
75219>>>>>    Procedure Set Version String sVersion
75221>>>>>        Set Label of oVersion to sVersion
75222>>>>>    End_Procedure
75223>>>>>    
75223>>>>>    Procedure Set Copyright String sCopyright
75225>>>>>        Set Label of oCopyright to sCopyright
75226>>>>>    End_Procedure
75227>>>>>    
75227>>>>>    Procedure Set Author String sAuthor
75229>>>>>        Set Label of oAuthor to sAuthor
75230>>>>>    End_Procedure
75231>>>>>    
75231>>>>>    Procedure Set Logo String sLogo
75233>>>>>        // square bitmaps Of 42x42 work best
75233>>>>>        Set Bitmap of oAboutGraphic to sLogo
75234>>>>>    End_Procedure
75235>>>>>    
75235>>>>>    Procedure Show_Sysinfo
75237>>>>>        Send Popup_Modal of oSysinfoDialog
75238>>>>>    End_Procedure
75239>>>>>    
75239>>>>>    Procedure End_Construct_Object
75241>>>>>        Handle hoVersionInfo
75241>>>>>        Boolean bIncluded
75241>>>>>        Integer iMajor iMinor iRelease iBuild
75241>>>>>        String sLabel
75241>>>>>        
75241>>>>>        Get Label of oVersion to sLabel
75242>>>>>        If (sLabel = C_$VERSION) Begin
75244>>>>>            // set it To the version info Of the program, if available
75244>>>>>            If (ghoApplication <> 0) Begin
75246>>>>>                Get phoVersionInfo of ghoApplication to hoVersionInfo
75247>>>>>                If (hoVersionInfo <> 0) Begin
75249>>>>>                    Get pbIncluded of hoVersionInfo to bIncluded
75250>>>>>                    If (bIncluded) Begin
75252>>>>>                        Get piVersionMajor of hoVersionInfo to iMajor
75253>>>>>                        Get piVersionMinor of hoVersionInfo to iMinor
75254>>>>>                        Get piVersionRelease of hoVersionInfo to iRelease
75255>>>>>                        Get piVersionBuild of hoVersionInfo to iBuild
75256>>>>>                        Move (SFormat (C_$VERSION + ": %1.%2.%3.%4", iMajor, iMinor, iRelease, iBuild)) to sLabel
75257>>>>>                        Set Version to sLabel
75258>>>>>                    End
75258>>>>>>
75258>>>>>                End
75258>>>>>>
75258>>>>>            End
75258>>>>>>
75258>>>>>        End
75258>>>>>>
75258>>>>>        
75258>>>>>        Forward Send End_Construct_Object
75260>>>>>    End_Procedure
75261>>>>>End_Class
75262>>>
75262>>>//  This is the default message. It is expected that you will
75262>>>//  create your own message to override this
75262>>>Procedure Activate_About
75265>>>    Send DoAbout "" "" "" "" ""
75266>>>End_Procedure
75267>>>
75267>>>//  It is expected that you will send this message (most
75267>>>//  likely from Activate_About. This creates an about object, activates it
75267>>>//  and destroys it when done. It is not exepected that you will augment this.
75267>>>Procedure DoAbout String sTitle String sVersion String sCopyRight String sAuthor String sBitmap
75270>>>    Integer hoObj hoMain
75270>>>    
75270>>>    // create object
75270>>>    Object About is an AboutDialog
75272>>>        // if no title passed use the label of the main panel
75272>>>        // (if a main panel exists).
75272>>>        If (sTitle = "") Begin
75274>>>            Get Main_Window of desktop to hoMain
75275>>>            If hoMain ;                Get Label of hoMain to sTitle
75278>>>        End
75278>>>>
75278>>>        Set productname to sTitle
75279>>>        Set version     to sVersion
75280>>>        Set copyright   to sCopyRight
75281>>>        Set author      to sAuthor
75282>>>        If (sBitmap <> '') ;            Set logo to sBitMap // square bitmaps of 42x42 work best
75285>>>        Move Self to hoObj // object Id
75286>>>    End_Object
75287>>>    Send Popup   of hoObj    // popup the about object
75288>>>    Send Destroy of hoObj // when done, it will be destroyed
75289>>>End_Procedure
75290>>>
75290>        Use "CustomerView .vw"
Including file: CustomerView .vw    (C:\DataFlex Projects\OrderTutorial\AppSrc\CustomerView .vw)
75290>>>Use Windows.pkg
75290>>>Use DFClient.pkg
75290>>>Use cCustomerDataDictionary.dd
Including file: cCustomerDataDictionary.dd    (C:\DataFlex Projects\OrderTutorial\DDSrc\cCustomerDataDictionary.dd)
75290>>>>>Use DataDict.pkg
75290>>>>>
75290>>>>>Open Customer
Including file: Customer.fd    (C:\DataFlex Projects\OrderTutorial\DDSrc\Customer.fd)
75292>>>>>Open OrderHea
Including file: OrderHea.fd    (C:\DataFlex Projects\OrderTutorial\DDSrc\OrderHea.fd)
75294>>>>>Open OrdSys
Including file: OrdSys.fd    (C:\DataFlex Projects\OrderTutorial\DDSrc\OrdSys.fd)
75296>>>>>
75296>>>>>Object Customer_State_VT is a CodeValidationTable
75298>>>>>    Set Type_Value to "STATES"
75299>>>>>    Set Allow_Blank_State to True
75300>>>>>End_Object
75301>>>>>
75301>>>>>Register_Object Customer_sl
75301>>>>>
75301>>>>>Class cCustomerDataDictionary is a DataDictionary
75302>>>>>    
75302>>>>>    Procedure Construct_Object
75304>>>>>        Forward Send Construct_Object
75306>>>>>        Set Main_File to Customer.File_Number
75307>>>>>
75307>>>>>        Set Add_System_File to OrdSys.File_Number DD_Lock_On_All
75308>>>>>
75308>>>>>        Set Add_Client_File to OrderHea.File_Number
75309>>>>>
75309>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
75310>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
75311>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
75312>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
75313>>>>>
75313>>>>>        Set Field_Option Field Customer.Customer_Number DD_AUTOFIND to True
75314>>>>>        Set Key_Field_State Field Customer.Customer_Number to True
75315>>>>>        Set Field_Option Field Customer.Customer_Number DD_NOPUT to True
75316>>>>>        Set Field_Auto_Increment Field Customer.Customer_Number to File_Field OrdSys.Cust_Number
75317>>>>>        Set Field_Label_Long Field Customer.Customer_Number to "Customer Number"
75318>>>>>        Set Field_Label_Short Field Customer.Customer_Number to "Number"
75319>>>>>        Set Status_Help Field Customer.Customer_Number to "Customer ID Number (system assigned)"
75320>>>>>        Set Field_Prompt_Object Field Customer.Customer_Number to Customer_sl
75321>>>>>
75321>>>>>        Set Field_Label_Long Field Customer.Name to "Customer Name"
75322>>>>>        Set Field_Label_Short Field Customer.Name to "Name"
75323>>>>>        Set Status_Help Field Customer.Name to "Customer/Company Name"
75324>>>>>        Set Field_Prompt_Object Field Customer.Name to Customer_sl
75325>>>>>
75325>>>>>        Set Field_Label_Long Field Customer.Address to "Street Address"
75326>>>>>        Set Field_Label_Short Field Customer.Address to "Address"
75327>>>>>        Set Status_Help Field Customer.Address to "Street Address"
75328>>>>>
75328>>>>>        Set Field_Option Field Customer.State DD_CAPSLOCK to True
75329>>>>>        Set Field_Class_Name Field Customer.State to "Combo"
75330>>>>>        Set Field_Label_Long Field Customer.State to "State"
75331>>>>>        Set Field_Label_Short Field Customer.State to "St."
75332>>>>>        Set Status_Help Field Customer.State to "Two letter state Id."
75333>>>>>        Set Field_Value_Table Field Customer.State to Customer_State_VT
75334>>>>>
75334>>>>>        Set Field_Mask Field Customer.Zip to "#####-####"
75335>>>>>        Set Field_Label_Long Field Customer.Zip to "Zip/Postal Code"
75336>>>>>        Set Field_Label_Short Field Customer.Zip to "Zip"
75337>>>>>        Set Status_Help Field Customer.Zip to "Zip or Postal Code"
75338>>>>>
75338>>>>>        Set Field_Label_Long Field Customer.Phone_Number to "Phone Number"
75339>>>>>        Set Field_Label_Short Field Customer.Phone_Number to "Phone"
75340>>>>>        Set Status_Help Field Customer.Phone_Number to "Telephone Number"
75341>>>>>
75341>>>>>        Set Field_Label_Long Field Customer.Fax_Number to "Fax Number"
75342>>>>>        Set Field_Label_Short Field Customer.Fax_Number to "Fax"
75343>>>>>        Set Status_Help Field Customer.Fax_Number to "Fax Phone Number"
75344>>>>>
75344>>>>>        Set Field_Label_Long Field Customer.Email_Address to "E-Mail Address"
75345>>>>>        Set Field_Label_Short Field Customer.Email_Address to "E-Mail"
75346>>>>>        Set Status_Help Field Customer.Email_Address to "E-Mail Address"
75347>>>>>
75347>>>>>        Set Field_Mask_Type Field Customer.Credit_Limit to Mask_Currency_Window
75348>>>>>        Set Field_Class_Name Field Customer.Credit_Limit to "Spin"
75349>>>>>
75349>>>>>        Set Field_Option Field Customer.Purchases DD_DISPLAYONLY to True
75350>>>>>        Set Field_Mask_Type Field Customer.Purchases to Mask_Currency_Window
75351>>>>>        Set Field_Label_Long Field Customer.Purchases to "Total Purchases"
75352>>>>>        Set Field_Label_Short Field Customer.Purchases to "Purchases"
75353>>>>>
75353>>>>>        Set Field_Option Field Customer.Balance DD_DISPLAYONLY to True
75354>>>>>        Set Field_Mask_Type Field Customer.Balance to Mask_Currency_Window
75355>>>>>        Set Field_Label_Long Field Customer.Balance to "Balance Due"
75356>>>>>        Set Field_Label_Short Field Customer.Balance to "Balance"
75357>>>>>        Set Field_Prompt_Object Field Customer.Balance to Customer_sl
75358>>>>>
75358>>>>>        Set Status_Help Field Customer.Status to "Active/Inactive Status of Customer"
75359>>>>>        Set Field_Checkbox_Values Field Customer.Status to "Y" "N"
75360>>>>>        Set Cascade_Delete_State to False
75361>>>>>
75361>>>>>    End_Procedure
75362>>>>>
75362>>>>>    Procedure Field_Defaults
75364>>>>>        Forward Send Field_Defaults
75366>>>>>        Set Field_Changed_Value Field Customer.State to "the two letter abbreviation of the desired state"
75367>>>>>        Set Field_Changed_Value Field Customer.Credit_Limit to 1000
75368>>>>>        Set Field_Changed_Value Field Customer.Status to "Y"
75369>>>>>    End_Procedure
75370>>>>>
75370>>>>>End_Class
75371>>>>>
75371>>>>>    Use Customer.sl
Including file: Customer.sl    (C:\DataFlex Projects\OrderTutorial\AppSrc\Customer.sl)
75371>>>>>>>// Customer.sl
75371>>>>>>>// Customer Lookup List
75371>>>>>>>
75371>>>>>>>Use DFClient.pkg
75371>>>>>>>Use cDbCJGridPromptList.pkg
75371>>>>>>>Use cDbCJGridColumn.pkg
75371>>>>>>>Use Windows.pkg
75371>>>>>>>
75371>>>>>>>Use cCustomerDataDictionary.dd
75371>>>>>>>
75371>>>>>>>CD_Popup_Object Customer_sl is a dbModalPanel
75389>>>>>>>>
75389>>>>>>>    Set Location to 5 5
75390>>>>>>>    Set Size to 134 260
75391>>>>>>>    Set Label To "Customer Lookup List"
75392>>>>>>>    Set Border_Style to Border_Thick
75393>>>>>>>    Set Minimize_Icon to False
75394>>>>>>>
75394>>>>>>>
75394>>>>>>>    Object oCustomer_DD is a cCustomerDataDictionary
75396>>>>>>>    End_Object 
75397>>>>>>>
75397>>>>>>>    Set Main_DD To oCustomer_DD
75398>>>>>>>    Set Server  To oCustomer_DD
75399>>>>>>>
75399>>>>>>>
75399>>>>>>>
75399>>>>>>>    Object oSelList is a cDbCJGridPromptList
75401>>>>>>>        Set Size to 105 250
75402>>>>>>>        Set Location to 5 5
75403>>>>>>>        Set peAnchors to anAll
75404>>>>>>>        Set psLayoutSection to "Customer_sl_oSelList"
75405>>>>>>>        Set Ordering to 1
75406>>>>>>>        Set pbAutoServer to True
75407>>>>>>>
75407>>>>>>>        Object oCustomer_Customer_Number is a cDbCJGridColumn
75409>>>>>>>            Entry_Item Customer.Customer_Number
75410>>>>>>>            Set piWidth to 60
75411>>>>>>>            Set psCaption to "Number"
75412>>>>>>>        End_Object 
75413>>>>>>>
75413>>>>>>>        Object oCustomer_Name is a cDbCJGridColumn
75415>>>>>>>            Entry_Item Customer.Name
75416>>>>>>>            Set piWidth to 250
75417>>>>>>>            Set psCaption to "Name"
75418>>>>>>>        End_Object 
75419>>>>>>>
75419>>>>>>>        Object oCustomer_Balance is a cDbCJGridColumn
75421>>>>>>>            Entry_Item Customer.Balance
75422>>>>>>>            Set piWidth to 90
75423>>>>>>>            Set psCaption to "Balance"
75424>>>>>>>        End_Object 
75425>>>>>>>
75425>>>>>>>
75425>>>>>>>    End_Object 
75426>>>>>>>
75426>>>>>>>    Object oOk_bn is a Button
75428>>>>>>>        Set Label to "&Ok"
75429>>>>>>>        Set Location to 115 97
75430>>>>>>>        Set peAnchors to anBottomRight
75431>>>>>>>
75431>>>>>>>        Procedure OnClick
75434>>>>>>>            Send OK of oSelList
75435>>>>>>>        End_Procedure
75436>>>>>>>
75436>>>>>>>    End_Object 
75437>>>>>>>
75437>>>>>>>    Object oCancel_bn is a Button
75439>>>>>>>        Set Label to "&Cancel"
75440>>>>>>>        Set Location to 115 151
75441>>>>>>>        Set peAnchors to anBottomRight
75442>>>>>>>
75442>>>>>>>        Procedure OnClick
75445>>>>>>>            Send Cancel of oSelList
75446>>>>>>>        End_Procedure
75447>>>>>>>
75447>>>>>>>    End_Object 
75448>>>>>>>
75448>>>>>>>    Object oSearch_bn is a Button
75450>>>>>>>        Set Label to "&Search..."
75451>>>>>>>        Set Location to 115 205
75452>>>>>>>        Set peAnchors to anBottomRight
75453>>>>>>>
75453>>>>>>>        Procedure OnClick
75456>>>>>>>            Send Search of oSelList
75457>>>>>>>        End_Procedure
75458>>>>>>>
75458>>>>>>>    End_Object 
75459>>>>>>>
75459>>>>>>>    On_Key Key_Alt+Key_O Send KeyAction of oOk_bn
75460>>>>>>>    On_Key Key_Alt+Key_C Send KeyAction of oCancel_bn
75461>>>>>>>    On_Key Key_Alt+Key_S Send KeyAction of oSearch_bn
75462>>>>>>>
75462>>>>>>>
75462>>>>>>>CD_End_Object // Customer_sl
75464>>>>>>>>
75464>>>>>    
75464>>>Use DFEntry.pkg
75464>>>Use dfTabDlg.pkg
75464>>>Use DfCentry.pkg
75464>>>Use DfSpnent.pkg
75464>>>Use cDbTextEdit.pkg
75464>>>
75464>>>Deferred_View Activate_oCustomerView for ;Object oCustomerView is a dbView
75489>>>    Object oCustomer_DD is a cCustomerDataDictionary
75491>>>    End_Object
75492>>>
75492>>>    Set Main_DD to oCustomer_DD
75493>>>    Set Server to oCustomer_DD
75494>>>
75494>>>    Set Border_Style to Border_Thick
75495>>>    Set Size to 247 398
75496>>>    Set Location to 2 2
75497>>>    Set Label to "Customer Entry View"
75498>>>
75498>>>    Object oCustomer_Customer_Number is a dbForm
75500>>>        Entry_Item Customer.Customer_Number
75501>>>        Set Location to 7 75
75502>>>        Set Size to 12 42
75503>>>        Set Label to "Customer Number:"
75504>>>    End_Object
75505>>>
75505>>>    Object oCustomer_Name is a dbForm
75507>>>        Entry_Item Customer.Name
75508>>>        Set Location to 21 75
75509>>>        Set Size to 12 186
75510>>>        Set Label to "Customer Name:"
75511>>>    End_Object
75512>>>
75512>>>    Object oDbTabDialog1 is a dbTabDialog
75514>>>        Set Size to 185 365
75515>>>        Set Location to 41 11
75516>>>        Set Rotate_Mode to RM_Rotate
75517>>>
75517>>>        Object oDbTabPage1 is a dbTabPage
75519>>>            Set Label to "Address"
75520>>>
75520>>>            Object oCustomer_Address is a dbForm
75522>>>                Entry_Item Customer.Address
75523>>>                Set Location to 7 70
75524>>>                Set Size to 12 186
75525>>>                Set Label to "Street Address:"
75526>>>            End_Object
75527>>>
75527>>>            Object oCustomer_City is a dbForm
75529>>>                Entry_Item Customer.City
75530>>>                Set Location to 21 70
75531>>>                Set Size to 12 90
75532>>>                Set Label to "City:"
75533>>>            End_Object
75534>>>
75534>>>            Object oCustomer_State is a dbComboForm
75536>>>                Entry_Item Customer.State
75537>>>                Set Location to 35 70
75538>>>                Set Size to 12 37
75539>>>                Set Label to "State:"
75540>>>            End_Object
75541>>>
75541>>>            Object oCustomer_Zip is a dbForm
75543>>>                Entry_Item Customer.Zip
75544>>>                Set Location to 49 70
75545>>>                Set Size to 12 66
75546>>>                Set Label to "Zip/Postal Code:"
75547>>>            End_Object
75548>>>
75548>>>            Object oCustomer_Phone_Number is a dbForm
75550>>>                Entry_Item Customer.Phone_Number
75551>>>                Set Location to 63 70
75552>>>                Set Size to 12 126
75553>>>                Set Label to "Phone Number:"
75554>>>            End_Object
75555>>>
75555>>>            Object oCustomer_Fax_Number is a dbForm
75557>>>                Entry_Item Customer.Fax_Number
75558>>>                Set Location to 77 70
75559>>>                Set Size to 12 126
75560>>>                Set Label to "Fax Number:"
75561>>>            End_Object
75562>>>
75562>>>            Object oCustomer_Email_Address is a dbForm
75564>>>                Entry_Item Customer.Email_Address
75565>>>                Set Location to 91 70
75566>>>                Set Size to 12 186
75567>>>                Set Label to "E-Mail Address:"
75568>>>            End_Object
75569>>>        End_Object
75570>>>
75570>>>        Object oDbTabPage2 is a dbTabPage
75572>>>            Set Label to "Balances"
75573>>>
75573>>>            Object oCustomer_Credit_Limit is a dbSpinForm
75575>>>                Entry_Item Customer.Credit_Limit
75576>>>                Set Location to 7 81
75577>>>                Set Size to 12 67
75578>>>                Set Label to "Credit Limit:"
75579>>>            End_Object
75580>>>
75580>>>            Object oCustomer_Purchases is a dbForm
75582>>>                Entry_Item Customer.Purchases
75583>>>                Set Location to 21 81
75584>>>                Set Size to 12 54
75585>>>                Set Label to "Total Purchases:"
75586>>>            End_Object
75587>>>
75587>>>            Object oCustomer_Balance is a dbForm
75589>>>                Entry_Item Customer.Balance
75590>>>                Set Location to 35 81
75591>>>                Set Size to 12 54
75592>>>                Set Label to "Balance Due:"
75593>>>            End_Object
75594>>>        End_Object
75595>>>
75595>>>        Object oDbTabPage3 is a dbTabPage
75597>>>            Set Label to "Comments"
75598>>>
75598>>>            Object oCustomer_Comments is a cDbTextEdit
75600>>>                Entry_Item Customer.Comments
75601>>>                Set Location to 19 20
75602>>>                Set Size to 123 316
75603>>>                Set Label to "Comments:"
75604>>>            End_Object
75605>>>        End_Object
75606>>>    End_Object
75607>>>
75607>>>Cd_End_Object
75609>>>>
75609>        Use SalesPersonView.vw
Including file: SalesPersonView.vw    (C:\DataFlex Projects\OrderTutorial\AppSrc\SalesPersonView.vw)
75609>>>// C:\DataFlex Projects\OrderTutorial\AppSrc\SalesPersonView.vw
75609>>>// Sales Person Entry View
75609>>>//
75609>>>
75609>>>Use DFClient.pkg
75609>>>Use DFEntry.pkg
75609>>>
75609>>>Use cSalesPDataDictionary.dd
Including file: cSalesPDataDictionary.dd    (C:\DataFlex Projects\OrderTutorial\DDSrc\cSalesPDataDictionary.dd)
75609>>>>>Use DataDict.pkg
75609>>>>>
75609>>>>>Open SalesP
Including file: SalesP.fd    (C:\DataFlex Projects\OrderTutorial\DDSrc\SalesP.fd)
75611>>>>>
75611>>>>>Register_Object SalesP_sl
75611>>>>>
75611>>>>>Class cSalesPDataDictionary is a DataDictionary
75612>>>>>    
75612>>>>>    Procedure Construct_Object
75614>>>>>        Forward Send Construct_Object
75616>>>>>        Set Main_File to SalesP.File_Number
75617>>>>>
75617>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
75618>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
75619>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
75620>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
75621>>>>>
75621>>>>>        Set Field_Option Field SalesP.Id DD_AUTOFIND to True
75622>>>>>        Set Field_Option Field SalesP.Id DD_CAPSLOCK to True
75623>>>>>        Set Field_Option Field SalesP.Id DD_REQUIRED to True
75624>>>>>        Set Key_Field_State Field SalesP.Id to True
75625>>>>>        Set Field_Label_Long Field SalesP.Id to "Sales Person Id"
75626>>>>>        Set Field_Label_Short Field SalesP.Id to "Id"
75627>>>>>        Set Status_Help Field SalesP.Id to "Sales Person Id code - Upper-case alpha"
75628>>>>>        Set Field_Prompt_Object Field SalesP.Id to SalesP_sl
75629>>>>>
75629>>>>>        Set Status_Help Field SalesP.Name to "Sales Person name - first and last"
75630>>>>>        Set Field_Prompt_Object Field SalesP.Name to SalesP_sl
75631>>>>>        Set Cascade_Delete_State to False
75632>>>>>
75632>>>>>    End_Procedure
75633>>>>>
75633>>>>>End_Class
75634>>>>>
75634>>>>>    Use SalesP.sl
Including file: SalesP.sl    (C:\DataFlex Projects\OrderTutorial\AppSrc\SalesP.sl)
75634>>>>>>>// SalesP.sl
75634>>>>>>>// SalesP Lookup List
75634>>>>>>>
75634>>>>>>>Use DFClient.pkg
75634>>>>>>>Use cDbCJGridPromptList.pkg
75634>>>>>>>Use cDbCJGridColumn.pkg
75634>>>>>>>Use Windows.pkg
75634>>>>>>>
75634>>>>>>>Use cSalesPDataDictionary.dd
75634>>>>>>>
75634>>>>>>>CD_Popup_Object SalesP_sl is a dbModalPanel
75652>>>>>>>>
75652>>>>>>>    Set Location to 5 5
75653>>>>>>>    Set Size to 134 210
75654>>>>>>>    Set Label To "SalesP Lookup List"
75655>>>>>>>    Set Border_Style to Border_Thick
75656>>>>>>>    Set Minimize_Icon to False
75657>>>>>>>
75657>>>>>>>
75657>>>>>>>    Object oSalesP_DD is a cSalesPDataDictionary
75659>>>>>>>    End_Object 
75660>>>>>>>
75660>>>>>>>    Set Main_DD To oSalesP_DD
75661>>>>>>>    Set Server  To oSalesP_DD
75662>>>>>>>
75662>>>>>>>
75662>>>>>>>
75662>>>>>>>    Object oSelList is a cDbCJGridPromptList
75664>>>>>>>        Set Size to 105 200
75665>>>>>>>        Set Location to 5 5
75666>>>>>>>        Set peAnchors to anAll
75667>>>>>>>        Set psLayoutSection to "SalesP_sl_oSelList"
75668>>>>>>>        Set Ordering to 1
75669>>>>>>>        Set pbAutoServer to True
75670>>>>>>>
75670>>>>>>>        Object oSalesP_Id is a cDbCJGridColumn
75672>>>>>>>            Entry_Item SalesP.Id
75673>>>>>>>            Set piWidth to 66
75674>>>>>>>            Set psCaption to "Id"
75675>>>>>>>        End_Object 
75676>>>>>>>
75676>>>>>>>        Object oSalesP_Name is a cDbCJGridColumn
75678>>>>>>>            Entry_Item SalesP.Name
75679>>>>>>>            Set piWidth to 250
75680>>>>>>>            Set psCaption to "Name"
75681>>>>>>>        End_Object 
75682>>>>>>>
75682>>>>>>>
75682>>>>>>>    End_Object 
75683>>>>>>>
75683>>>>>>>    Object oOk_bn is a Button
75685>>>>>>>        Set Label to "&Ok"
75686>>>>>>>        Set Location to 115 47
75687>>>>>>>        Set peAnchors to anBottomRight
75688>>>>>>>
75688>>>>>>>        Procedure OnClick
75691>>>>>>>            Send OK of oSelList
75692>>>>>>>        End_Procedure
75693>>>>>>>
75693>>>>>>>    End_Object 
75694>>>>>>>
75694>>>>>>>    Object oCancel_bn is a Button
75696>>>>>>>        Set Label to "&Cancel"
75697>>>>>>>        Set Location to 115 101
75698>>>>>>>        Set peAnchors to anBottomRight
75699>>>>>>>
75699>>>>>>>        Procedure OnClick
75702>>>>>>>            Send Cancel of oSelList
75703>>>>>>>        End_Procedure
75704>>>>>>>
75704>>>>>>>    End_Object 
75705>>>>>>>
75705>>>>>>>    Object oSearch_bn is a Button
75707>>>>>>>        Set Label to "&Search..."
75708>>>>>>>        Set Location to 115 155
75709>>>>>>>        Set peAnchors to anBottomRight
75710>>>>>>>
75710>>>>>>>        Procedure OnClick
75713>>>>>>>            Send Search of oSelList
75714>>>>>>>        End_Procedure
75715>>>>>>>
75715>>>>>>>    End_Object 
75716>>>>>>>
75716>>>>>>>    On_Key Key_Alt+Key_O Send KeyAction of oOk_bn
75717>>>>>>>    On_Key Key_Alt+Key_C Send KeyAction of oCancel_bn
75718>>>>>>>    On_Key Key_Alt+Key_S Send KeyAction of oSearch_bn
75719>>>>>>>
75719>>>>>>>
75719>>>>>>>CD_End_Object // SalesP_sl
75721>>>>>>>>
75721>>>>>    
75721>>>
75721>>>ACTIVATE_VIEW Activate_oSalesPersonView FOR oSalesPersonView
75731>>>>
75731>>>Object oSalesPersonView is a dbView
75733>>>    Set Location to 5 5
75734>>>    Set Size to 36 215
75735>>>    Set Label To "Sales Person Entry View"
75736>>>    Set Border_Style to Border_Thick
75737>>>
75737>>>
75737>>>    Object oSalesP_DD is a cSalesPDataDictionary
75739>>>    End_Object 
75740>>>
75740>>>    Set Main_DD To oSalesP_DD
75741>>>    Set Server  To oSalesP_DD
75742>>>
75742>>>
75742>>>
75742>>>    Object oSalesPId is a dbForm
75744>>>        Entry_Item SalesP.Id
75745>>>        Set Size to 12 46
75746>>>        Set Location to 5 54
75747>>>        Set peAnchors to anTopLeftRight
75748>>>        Set Label to "Sales Person Id"
75749>>>        Set Label_Justification_mode to jMode_Left
75750>>>        Set Label_Col_Offset to 49
75751>>>        Set Label_row_Offset to 0
75752>>>    End_Object 
75753>>>
75753>>>    Object oSalesPName is a dbForm
75755>>>        Entry_Item SalesP.Name
75756>>>        Set Size to 12 156
75757>>>        Set Location to 19 54
75758>>>        Set peAnchors to anTopLeftRight
75759>>>        Set Label to "Name"
75760>>>        Set Label_Justification_mode to jMode_Left
75761>>>        Set Label_Col_Offset to 49
75762>>>        Set Label_row_Offset to 0
75763>>>    End_Object 
75764>>>
75764>>>
75764>>>End_Object 
75765>        Use VendorView.vw
Including file: VendorView.vw    (C:\DataFlex Projects\OrderTutorial\AppSrc\VendorView.vw)
75765>>>// C:\DataFlex Projects\OrderTutorial\AppSrc\VendorView.vw
75765>>>// Vendor Entry View
75765>>>//
75765>>>
75765>>>Use DFClient.pkg
75765>>>Use DFEntry.pkg
75765>>>Use dfcentry.pkg
75765>>>
75765>>>Use cVendorDataDictionary.dd
Including file: cVendorDataDictionary.dd    (C:\DataFlex Projects\OrderTutorial\DDSrc\cVendorDataDictionary.dd)
75765>>>>>Use DataDict.pkg
75765>>>>>
75765>>>>>Open Vendor
Including file: Vendor.fd    (C:\DataFlex Projects\OrderTutorial\DDSrc\Vendor.fd)
75767>>>>>Open Invt
Including file: Invt.fd    (C:\DataFlex Projects\OrderTutorial\DDSrc\Invt.fd)
75769>>>>>Open OrdSys
75771>>>>>
75771>>>>>Object Vendor_State_VT is a CodeValidationTable
75773>>>>>    Set Type_Value to "STATES"
75774>>>>>End_Object
75775>>>>>
75775>>>>>Register_Object Vendor_sl
75775>>>>>
75775>>>>>Class cVendorDataDictionary is a DataDictionary
75776>>>>>    
75776>>>>>    Procedure Construct_Object
75778>>>>>        Forward Send Construct_Object
75780>>>>>        Set Main_File to Vendor.File_Number
75781>>>>>
75781>>>>>        Set Add_System_File to OrdSys.File_Number DD_Lock_On_All
75782>>>>>
75782>>>>>        Set Add_Client_File to Invt.File_Number
75783>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
75784>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
75785>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
75786>>>>>
75786>>>>>        Set Field_Option Field Vendor.Id DD_AUTOFIND to True
75787>>>>>        Set Field_Option Field Vendor.Id DD_NOPUT to True
75788>>>>>        Set Key_Field_State Field Vendor.Id to True
75789>>>>>        Set Field_Auto_Increment Field Vendor.Id to File_Field OrdSys.Vendor_Number
75790>>>>>        Set Field_Label_Long Field Vendor.Id to "Vendor Id"
75791>>>>>        Set Field_Label_Short Field Vendor.Id to "Vndr Id"
75792>>>>>        Set Status_Help Field Vendor.Id to "Vendor Id Number (system assigned)"
75793>>>>>        Set Field_Prompt_Object Field Vendor.Id to Vendor_sl
75794>>>>>
75794>>>>>        Set Field_Label_Long Field Vendor.Name to "Vendor Name"
75795>>>>>        Set Field_Label_Short Field Vendor.Name to "Name"
75796>>>>>        Set Status_Help Field Vendor.Name to "Vendor Name"
75797>>>>>        Set Field_Prompt_Object Field Vendor.Name to Vendor_sl
75798>>>>>
75798>>>>>        Set Field_Label_Long Field Vendor.Address to "Street Address"
75799>>>>>        Set Field_Label_Short Field Vendor.Address to "Address"
75800>>>>>        Set Status_Help Field Vendor.Address to "Street Address"
75801>>>>>
75801>>>>>        Set Field_Option Field Vendor.State DD_CAPSLOCK to True
75802>>>>>        Set Field_Class_Name Field Vendor.State to "dbComboForm"
75803>>>>>        Set Field_Value_Table Field Vendor.State to Vendor_State_VT
75804>>>>>        Set Field_Label_Long Field Vendor.State to "State"
75805>>>>>        Set Field_Label_Short Field Vendor.State to "St."
75806>>>>>        Set Status_Help Field Vendor.State to "Two Letter State Id"
75807>>>>>
75807>>>>>        Set Field_Mask Field Vendor.Zip to "#####-####"
75808>>>>>        Set Field_Label_Long Field Vendor.Zip to "Zip/Postal Code"
75809>>>>>        Set Field_Label_Short Field Vendor.Zip to "Zip"
75810>>>>>        Set Status_Help Field Vendor.Zip to "Zip or Postal Code"
75811>>>>>
75811>>>>>        Set Field_Label_Long Field Vendor.Phone_Number to "Phone Number"
75812>>>>>        Set Field_Label_Short Field Vendor.Phone_Number to "Phone"
75813>>>>>        Set Status_Help Field Vendor.Phone_Number to "Phone Number"
75814>>>>>
75814>>>>>        Set Field_Label_Long Field Vendor.Fax_Number to "Fax Number"
75815>>>>>        Set Field_Label_Short Field Vendor.Fax_Number to "Fax"
75816>>>>>        Set Status_Help Field Vendor.Fax_Number to "Fax Number"
75817>>>>>
75817>>>>>    End_Procedure
75818>>>>>
75818>>>>>End_Class
75819>>>>>
75819>>>>>    Use Vendor.sl
Including file: Vendor.sl    (C:\DataFlex Projects\OrderTutorial\AppSrc\Vendor.sl)
75819>>>>>>>// Vendor.sl
75819>>>>>>>// Vendor  List
75819>>>>>>>
75819>>>>>>>Use DFClient.pkg
75819>>>>>>>Use cDbCJGridPromptList.pkg
75819>>>>>>>Use cDbCJGridColumn.pkg
75819>>>>>>>Use Windows.pkg
75819>>>>>>>
75819>>>>>>>Use cVendorDataDictionary.dd
75819>>>>>>>
75819>>>>>>>CD_Popup_Object Vendor_sl is a dbModalPanel
75837>>>>>>>>
75837>>>>>>>    Set Location to 5 5
75838>>>>>>>    Set Size to 134 206
75839>>>>>>>    Set Label To "Vendor  List"
75840>>>>>>>    Set Border_Style to Border_Thick
75841>>>>>>>    Set Minimize_Icon to False
75842>>>>>>>
75842>>>>>>>
75842>>>>>>>    Object oVendor_DD is a cVendorDataDictionary
75844>>>>>>>    End_Object 
75845>>>>>>>
75845>>>>>>>    Set Main_DD To oVendor_DD
75846>>>>>>>    Set Server  To oVendor_DD
75847>>>>>>>
75847>>>>>>>
75847>>>>>>>
75847>>>>>>>    Object oSelList is a cDbCJGridPromptList
75849>>>>>>>        Set Size to 105 196
75850>>>>>>>        Set Location to 5 5
75851>>>>>>>        Set peAnchors to anAll
75852>>>>>>>        Set psLayoutSection to "Vendor_sl_oSelList"
75853>>>>>>>        Set Ordering to 1
75854>>>>>>>        Set pbAutoServer to True
75855>>>>>>>
75855>>>>>>>        Object oVendor_Id is a cDbCJGridColumn
75857>>>>>>>            Entry_Item Vendor.Id
75858>>>>>>>            Set piWidth to 60
75859>>>>>>>            Set psCaption to "Vndr Id"
75860>>>>>>>        End_Object 
75861>>>>>>>
75861>>>>>>>        Object oVendor_Name is a cDbCJGridColumn
75863>>>>>>>            Entry_Item Vendor.Name
75864>>>>>>>            Set piWidth to 250
75865>>>>>>>            Set psCaption to "Name"
75866>>>>>>>        End_Object 
75867>>>>>>>
75867>>>>>>>
75867>>>>>>>    End_Object 
75868>>>>>>>
75868>>>>>>>    Object oOk_bn is a Button
75870>>>>>>>        Set Label to "&Ok"
75871>>>>>>>        Set Location to 115 43
75872>>>>>>>        Set peAnchors to anBottomRight
75873>>>>>>>
75873>>>>>>>        Procedure OnClick
75876>>>>>>>            Send OK of oSelList
75877>>>>>>>        End_Procedure
75878>>>>>>>
75878>>>>>>>    End_Object 
75879>>>>>>>
75879>>>>>>>    Object oCancel_bn is a Button
75881>>>>>>>        Set Label to "&Cancel"
75882>>>>>>>        Set Location to 115 97
75883>>>>>>>        Set peAnchors to anBottomRight
75884>>>>>>>
75884>>>>>>>        Procedure OnClick
75887>>>>>>>            Send Cancel of oSelList
75888>>>>>>>        End_Procedure
75889>>>>>>>
75889>>>>>>>    End_Object 
75890>>>>>>>
75890>>>>>>>    Object oSearch_bn is a Button
75892>>>>>>>        Set Label to "&Search..."
75893>>>>>>>        Set Location to 115 151
75894>>>>>>>        Set peAnchors to anBottomRight
75895>>>>>>>
75895>>>>>>>        Procedure OnClick
75898>>>>>>>            Send Search of oSelList
75899>>>>>>>        End_Procedure
75900>>>>>>>
75900>>>>>>>    End_Object 
75901>>>>>>>
75901>>>>>>>    On_Key Key_Alt+Key_O Send KeyAction of oOk_bn
75902>>>>>>>    On_Key Key_Alt+Key_C Send KeyAction of oCancel_bn
75903>>>>>>>    On_Key Key_Alt+Key_S Send KeyAction of oSearch_bn
75904>>>>>>>
75904>>>>>>>
75904>>>>>>>CD_End_Object // Vendor_sl
75906>>>>>>>>
75906>>>>>    
75906>>>
75906>>>ACTIVATE_VIEW Activate_oVendorView FOR oVendorView
75916>>>>
75916>>>Object oVendorView is a dbView
75918>>>    Set Location to 5 5
75919>>>    Set Size to 120 249
75920>>>    Set Label To "Vendor Entry View"
75921>>>    Set Border_Style to Border_Thick
75922>>>
75922>>>
75922>>>    Object oVendor_DD is a cVendorDataDictionary
75924>>>    End_Object 
75925>>>
75925>>>    Set Main_DD To oVendor_DD
75926>>>    Set Server  To oVendor_DD
75927>>>
75927>>>
75927>>>
75927>>>    Object oVendorId is a dbForm
75929>>>        Entry_Item Vendor.Id
75930>>>        Set Size to 12 42
75931>>>        Set Location to 5 58
75932>>>        Set peAnchors to anTopLeftRight
75933>>>        Set Label to "Vendor Id"
75934>>>        Set Label_Justification_mode to jMode_Left
75935>>>        Set Label_Col_Offset to 53
75936>>>        Set Label_row_Offset to 0
75937>>>    End_Object 
75938>>>
75938>>>    Object oVendorName is a dbForm
75940>>>        Entry_Item Vendor.Name
75941>>>        Set Size to 12 186
75942>>>        Set Location to 19 58
75943>>>        Set peAnchors to anTopLeftRight
75944>>>        Set Label to "Vendor Name"
75945>>>        Set Label_Justification_mode to jMode_Left
75946>>>        Set Label_Col_Offset to 53
75947>>>        Set Label_row_Offset to 0
75948>>>    End_Object 
75949>>>
75949>>>    Object oVendorAddress is a dbForm
75951>>>        Entry_Item Vendor.Address
75952>>>        Set Size to 12 186
75953>>>        Set Location to 33 58
75954>>>        Set peAnchors to anTopLeftRight
75955>>>        Set Label to "Street Address"
75956>>>        Set Label_Justification_mode to jMode_Left
75957>>>        Set Label_Col_Offset to 53
75958>>>        Set Label_row_Offset to 0
75959>>>    End_Object 
75960>>>
75960>>>    Object oVendorCity is a dbForm
75962>>>        Entry_Item Vendor.City
75963>>>        Set Size to 12 90
75964>>>        Set Location to 47 58
75965>>>        Set peAnchors to anTopLeftRight
75966>>>        Set Label to "City"
75967>>>        Set Label_Justification_mode to jMode_Left
75968>>>        Set Label_Col_Offset to 53
75969>>>        Set Label_row_Offset to 0
75970>>>    End_Object 
75971>>>
75971>>>    Object oVendorState is a dbComboForm
75973>>>        Entry_Item Vendor.State
75974>>>        Set Size to 12 39
75975>>>        Set Location to 61 58
75976>>>        Set peAnchors to anTopLeftRight
75977>>>        Set Label to "State"
75978>>>        Set Label_Justification_mode to jMode_Left
75979>>>        Set Label_Col_Offset to 53
75980>>>        Set Label_row_Offset to 0
75981>>>    End_Object 
75982>>>
75982>>>    Object oVendorZip is a dbForm
75984>>>        Entry_Item Vendor.Zip
75985>>>        Set Size to 12 66
75986>>>        Set Location to 75 58
75987>>>        Set peAnchors to anTopLeftRight
75988>>>        Set Label to "Zip/Postal Code"
75989>>>        Set Label_Justification_mode to jMode_Left
75990>>>        Set Label_Col_Offset to 53
75991>>>        Set Label_row_Offset to 0
75992>>>    End_Object 
75993>>>
75993>>>    Object oVendorPhone_Number is a dbForm
75995>>>        Entry_Item Vendor.Phone_Number
75996>>>        Set Size to 12 126
75997>>>        Set Location to 89 58
75998>>>        Set peAnchors to anTopLeftRight
75999>>>        Set Label to "Phone Number"
76000>>>        Set Label_Justification_mode to jMode_Left
76001>>>        Set Label_Col_Offset to 53
76002>>>        Set Label_row_Offset to 0
76003>>>    End_Object 
76004>>>
76004>>>    Object oVendorFax_Number is a dbForm
76006>>>        Entry_Item Vendor.Fax_Number
76007>>>        Set Size to 12 126
76008>>>        Set Location to 103 58
76009>>>        Set peAnchors to anTopLeftRight
76010>>>        Set Label to "Fax Number"
76011>>>        Set Label_Justification_mode to jMode_Left
76012>>>        Set Label_Col_Offset to 53
76013>>>        Set Label_row_Offset to 0
76014>>>    End_Object 
76015>>>
76015>>>
76015>>>End_Object 
76016>        Use InventoryView.vw
Including file: InventoryView.vw    (C:\DataFlex Projects\OrderTutorial\AppSrc\InventoryView.vw)
76016>>>// C:\DataFlex Projects\OrderTutorial\AppSrc\InventoryView.vw
76016>>>// Inventory Item View
76016>>>//
76016>>>
76016>>>Use DFClient.pkg
76016>>>Use DFEntry.pkg
76016>>>
76016>>>Use cVendorDataDictionary.dd
76016>>>Use cInvtDataDictionary.dd
Including file: cInvtDataDictionary.dd    (C:\DataFlex Projects\OrderTutorial\DDSrc\cInvtDataDictionary.dd)
76016>>>>>Use DataDict.pkg
76016>>>>>
76016>>>>>Open Invt
76018>>>>>Open Vendor
76020>>>>>Open OrderDtl
Including file: OrderDtl.fd    (C:\DataFlex Projects\OrderTutorial\DDSrc\OrderDtl.fd)
76022>>>>>
76022>>>>>Register_Object Invt_sl
76022>>>>>
76022>>>>>Class cInvtDataDictionary is a DataDictionary
76023>>>>>    
76023>>>>>    Procedure Construct_Object
76025>>>>>        Forward Send Construct_Object
76027>>>>>        Set Main_File to Invt.File_Number
76028>>>>>
76028>>>>>        Set Add_Client_File to OrderDtl.File_Number
76029>>>>>
76029>>>>>        Set Add_Server_File to Vendor.File_Number
76030>>>>>
76030>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
76031>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
76032>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
76033>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
76034>>>>>
76034>>>>>        Set Field_Option Field Invt.Item_Id DD_AUTOFIND to True
76035>>>>>        Set Field_Option Field Invt.Item_Id DD_CAPSLOCK to True
76036>>>>>        Set Key_Field_State Field Invt.Item_Id to True
76037>>>>>        Set Field_Label_Long Field Invt.Item_Id to "Invt.Item Id"
76038>>>>>        Set Field_Label_Short Field Invt.Item_Id to "Item Id"
76039>>>>>        Set Status_Help Field Invt.Item_Id to "Inventory Item ID - user defined identification"
76040>>>>>        Set Field_Prompt_Object Field Invt.Item_Id to Invt_sl
76041>>>>>
76041>>>>>        Set Field_Prompt_Object Field Invt.Description to Invt_sl
76042>>>>>
76042>>>>>        Set Field_Option Field Invt.Vendor_Id DD_CAPSLOCK to True
76043>>>>>        Set Status_Help Field Invt.Vendor_Id to "Vendor Number"
76044>>>>>
76044>>>>>        Set Status_Help Field Invt.Vendor_Part_Id to "Vendor ID name for this item"
76045>>>>>
76045>>>>>        Set Field_Value_Range Field Invt.Unit_Price to 0 999999.99
76046>>>>>        Set Field_Mask_Type Field Invt.Unit_Price to Mask_Currency_Window
76047>>>>>        Set Status_Help Field Invt.Unit_Price to "Retail unit price"
76048>>>>>        Set Field_Prompt_Object Field Invt.Unit_Price to Invt_sl
76049>>>>>
76049>>>>>        Set Field_Value_Range Field Invt.On_Hand to -999999 999999
76050>>>>>        Set Status_Help Field Invt.On_Hand to "Units currently available"
76051>>>>>        Set Field_Prompt_Object Field Invt.On_Hand to Invt_sl
76052>>>>>        Set Cascade_Delete_State to False
76053>>>>>
76053>>>>>    End_Procedure
76054>>>>>
76054>>>>>    Function Validate_Save Returns Integer
76056>>>>>        Integer iRetVal
76056>>>>>        Forward Get Validate_Save to iRetVal
76058>>>>>        
76058>>>>>        If iRetVal Function_Return iRetVal
76061>>>>>        If (Invt.On_Hand < 0) Begin
76063>>>>>            Send UserError "Insufficient Inventory Stock" ""
76064>>>>>            Function_Return iRetVal
76065>>>>>        End
76065>>>>>>
76065>>>>>    End_Function
76066>>>>>
76066>>>>>End_Class
76067>>>>>
76067>>>>>    Use Invt.sl
Including file: Invt.sl    (C:\DataFlex Projects\OrderTutorial\AppSrc\Invt.sl)
76067>>>>>>>// Invt.sl
76067>>>>>>>// Invt Lookup List
76067>>>>>>>
76067>>>>>>>Use DFClient.pkg
76067>>>>>>>Use cDbCJGridPromptList.pkg
76067>>>>>>>Use cDbCJGridColumn.pkg
76067>>>>>>>Use Windows.pkg
76067>>>>>>>
76067>>>>>>>Use cVendorDataDictionary.dd
76067>>>>>>>Use cInvtDataDictionary.dd
76067>>>>>>>
76067>>>>>>>CD_Popup_Object Invt_sl is a dbModalPanel
76085>>>>>>>>
76085>>>>>>>    Set Location to 5 5
76086>>>>>>>    Set Size to 134 353
76087>>>>>>>    Set Label To "Invt Lookup List"
76088>>>>>>>    Set Border_Style to Border_Thick
76089>>>>>>>    Set Minimize_Icon to False
76090>>>>>>>
76090>>>>>>>
76090>>>>>>>    Object oVendor_DD is a cVendorDataDictionary
76092>>>>>>>    End_Object 
76093>>>>>>>
76093>>>>>>>    Object oInvt_DD is a cInvtDataDictionary
76095>>>>>>>        Set DDO_Server To oVendor_DD
76096>>>>>>>    End_Object 
76097>>>>>>>
76097>>>>>>>    Set Main_DD To oInvt_DD
76098>>>>>>>    Set Server  To oInvt_DD
76099>>>>>>>
76099>>>>>>>
76099>>>>>>>
76099>>>>>>>    Object oSelList is a cDbCJGridPromptList
76101>>>>>>>        Set Size to 105 343
76102>>>>>>>        Set Location to 5 5
76103>>>>>>>        Set peAnchors to anAll
76104>>>>>>>        Set psLayoutSection to "Invt_sl_oSelList"
76105>>>>>>>        Set Ordering to 1
76106>>>>>>>        Set pbAutoServer to True
76107>>>>>>>
76107>>>>>>>        Object oInvt_Item_Id is a cDbCJGridColumn
76109>>>>>>>            Entry_Item Invt.Item_Id
76110>>>>>>>            Set piWidth to 150
76111>>>>>>>            Set psCaption to "Item Id"
76112>>>>>>>        End_Object 
76113>>>>>>>
76113>>>>>>>        Object oInvt_Description is a cDbCJGridColumn
76115>>>>>>>            Entry_Item Invt.Description
76116>>>>>>>            Set piWidth to 250
76117>>>>>>>            Set psCaption to "Description"
76118>>>>>>>        End_Object 
76119>>>>>>>
76119>>>>>>>        Object oInvt_Unit_Price is a cDbCJGridColumn
76121>>>>>>>            Entry_Item Invt.Unit_Price
76122>>>>>>>            Set piWidth to 90
76123>>>>>>>            Set psCaption to "Unit Price"
76124>>>>>>>        End_Object 
76125>>>>>>>
76125>>>>>>>        Object oInvt_On_Hand is a cDbCJGridColumn
76127>>>>>>>            Entry_Item Invt.On_Hand
76128>>>>>>>            Set piWidth to 65
76129>>>>>>>            Set psCaption to "On Hand"
76130>>>>>>>        End_Object 
76131>>>>>>>
76131>>>>>>>
76131>>>>>>>    End_Object 
76132>>>>>>>
76132>>>>>>>    Object oOk_bn is a Button
76134>>>>>>>        Set Label to "&Ok"
76135>>>>>>>        Set Location to 115 190
76136>>>>>>>        Set peAnchors to anBottomRight
76137>>>>>>>
76137>>>>>>>        Procedure OnClick
76140>>>>>>>            Send OK of oSelList
76141>>>>>>>        End_Procedure
76142>>>>>>>
76142>>>>>>>    End_Object 
76143>>>>>>>
76143>>>>>>>    Object oCancel_bn is a Button
76145>>>>>>>        Set Label to "&Cancel"
76146>>>>>>>        Set Location to 115 244
76147>>>>>>>        Set peAnchors to anBottomRight
76148>>>>>>>
76148>>>>>>>        Procedure OnClick
76151>>>>>>>            Send Cancel of oSelList
76152>>>>>>>        End_Procedure
76153>>>>>>>
76153>>>>>>>    End_Object 
76154>>>>>>>
76154>>>>>>>    Object oSearch_bn is a Button
76156>>>>>>>        Set Label to "&Search..."
76157>>>>>>>        Set Location to 115 298
76158>>>>>>>        Set peAnchors to anBottomRight
76159>>>>>>>
76159>>>>>>>        Procedure OnClick
76162>>>>>>>            Send Search of oSelList
76163>>>>>>>        End_Procedure
76164>>>>>>>
76164>>>>>>>    End_Object 
76165>>>>>>>
76165>>>>>>>    On_Key Key_Alt+Key_O Send KeyAction of oOk_bn
76166>>>>>>>    On_Key Key_Alt+Key_C Send KeyAction of oCancel_bn
76167>>>>>>>    On_Key Key_Alt+Key_S Send KeyAction of oSearch_bn
76168>>>>>>>
76168>>>>>>>
76168>>>>>>>CD_End_Object // Invt_sl
76170>>>>>>>>
76170>>>>>    
76170>>>
76170>>>ACTIVATE_VIEW Activate_oInventoryView FOR oInventoryView
76180>>>>
76180>>>Object oInventoryView is a dbView
76182>>>    Set Location to 5 5
76183>>>    Set Size to 274 460
76184>>>    Set Label To "Inventory Item View"
76185>>>    Set Border_Style to Border_Thick
76186>>>
76186>>>
76186>>>    Object oVendor_DD is a cVendorDataDictionary
76188>>>    End_Object 
76189>>>
76189>>>    Object oInvt_DD is a cInvtDataDictionary
76191>>>        Set DDO_Server To oVendor_DD
76192>>>    End_Object 
76193>>>
76193>>>    Set Main_DD To oInvt_DD
76194>>>    Set Server  To oInvt_DD
76195>>>
76195>>>
76195>>>
76195>>>    Object oInvtItem_Id is a dbForm
76197>>>        Entry_Item Invt.Item_Id
76198>>>        Set Size to 12 284
76199>>>        Set Location to 5 51
76200>>>        Set peAnchors to anTopLeftRight
76201>>>        Set Label to "Invt.Item Id"
76202>>>        Set Label_Justification_mode to jMode_Left
76203>>>        Set Label_Col_Offset to 46
76204>>>        Set Label_row_Offset to 0
76205>>>    End_Object 
76206>>>
76206>>>    Object oInvtDescription is a dbForm
76208>>>        Entry_Item Invt.Description
76209>>>        Set Size to 12 404
76210>>>        Set Location to 19 51
76211>>>        Set peAnchors to anTopLeftRight
76212>>>        Set Label to "Description"
76213>>>        Set Label_Justification_mode to jMode_Left
76214>>>        Set Label_Col_Offset to 46
76215>>>        Set Label_row_Offset to 0
76216>>>    End_Object 
76217>>>
76217>>>    Object oDbGroup1 is a dbGroup
76219>>>        Set Size to 70 434
76220>>>        Set Location to 44 5
76221>>>        Set Label to "Vendor"
76222>>>
76222>>>        Object oVendorId is a dbForm
76224>>>            Entry_Item Vendor.Id
76225>>>            Set Size to 12 340
76226>>>            Set Location to 17 53
76227>>>            Set peAnchors to anTopLeftRight
76228>>>            Set Label to "Vendor Id"
76229>>>            Set Label_Justification_mode to jMode_Left
76230>>>            Set Label_Col_Offset to 46
76231>>>            Set Label_row_Offset to 0
76232>>>        End_Object 
76233>>>        Object oVendorName is a dbForm
76235>>>            Entry_Item Vendor.Name
76236>>>            Set Size to 12 340
76237>>>            Set Location to 31 53
76238>>>            Set peAnchors to anTopLeftRight
76239>>>            Set Label to "Vendor Name"
76240>>>            Set Label_Justification_mode to jMode_Left
76241>>>            Set Label_Col_Offset to 46
76242>>>            Set Label_row_Offset to 0
76243>>>        End_Object 
76244>>>        Object oInvtVendor_Part_Id is a dbForm
76246>>>            Entry_Item Invt.Vendor_Part_Id
76247>>>            Set Size to 12 340
76248>>>            Set Location to 45 53
76249>>>            Set peAnchors to anTopLeftRight
76250>>>            Set Label to "Vendor Part Id"
76251>>>            Set Label_Justification_mode to jMode_Left
76252>>>            Set Label_Col_Offset to 46
76253>>>            Set Label_row_Offset to 0
76254>>>        End_Object 
76255>>>    End_Object
76256>>>
76256>>>    Object oDbGroup2 is a dbGroup
76258>>>        Set Size to 68 390
76259>>>        Set Location to 116 6
76260>>>        Object oInvtUnit_Price is a dbForm
76262>>>            Entry_Item Invt.Unit_Price
76263>>>            Set Size to 12 129
76264>>>            Set Location to 25 53
76265>>>            Set peAnchors to anTopLeftRight
76266>>>            Set Label to "Unit Price"
76267>>>            Set Label_Justification_mode to jMode_Left
76268>>>            Set Label_Col_Offset to 46
76269>>>            Set Label_row_Offset to 0
76270>>>        End_Object 
76271>>>        Object oInvtOn_Hand is a dbForm
76273>>>            Entry_Item Invt.On_Hand
76274>>>            Set Size to 12 145
76275>>>            Set Location to 23 240
76276>>>            Set peAnchors to anTopLeftRight
76277>>>            Set Label to "On Hand"
76278>>>            Set Label_Justification_mode to jMode_Left
76279>>>            Set Label_Col_Offset to 46
76280>>>            Set Label_row_Offset to 0
76281>>>        End_Object 
76282>>>    End_Object
76283>>>
76283>>>
76283>>>End_Object 
76284>        Use OrderEntryView.vw
Including file: OrderEntryView.vw    (C:\DataFlex Projects\OrderTutorial\AppSrc\OrderEntryView.vw)
76284>>>// C:\DataFlex Projects\OrderTutorial\AppSrc\OrderEntryView.vw
76284>>>// Order Entry View
76284>>>//
76284>>>
76284>>>Use DFClient.pkg
76284>>>Use DFEntry.pkg
76284>>>Use dfSpnEnt.pkg
76284>>>Use DfCEntry.pkg
76284>>>Use cDbCJGrid.pkg
76284>>>Use cDbCJGridColumn.pkg
76284>>>
76284>>>Use cCustomerDataDictionary.dd
76284>>>Use cSalesPDataDictionary.dd
76284>>>Use cVendorDataDictionary.dd
76284>>>Use cOrderHeaDataDictionary.dd
Including file: cOrderHeaDataDictionary.dd    (C:\DataFlex Projects\OrderTutorial\DDSrc\cOrderHeaDataDictionary.dd)
76284>>>>>Use DataDict.pkg
76284>>>>>
76284>>>>>Open OrderHea
76286>>>>>Open Customer
76288>>>>>Open SalesP
76290>>>>>Open OrderDtl
76292>>>>>Open OrdSys
76294>>>>>
76294>>>>>Object Terms_Table is a DescriptionValidationTable
76296>>>>>    Procedure Fill_List
76299>>>>>        Forward Send Fill_List
76301>>>>>        Send Add_Table_Value "NONE" "None established"
76302>>>>>        Send Add_Table_Value "COD" "COD"
76303>>>>>        Send Add_Table_Value "NET30" "Net 30"
76304>>>>>        Send Add_Table_Value "NET60" "Net 60"
76305>>>>>        Send Add_Table_Value "NET90" "Net90"
76306>>>>>        Send Add_Table_Value "PREPAY" "Pre-payment required"
76307>>>>>    End_Procedure
76308>>>>>End_Object
76309>>>>>
76309>>>>>Object Ship_Table is a CodeValidationTable
76311>>>>>    Set Type_Value to "SHIPPING"
76312>>>>>    Set Allow_Blank_State to True
76313>>>>>
76313>>>>>    Procedure Destroy_Object
76316>>>>>        Forward Send Destroy_Object
76318>>>>>    End_Procedure
76319>>>>>End_Object
76320>>>>>
76320>>>>>Register_Object OrderHea_sl
76320>>>>>
76320>>>>>Class cOrderHeaDataDictionary is a DataDictionary
76321>>>>>    
76321>>>>>    Procedure Construct_Object
76323>>>>>        Forward Send Construct_Object
76325>>>>>        Set Main_File to OrderHea.File_Number
76326>>>>>
76326>>>>>        Set Add_System_File to OrdSys.File_Number DD_Lock_On_New_Save_Delete
76327>>>>>
76327>>>>>        Set Add_Client_File to OrderDtl.File_Number
76328>>>>>
76328>>>>>        Set Add_Server_File to Customer.File_Number
76329>>>>>        Set Add_Server_File to SalesP.File_Number
76330>>>>>
76330>>>>>        Set ParentNullAllowed SalesP.File_Number to True
76331>>>>>
76331>>>>>        Set ParentNoSwitchIfCommitted Customer.File_Number to True
76332>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
76333>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
76334>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
76335>>>>>
76335>>>>>        Set Field_Option Field OrderHea.Order_Number DD_AUTOFIND to True
76336>>>>>        Set Key_Field_State Field OrderHea.Order_Number to True
76337>>>>>        Set Field_Auto_Increment Field OrderHea.Order_Number to File_Field OrdSys.Order_Number
76338>>>>>        Set Status_Help Field OrderHea.Order_Number to "Order Number"
76339>>>>>        Set Field_Prompt_Object Field OrderHea.Order_Number to OrderHea_sl
76340>>>>>
76340>>>>>        Set Field_Prompt_Object Field OrderHea.Customer_Number to OrderHea_sl
76341>>>>>
76341>>>>>        Set Field_Class_Name Field OrderHea.Order_Date to "dbSpinForm"
76342>>>>>        Set Field_Mask_Type Field OrderHea.Order_Date to Mask_Date_Window
76343>>>>>        Set Status_Help Field OrderHea.Order_Date to "Date on which the order was placed"
76344>>>>>        Set Field_Entry_msg Field OrderHea.Order_Date to Entry_Order_Date
76345>>>>>        Set Field_Prompt_Object Field OrderHea.Order_Date to OrderHea_sl
76346>>>>>
76346>>>>>        Set Field_Value_Table Field OrderHea.Terms to Terms_Table
76347>>>>>        Set Field_Class_Name Field OrderHea.Terms to "dbComboForm"
76348>>>>>        Set Status_Help Field OrderHea.Terms to "Payment terms"
76349>>>>>
76349>>>>>        Set Field_Value_Table Field OrderHea.Ship_Via to Ship_Table
76350>>>>>        Set Field_Class_Name Field OrderHea.Ship_Via to "dbComboForm"
76351>>>>>        Set Status_Help Field OrderHea.Ship_Via to "Shipping method"
76352>>>>>
76352>>>>>        Set Status_Help Field OrderHea.Ordered_By to "Order placed by"
76353>>>>>
76353>>>>>        Set Field_Label_Long Field OrderHea.Salesperson_Id to "Sales Person Id"
76354>>>>>        Set Field_Label_Short Field OrderHea.Salesperson_Id to "Sales Id"
76355>>>>>        Set Status_Help Field OrderHea.Salesperson_Id to "Sales Person who initiated the order"
76356>>>>>
76356>>>>>        Set Field_Option Field OrderHea.Order_Total DD_DISPLAYONLY to True
76357>>>>>        Set Field_Mask_Type Field OrderHea.Order_Total to Mask_Currency_Window
76358>>>>>        Set Field_Prompt_Object Field OrderHea.Order_Total to OrderHea_sl
76359>>>>>
76359>>>>>    End_Procedure
76360>>>>>
76360>>>>>    Procedure Backout
76362>>>>>        Forward Send Backout
76364>>>>>        Send Adjust_Balances (-OrderHea.Order_Total)
76365>>>>>    End_Procedure
76366>>>>>
76366>>>>>    Procedure Deleting
76368>>>>>        Forward Send Deleting
76370>>>>>    End_Procedure
76371>>>>>
76371>>>>>    Procedure Update
76373>>>>>        Forward Send Update
76375>>>>>        Send Adjust_Balances OrderHea.Order_Total
76376>>>>>    End_Procedure
76377>>>>>    
76377>>>>>    // Add a default date if the field is blank
76377>>>>>    Procedure Entry_Order_Date Integer iField Date dDate
76379>>>>>        Integer iChanged
76379>>>>>
76379>>>>>        Get Field_Changed_State iField to iChanged
76380>>>>>        If (iChanged=0 and dDate=0) Begin
76382>>>>>            Sysdate dDate
76383>>>>>            Set Field_Default_Value iField to dDate
76384>>>>>        End
76384>>>>>>
76384>>>>>    End_Procedure
76385>>>>>    
76385>>>>>    Procedure Adjust_Balances Number Amt
76387>>>>>        Add Amt to Customer.Purchases
76388>>>>>        Add Amt to Customer.Balance
76389>>>>>    End_Procedure
76390>>>>>
76390>>>>>    Procedure Deleting
76392>>>>>        Forward Send Deleting
76394>>>>>    // see if we can decrement the order number in sys file...can only do
76394>>>>>    // this if this is the newest order.
76394>>>>>        If (OrderHea.Order_Number=OrdSys.Order_Number) Begin // if this is
76396>>>>>            Decrement OrdSys.Order_Number          // the last number,
76397>>>>>            SaveRecord OrdSys                      // decrement and save.
76398>>>>>        End
76398>>>>>>
76398>>>>>    End_Procedure
76399>>>>>    
76399>>>>>End_Class
76400>>>>>
76400>>>>>    Use OrderHea.sl
Including file: OrderHea.sl    (C:\DataFlex Projects\OrderTutorial\AppSrc\OrderHea.sl)
76400>>>>>>>// OrderHea.sl
76400>>>>>>>// OrderHea Lookup List
76400>>>>>>>
76400>>>>>>>Use DFClient.pkg
76400>>>>>>>Use cDbCJGridPromptList.pkg
76400>>>>>>>Use cDbCJGridColumn.pkg
76400>>>>>>>Use Windows.pkg
76400>>>>>>>
76400>>>>>>>Use cCustomerDataDictionary.dd
76400>>>>>>>Use cSalesPDataDictionary.dd
76400>>>>>>>Use cOrderHeaDataDictionary.dd
76400>>>>>>>
76400>>>>>>>CD_Popup_Object OrderHea_sl is a dbModalPanel
76418>>>>>>>>
76418>>>>>>>    Set Location to 5 5
76419>>>>>>>    Set Size to 134 388
76420>>>>>>>    Set Label To "OrderHea Lookup List"
76421>>>>>>>    Set Border_Style to Border_Thick
76422>>>>>>>    Set Minimize_Icon to False
76423>>>>>>>
76423>>>>>>>
76423>>>>>>>    Object oCustomer_DD is a cCustomerDataDictionary
76425>>>>>>>    End_Object 
76426>>>>>>>
76426>>>>>>>    Object oSalesP_DD is a cSalesPDataDictionary
76428>>>>>>>    End_Object 
76429>>>>>>>
76429>>>>>>>    Object oOrderHea_DD is a cOrderHeaDataDictionary
76431>>>>>>>        Set DDO_Server To oCustomer_DD
76432>>>>>>>        Set DDO_Server To oSalesP_DD
76433>>>>>>>    End_Object 
76434>>>>>>>
76434>>>>>>>    Set Main_DD To oOrderHea_DD
76435>>>>>>>    Set Server  To oOrderHea_DD
76436>>>>>>>
76436>>>>>>>
76436>>>>>>>
76436>>>>>>>    Object oSelList is a cDbCJGridPromptList
76438>>>>>>>        Set Size to 105 378
76439>>>>>>>        Set Location to 5 5
76440>>>>>>>        Set peAnchors to anAll
76441>>>>>>>        Set psLayoutSection to "OrderHea_sl_oSelList"
76442>>>>>>>        Set Ordering to 1
76443>>>>>>>        Set pbAutoServer to True
76444>>>>>>>
76444>>>>>>>        Object oOrderHea_Order_Number is a cDbCJGridColumn
76446>>>>>>>            Entry_Item OrderHea.Order_Number
76447>>>>>>>            Set piWidth to 93
76448>>>>>>>            Set psCaption to "Order Number"
76449>>>>>>>        End_Object 
76450>>>>>>>
76450>>>>>>>        Object oCustomer_Customer_Number is a cDbCJGridColumn
76452>>>>>>>            Entry_Item Customer.Customer_Number
76453>>>>>>>            Set piWidth to 60
76454>>>>>>>            Set psCaption to "Number"
76455>>>>>>>        End_Object 
76456>>>>>>>
76456>>>>>>>        Object oCustomer_Name is a cDbCJGridColumn
76458>>>>>>>            Entry_Item Customer.Name
76459>>>>>>>            Set piWidth to 250
76460>>>>>>>            Set psCaption to "Name"
76461>>>>>>>        End_Object 
76462>>>>>>>
76462>>>>>>>        Object oOrderHea_Order_Date is a cDbCJGridColumn
76464>>>>>>>            Entry_Item OrderHea.Order_Date
76465>>>>>>>            Set piWidth to 100
76466>>>>>>>            Set psCaption to "Order Date"
76467>>>>>>>        End_Object 
76468>>>>>>>
76468>>>>>>>        Object oOrderHea_Order_Total is a cDbCJGridColumn
76470>>>>>>>            Entry_Item OrderHea.Order_Total
76471>>>>>>>            Set piWidth to 110
76472>>>>>>>            Set psCaption to "Order Total"
76473>>>>>>>        End_Object 
76474>>>>>>>
76474>>>>>>>
76474>>>>>>>    End_Object 
76475>>>>>>>
76475>>>>>>>    Object oOk_bn is a Button
76477>>>>>>>        Set Label to "&Ok"
76478>>>>>>>        Set Location to 115 225
76479>>>>>>>        Set peAnchors to anBottomRight
76480>>>>>>>
76480>>>>>>>        Procedure OnClick
76483>>>>>>>            Send OK of oSelList
76484>>>>>>>        End_Procedure
76485>>>>>>>
76485>>>>>>>    End_Object 
76486>>>>>>>
76486>>>>>>>    Object oCancel_bn is a Button
76488>>>>>>>        Set Label to "&Cancel"
76489>>>>>>>        Set Location to 115 279
76490>>>>>>>        Set peAnchors to anBottomRight
76491>>>>>>>
76491>>>>>>>        Procedure OnClick
76494>>>>>>>            Send Cancel of oSelList
76495>>>>>>>        End_Procedure
76496>>>>>>>
76496>>>>>>>    End_Object 
76497>>>>>>>
76497>>>>>>>    Object oSearch_bn is a Button
76499>>>>>>>        Set Label to "&Search..."
76500>>>>>>>        Set Location to 115 333
76501>>>>>>>        Set peAnchors to anBottomRight
76502>>>>>>>
76502>>>>>>>        Procedure OnClick
76505>>>>>>>            Send Search of oSelList
76506>>>>>>>        End_Procedure
76507>>>>>>>
76507>>>>>>>    End_Object 
76508>>>>>>>
76508>>>>>>>    On_Key Key_Alt+Key_O Send KeyAction of oOk_bn
76509>>>>>>>    On_Key Key_Alt+Key_C Send KeyAction of oCancel_bn
76510>>>>>>>    On_Key Key_Alt+Key_S Send KeyAction of oSearch_bn
76511>>>>>>>
76511>>>>>>>
76511>>>>>>>CD_End_Object // OrderHea_sl
76513>>>>>>>>
76513>>>>>    
76513>>>Use cInvtDataDictionary.dd
76513>>>Use cOrderDtlDataDictionary.dd
Including file: cOrderDtlDataDictionary.dd    (C:\DataFlex Projects\OrderTutorial\DDSrc\cOrderDtlDataDictionary.dd)
76513>>>>>Use DataDict.pkg
76513>>>>>
76513>>>>>Open OrderDtl
76515>>>>>Open OrderHea
76517>>>>>Open Invt
76519>>>>>
76519>>>>>Class cOrderDtlDataDictionary is a DataDictionary
76520>>>>>    
76520>>>>>    Procedure Construct_Object
76522>>>>>        Forward Send Construct_Object
76524>>>>>        Set Main_File to OrderDtl.File_Number
76525>>>>>
76525>>>>>        Set Add_Server_File to OrderHea.File_Number
76526>>>>>        Set Add_Server_File to Invt.File_Number
76527>>>>>
76527>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
76528>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
76529>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
76530>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
76531>>>>>
76531>>>>>        Set Field_Option Field OrderDtl.Order_Number DD_NOPUT to True
76532>>>>>
76532>>>>>        Set Field_Option Field OrderDtl.Detail_Number DD_NOPUT to True
76533>>>>>        Set Field_Auto_Increment Field OrderDtl.Detail_Number to File_Field OrderHea.Last_Detail_Num
76534>>>>>
76534>>>>>        Set Field_Mask_Type Field OrderDtl.Qty_Ordered to Mask_Currency_Window
76535>>>>>        Set Field_Label_Long Field OrderDtl.Qty_Ordered to "Quantity Ordered"
76536>>>>>        Set Field_Label_Short Field OrderDtl.Qty_Ordered to "Quantity"
76537>>>>>        Set Status_Help Field OrderDtl.Qty_Ordered to "Number of items ordered"
76538>>>>>        Set Field_Exit_msg Field OrderDtl.Qty_Ordered to Adjust_Display_Total
76539>>>>>
76539>>>>>        Set Field_Label_Long Field OrderDtl.Price to "Price per Unit"
76540>>>>>        Set Field_Label_Short Field OrderDtl.Price to "Price"
76541>>>>>        Set Status_Help Field OrderDtl.Price to "Price per Unit"
76542>>>>>        Set Field_Entry_msg Field OrderDtl.Price to Entering_Price
76543>>>>>
76543>>>>>        Set Field_Option Field OrderDtl.Extended_Price DD_DISPLAYONLY to True
76544>>>>>        Set Field_Label_Long Field OrderDtl.Extended_Price to "Extended Price"
76545>>>>>        Set Field_Label_Short Field OrderDtl.Extended_Price to "Total"
76546>>>>>        Set Status_Help Field OrderDtl.Extended_Price to "Total extended price"
76547>>>>>
76547>>>>>    End_Procedure
76548>>>>>    
76548>>>>>    Procedure Adjust_Balances Number Qty Number Amt
76550>>>>>        Subtract Qty from Invt.On_Hand
76551>>>>>        Add Amt to Orderhea.Order_Total
76552>>>>>    End_Procedure
76553>>>>>
76553>>>>>    Procedure Backout
76555>>>>>        Forward Send Backout
76557>>>>>        Send Adjust_Balances (-OrderDtl.Qty_Ordered) (-OrderDtl.Extended_Price)
76558>>>>>    End_Procedure
76559>>>>>
76559>>>>>    Procedure Update
76561>>>>>        Forward Send Update
76563>>>>>        Move (OrderDtl.Price * OrderDtl.Qty_Ordered) to OrderDtl.Extended_Price
76564>>>>>        Send Adjust_Balances OrderDtl.Qty_Ordered OrderDtl.Extended_Price
76565>>>>>    End_Procedure
76566>>>>>    
76566>>>>>    Procedure Adjust_Display_Total Integer iField Number nAmnt
76568>>>>>
76568>>>>>        Integer iQty
76568>>>>>        Get Field_Current_Value Field Orderdtl.Qty_Ordered to iQty
76569>>>>>        Get Field_Current_Value Field Orderdtl.Price to nAmnt
76570>>>>>        Set Field_Current_Value Field Orderdtl.Extended_Price to (nAmnt * iQty)
76571>>>>>        // note we set value, but not changed state!
76571>>>>>    End_Procedure
76572>>>>>
76572>>>>>    Procedure Entering_Price Integer Field# Number nAmnt
76574>>>>>        Handle hoInvtDD
76574>>>>>        Boolean bHasRecord
76574>>>>>        
76574>>>>>        Get Data_Set Invt.File_Number to hoInvtDD
76575>>>>>        If (hoInvtDD) Begin
76577>>>>>            Get HasRecord of hoInvtDD to bHasRecord
76578>>>>>            
76578>>>>>        If (nAmnt=0 and bHasRecord) Begin
76580>>>>>            Get File_Field_Current_Value File_Field Invt.Unit_Price to nAmnt
76581>>>>>            Set Field_Changed_Value Field# to nAmnt
76582>>>>>            Send Adjust_Display_Total Field# nAmnt
76583>>>>>           End
76583>>>>>>
76583>>>>>        End
76583>>>>>>
76583>>>>>
76583>>>>>    End_Procedure
76584>>>>>
76584>>>>>End_Class
76585>>>Use Windows.pkg
76585>>>
76585>>>ACTIVATE_VIEW Activate_oOrderEntryView FOR oOrderEntryView
76595>>>>
76595>>>Object oOrderEntryView is a dbView
76597>>>    Set Location to 5 5
76598>>>    Set Size to 250 472
76599>>>    Set Label To "Order Entry View"
76600>>>    Set Border_Style to Border_Thick
76601>>>
76601>>>
76601>>>    Object oCustomer_DD is a cCustomerDataDictionary
76603>>>    End_Object 
76604>>>
76604>>>    Object oSalesP_DD is a cSalesPDataDictionary
76606>>>    End_Object 
76607>>>
76607>>>    Object oVendor_DD is a cVendorDataDictionary
76609>>>    End_Object 
76610>>>
76610>>>    Object oOrderHea_DD is a cOrderHeaDataDictionary
76612>>>        Set DDO_Server To oCustomer_DD
76613>>>        Set DDO_Server To oSalesP_DD
76614>>>        // this lets you save a new parent DD from within child DD
76614>>>        Set Allow_Foreign_New_Save_State to True
76615>>>    End_Object 
76616>>>
76616>>>    Object oInvt_DD is a cInvtDataDictionary
76618>>>        Set DDO_Server To oVendor_DD
76619>>>    End_Object 
76620>>>
76620>>>    Object oOrderDtl_DD is a cOrderDtlDataDictionary
76622>>>        Set DDO_Server To oOrderHea_DD
76623>>>        Set DDO_Server To oInvt_DD
76624>>>        Set Constrain_File To OrderHea.File_Number
76625>>>    End_Object 
76626>>>
76626>>>    Set Main_DD To oOrderHea_DD
76627>>>    Set Server  To oOrderHea_DD
76628>>>
76628>>>
76628>>>
76628>>>    Object oOrderHeaOrder_Number is a dbForm
76630>>>        Entry_Item OrderHea.Order_Number
76631>>>        Set Size to 12 42
76632>>>        Set Location to 5 59
76633>>>        Set peAnchors to anTopLeftRight
76634>>>        Set Label to "Order Number"
76635>>>        Set Label_Justification_mode to jMode_right
76636>>>        Set Label_Col_Offset to 2
76637>>>        Set Label_row_Offset to 0
76638>>>    End_Object 
76639>>>
76639>>>    Object oCustomerCustomer_Number is a dbForm
76641>>>        Entry_Item Customer.Customer_Number
76642>>>        Set Size to 12 42
76643>>>        Set Location to 5 167
76644>>>        Set peAnchors to anTopRight
76645>>>        Set Label to "Customer Number"
76646>>>        Set Label_Justification_mode to jMode_right
76647>>>        Set Label_Col_Offset to 2
76648>>>        Set Label_row_Offset to 0
76649>>>    End_Object 
76650>>>
76650>>>    Object oOrderHeaOrder_Date is a dbSpinForm
76652>>>        Entry_Item OrderHea.Order_Date
76653>>>        Set Size to 12 66
76654>>>        Set Location to 5 250
76655>>>        Set peAnchors to anTopRight
76656>>>        Set Label to "Order Date"
76657>>>        Set Label_Justification_mode to jMode_right
76658>>>        Set Label_Col_Offset to 2
76659>>>        Set Label_row_Offset to 0
76660>>>    End_Object 
76661>>>
76661>>>    Object oCustomerName is a dbForm
76663>>>        Entry_Item Customer.Name
76664>>>        Set Size to 12 186
76665>>>        Set Location to 19 59
76666>>>        Set peAnchors to anTopLeftRight
76667>>>        Set Label to "Customer Name"
76668>>>        Set Label_Justification_mode to jMode_right
76669>>>        Set Label_Col_Offset to 2
76670>>>        Set Label_row_Offset to 0
76671>>>    End_Object 
76672>>>
76672>>>    Object oCustomerAddress is a dbForm
76674>>>        Entry_Item Customer.Address
76675>>>        Set Size to 12 186
76676>>>        Set Location to 33 59
76677>>>        Set peAnchors to anTopLeftRight
76678>>>        Set Label to "Street Address"
76679>>>        Set Label_Justification_mode to jMode_right
76680>>>        Set Label_Col_Offset to 2
76681>>>        Set Label_row_Offset to 0
76682>>>    End_Object 
76683>>>
76683>>>    Object oOrderHeaOrdered_By is a dbForm
76685>>>        Entry_Item OrderHea.Ordered_By
76686>>>        Set Size to 12 78
76687>>>        Set Location to 33 287
76688>>>        Set peAnchors to anTopRight
76689>>>        Set Label to "Ordered By"
76690>>>        Set Label_Justification_mode to jMode_right
76691>>>        Set Label_Col_Offset to 2
76692>>>        Set Label_row_Offset to 0
76693>>>    End_Object 
76694>>>
76694>>>    Object oCustomerCity is a dbForm
76696>>>        Entry_Item Customer.City
76697>>>        Set Size to 12 90
76698>>>        Set Location to 47 59
76699>>>        Set peAnchors to anTopLeftRight
76700>>>        Set Label to "City/State/Zip"
76701>>>        Set Label_Justification_mode to jMode_right
76702>>>        Set Label_Col_Offset to 2
76703>>>        Set Label_row_Offset to 0
76704>>>    End_Object 
76705>>>
76705>>>    Object oCustomerState is a dbComboForm
76707>>>        Entry_Item Customer.State
76708>>>        Set Size to 12 39
76709>>>        Set Location to 47 156
76710>>>        Set peAnchors to anTopRight
76711>>>        Set Label to ""
76712>>>        Set Label_Justification_mode to jMode_right
76713>>>        Set Label_Col_Offset to 2
76714>>>        Set Label_row_Offset to 0
76715>>>    End_Object 
76716>>>
76716>>>    Object oCustomerZip is a dbForm
76718>>>        Entry_Item Customer.Zip
76719>>>        Set Size to 12 66
76720>>>        Set Location to 47 202
76721>>>        Set peAnchors to anTopRight
76722>>>        Set Label to ""
76723>>>        Set Label_Justification_mode to jMode_right
76724>>>        Set Label_Col_Offset to 2
76725>>>        Set Label_row_Offset to 0
76726>>>    End_Object 
76727>>>
76727>>>    Object oSalesPId is a dbForm
76729>>>        Entry_Item SalesP.Id
76730>>>        Set Size to 12 46
76731>>>        Set Location to 47 322
76732>>>        Set peAnchors to anTopRight
76733>>>        Set Label to "Sales Person Id"
76734>>>        Set Label_Justification_mode to jMode_right
76735>>>        Set Label_Col_Offset to 2
76736>>>        Set Label_row_Offset to 0
76737>>>    End_Object 
76738>>>
76738>>>    Object oOrderHeaTerms is a dbComboForm
76740>>>        Entry_Item OrderHea.Terms
76741>>>        Set Size to 12 91
76742>>>        Set Location to 61 59
76743>>>        Set peAnchors to anTopLeftRight
76744>>>        Set Label to "Terms"
76745>>>        Set Label_Justification_mode to jMode_right
76746>>>        Set Label_Col_Offset to 2
76747>>>        Set Label_row_Offset to 0
76748>>>    End_Object 
76749>>>
76749>>>    Object oOrderHeaShip_Via is a dbComboForm
76751>>>        Entry_Item OrderHea.Ship_Via
76752>>>        Set Size to 12 91
76753>>>        Set Location to 61 182
76754>>>        Set peAnchors to anTopRight
76755>>>        Set Label to "Ship Via"
76756>>>        Set Label_Justification_mode to jMode_right
76757>>>        Set Label_Col_Offset to 2
76758>>>        Set Label_row_Offset to 0
76759>>>    End_Object 
76760>>>
76760>>>    Object oDetailGrid is a cDbCJGrid
76762>>>        Set Size to 131 462
76763>>>        Set Location to 83 5
76764>>>        Set Server to oOrderDtl_DD
76765>>>        Set Ordering to 1
76766>>>        Set peAnchors to anAll
76767>>>        Set psLayoutSection to "oOrderEntryView_oDetailGrid"
76768>>>        Set pbAllowInsertRow to False
76769>>>        Set pbHeaderPrompts to True
76770>>>        Set Enabled_State to False
76771>>>
76771>>>        Object oInvt_Item_Id is a cDbCJGridColumn
76773>>>            Entry_Item Invt.Item_Id
76774>>>            Set piWidth to 150
76775>>>            Set psCaption to "Item Id"
76776>>>        End_Object 
76777>>>
76777>>>        Object oInvt_Description is a cDbCJGridColumn
76779>>>            Entry_Item Invt.Description
76780>>>            Set piWidth to 250
76781>>>            Set psCaption to "Description"
76782>>>        End_Object 
76783>>>
76783>>>        Object oInvt_Unit_Price is a cDbCJGridColumn
76785>>>            Entry_Item Invt.Unit_Price
76786>>>            Set piWidth to 90
76787>>>            Set psCaption to "Unit Price"
76788>>>        End_Object 
76789>>>
76789>>>        Object oOrderDtl_Price is a cDbCJGridColumn
76791>>>            Entry_Item OrderDtl.Price
76792>>>            Set piWidth to 90
76793>>>            Set psCaption to "Price"
76794>>>        End_Object 
76795>>>
76795>>>        Object oOrderDtl_Qty_Ordered is a cDbCJGridColumn
76797>>>            Entry_Item OrderDtl.Qty_Ordered
76798>>>            Set piWidth to 63
76799>>>            Set psCaption to "Quantity"
76800>>>        End_Object 
76801>>>
76801>>>        Object oOrderDtl_Extended_Price is a cDbCJGridColumn
76803>>>            Entry_Item OrderDtl.Extended_Price
76804>>>            Set piWidth to 110
76805>>>            Set psCaption to "Total"
76806>>>        End_Object 
76807>>>
76807>>>    End_Object 
76808>>>
76808>>>    //-----------------------------------------------------------------------
76808>>>    // Create custom confirmation messages for save and delete
76808>>>    // We must create the new functions and assign verify messages
76808>>>    // to them.
76808>>>    //-----------------------------------------------------------------------
76808>>>
76808>>>    Function ConfirmDeleteHeader Returns Boolean
76811>>>        Boolean bFail
76811>>>        Get Confirm "Delete Entire Header and all detail?" to bFail
76812>>>        Function_Return bFail
76813>>>    End_Function 
76814>>>
76814>>>    // Only confirm on the saving of new records
76814>>>    Function ConfirmSaveHeader Returns Boolean
76817>>>        Boolean bNoSave bHasRecord
76817>>>        Handle  hoSrvr
76817>>>        Get Server to hoSrvr
76818>>>        Get HasRecord of hoSrvr to bHasRecord
76819>>>        If not bHasRecord Begin
76821>>>            Get Confirm "Save this NEW header?" to bNoSave
76822>>>        End
76822>>>>
76822>>>        Function_Return bNoSave
76823>>>    End_Function 
76824>>>
76824>>>    // Define alternate confirmation Messages
76824>>>    Set Verify_Save_MSG       to (RefFunc(ConfirmSaveHeader))
76825>>>    Set Verify_Delete_MSG     to (RefFunc(ConfirmDeleteHeader))
76826>>>    // Saves in header should not clear the view
76826>>>    Set Auto_Clear_Deo_State to False
76827>>>
76827>>>    Object oPrintBtn is a Button
76829>>>        Set Location to 220 7
76830>>>        Set Label to "Print Order"
76831>>>        Set peAnchors to anBottomLeft
76832>>>    
76832>>>        // fires when the button is clicked
76832>>>        Procedure OnClick
76835>>>            
76835>>>        End_Procedure
76836>>>    
76836>>>    End_Object
76837>>>
76837>>>    Object oOrderHea_Order_Total is a dbForm
76839>>>        Entry_Item OrderHea.Order_Total
76840>>>        Set Location to 221 406
76841>>>        Set Size to 13 60
76842>>>        Set Label to "Order Total:"
76843>>>        Set peAnchors to anBottomRight
76844>>>    End_Object
76845>>>
76845>>>
76845>>>End_Object 
76846>        Use Prime.vw
Including file: Prime.vw    (C:\DataFlex Projects\OrderTutorial\AppSrc\Prime.vw)
76846>>>Use Windows.pkg
76846>>>Use DFClient.pkg
76846>>>
76846>>>Deferred_View Activate_oPrime for ;Object oPrime is a dbView
76871>>>
76871>>>    Set Border_Style to Border_Thick
76872>>>    Set Size to 200 300
76873>>>    Set Location to 2 2
76874>>>    Set Label to "Prime"
76875>>>
76875>>>    Object oButton1 is a Button
76877>>>        Set Size to 18 61
76878>>>        Set Location to 76 108
76879>>>        Set Label to "Calc Prime"
76880>>>    
76880>>>        // fires when the button is clicked
76880>>>        Procedure onClick
76883>>>            Integer iNum iDivisor
76883>>>            Boolean isPrime                    
76883>>>            For iNum from 3 to 50
76889>>>>
76889>>>                Move True to isPrime
76890>>>                // check if the number is divisible by prime numbers up to the square root of the number
76890>>>                For iDivisor from 2 to (Sqrt(iNum))
76896>>>>
76896>>>                //if the iNum is divisible by the iDivisor, is not prime
76896>>>                    If (Mod(iNum, iDivisor) = 0) Begin
76898>>>                        Move False to isPrime
76899>>>                    End
76899>>>>
76899>>>                Loop
76900>>>>
76900>>>                If (isPrime = True) Begin
76902>>>                    Showln iNum
76904>>>                End              
76904>>>>
76904>>>            Loop
76905>>>>
76905>>>        End_Procedure
76906>>>        
76906>>>    End_Object
76907>>>
76907>>>Cd_End_Object
76909>>>>
76909>
76909>        Procedure Activate_About
76912>            Send DoAbout "" "" "" "" ""
76913>        End_Procedure
76914>
76914>    End_Object
76915>
76915>End_Object
76916>
76916>Start_UI
76917>
Summary
Memory Available: 16395759616
Total Warnings : 0
Total Errors   : 0
Total Symbols  : 43904
Total Resources: 0
Total Commands : 76916
Total Windows  : 0
Total Pages    : 0
Static Data    : 545015
Message area   : 544268
Total Blocks   : 28863
